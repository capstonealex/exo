diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..3acc955
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,14 @@
+/canopend/app/canopend
+/canopencomm/canopencomm
+/canopencgi/canopen.cgi
+*.o
+*.bak
+
+/doc/
+
+# eclipse
+.metadata/
+.settings/
+Debug/
+Release/
+
diff --git a/.gitmodules b/.gitmodules
new file mode 100644
index 0000000..72ca495
--- /dev/null
+++ b/.gitmodules
@@ -0,0 +1,3 @@
+[submodule "CANopenNode"]
+	path = CANopenNode
+	url = https://github.com/CANopenNode/CANopenNode.git
diff --git a/LICENSE b/LICENSE
new file mode 100644
index 0000000..1f963da
--- /dev/null
+++ b/LICENSE
@@ -0,0 +1,340 @@
+                    GNU GENERAL PUBLIC LICENSE
+                       Version 2, June 1991
+
+ Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
+ 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+                            Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+License is intended to guarantee your freedom to share and change free
+software--to make sure the software is free for all its users.  This
+General Public License applies to most of the Free Software
+Foundation's software and to any other program whose authors commit to
+using it.  (Some other Free Software Foundation software is covered by
+the GNU Lesser General Public License instead.)  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+this service if you wish), that you receive source code or can get it
+if you want it, that you can change the software or use pieces of it
+in new free programs; and that you know you can do these things.
+
+  To protect your rights, we need to make restrictions that forbid
+anyone to deny you these rights or to ask you to surrender the rights.
+These restrictions translate to certain responsibilities for you if you
+distribute copies of the software, or if you modify it.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must give the recipients all the rights that
+you have.  You must make sure that they, too, receive or can get the
+source code.  And you must show them these terms so they know their
+rights.
+
+  We protect your rights with two steps: (1) copyright the software, and
+(2) offer you this license which gives you legal permission to copy,
+distribute and/or modify the software.
+
+  Also, for each author's protection and ours, we want to make certain
+that everyone understands that there is no warranty for this free
+software.  If the software is modified by someone else and passed on, we
+want its recipients to know that what they have is not the original, so
+that any problems introduced by others will not reflect on the original
+authors' reputations.
+
+  Finally, any free program is threatened constantly by software
+patents.  We wish to avoid the danger that redistributors of a free
+program will individually obtain patent licenses, in effect making the
+program proprietary.  To prevent this, we have made it clear that any
+patent must be licensed for everyone's free use or not licensed at all.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+                    GNU GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License applies to any program or other work which contains
+a notice placed by the copyright holder saying it may be distributed
+under the terms of this General Public License.  The "Program", below,
+refers to any such program or work, and a "work based on the Program"
+means either the Program or any derivative work under copyright law:
+that is to say, a work containing the Program or a portion of it,
+either verbatim or with modifications and/or translated into another
+language.  (Hereinafter, translation is included without limitation in
+the term "modification".)  Each licensee is addressed as "you".
+
+Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running the Program is not restricted, and the output from the Program
+is covered only if its contents constitute a work based on the
+Program (independent of having been made by running the Program).
+Whether that is true depends on what the Program does.
+
+  1. You may copy and distribute verbatim copies of the Program's
+source code as you receive it, in any medium, provided that you
+conspicuously and appropriately publish on each copy an appropriate
+copyright notice and disclaimer of warranty; keep intact all the
+notices that refer to this License and to the absence of any warranty;
+and give any other recipients of the Program a copy of this License
+along with the Program.
+
+You may charge a fee for the physical act of transferring a copy, and
+you may at your option offer warranty protection in exchange for a fee.
+
+  2. You may modify your copy or copies of the Program or any portion
+of it, thus forming a work based on the Program, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) You must cause the modified files to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    b) You must cause any work that you distribute or publish, that in
+    whole or in part contains or is derived from the Program or any
+    part thereof, to be licensed as a whole at no charge to all third
+    parties under the terms of this License.
+
+    c) If the modified program normally reads commands interactively
+    when run, you must cause it, when started running for such
+    interactive use in the most ordinary way, to print or display an
+    announcement including an appropriate copyright notice and a
+    notice that there is no warranty (or else, saying that you provide
+    a warranty) and that users may redistribute the program under
+    these conditions, and telling the user how to view a copy of this
+    License.  (Exception: if the Program itself is interactive but
+    does not normally print such an announcement, your work based on
+    the Program is not required to print an announcement.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Program,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Program, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Program.
+
+In addition, mere aggregation of another work not based on the Program
+with the Program (or with a work based on the Program) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may copy and distribute the Program (or a work based on it,
+under Section 2) in object code or executable form under the terms of
+Sections 1 and 2 above provided that you also do one of the following:
+
+    a) Accompany it with the complete corresponding machine-readable
+    source code, which must be distributed under the terms of Sections
+    1 and 2 above on a medium customarily used for software interchange; or,
+
+    b) Accompany it with a written offer, valid for at least three
+    years, to give any third party, for a charge no more than your
+    cost of physically performing source distribution, a complete
+    machine-readable copy of the corresponding source code, to be
+    distributed under the terms of Sections 1 and 2 above on a medium
+    customarily used for software interchange; or,
+
+    c) Accompany it with the information you received as to the offer
+    to distribute corresponding source code.  (This alternative is
+    allowed only for noncommercial distribution and only if you
+    received the program in object code or executable form with such
+    an offer, in accord with Subsection b above.)
+
+The source code for a work means the preferred form of the work for
+making modifications to it.  For an executable work, complete source
+code means all the source code for all modules it contains, plus any
+associated interface definition files, plus the scripts used to
+control compilation and installation of the executable.  However, as a
+special exception, the source code distributed need not include
+anything that is normally distributed (in either source or binary
+form) with the major components (compiler, kernel, and so on) of the
+operating system on which the executable runs, unless that component
+itself accompanies the executable.
+
+If distribution of executable or object code is made by offering
+access to copy from a designated place, then offering equivalent
+access to copy the source code from the same place counts as
+distribution of the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  4. You may not copy, modify, sublicense, or distribute the Program
+except as expressly provided under this License.  Any attempt
+otherwise to copy, modify, sublicense or distribute the Program is
+void, and will automatically terminate your rights under this License.
+However, parties who have received copies, or rights, from you under
+this License will not have their licenses terminated so long as such
+parties remain in full compliance.
+
+  5. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Program or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Program (or any work based on the
+Program), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Program or works based on it.
+
+  6. Each time you redistribute the Program (or any work based on the
+Program), the recipient automatically receives a license from the
+original licensor to copy, distribute or modify the Program subject to
+these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties to
+this License.
+
+  7. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Program at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Program by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Program.
+
+If any portion of this section is held invalid or unenforceable under
+any particular circumstance, the balance of the section is intended to
+apply and the section as a whole is intended to apply in other
+circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system, which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  8. If the distribution and/or use of the Program is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Program under this License
+may add an explicit geographical distribution limitation excluding
+those countries, so that distribution is permitted only in or among
+countries not thus excluded.  In such case, this License incorporates
+the limitation as if written in the body of this License.
+
+  9. The Free Software Foundation may publish revised and/or new versions
+of the General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Program
+specifies a version number of this License which applies to it and "any
+later version", you have the option of following the terms and conditions
+either of that version or of any later version published by the Free
+Software Foundation.  If the Program does not specify a version number of
+this License, you may choose any version ever published by the Free Software
+Foundation.
+
+  10. If you wish to incorporate parts of the Program into other free
+programs whose distribution conditions are different, write to the author
+to ask for permission.  For software which is copyrighted by the Free
+Software Foundation, write to the Free Software Foundation; we sometimes
+make exceptions for this.  Our decision will be guided by the two goals
+of preserving the free status of all derivatives of our free software and
+of promoting the sharing and reuse of software generally.
+
+                            NO WARRANTY
+
+  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
+FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
+OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
+PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
+OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
+TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
+PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
+REPAIR OR CORRECTION.
+
+  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
+REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
+INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
+OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
+TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
+YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
+PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
+POSSIBILITY OF SUCH DAMAGES.
+
+                     END OF TERMS AND CONDITIONS
+
+            How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License along
+    with this program; if not, write to the Free Software Foundation, Inc.,
+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+
+Also add information on how to contact you by electronic and paper mail.
+
+If the program is interactive, make it output a short notice like this
+when it starts in an interactive mode:
+
+    Gnomovision version 69, Copyright (C) year name of author
+    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, the commands you use may
+be called something other than `show w' and `show c'; they could even be
+mouse-clicks or menu items--whatever suits your program.
+
+You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a "copyright disclaimer" for the program, if
+necessary.  Here is a sample; alter the names:
+
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
+  `Gnomovision' (which makes passes at compilers) written by James Hacker.
+
+  <signature of Ty Coon>, 1 April 1989
+  Ty Coon, President of Vice
+
+This General Public License does not permit incorporating your program into
+proprietary programs.  If your program is a subroutine library, you may
+consider it more useful to permit linking proprietary applications with the
+library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License.
+
diff --git a/README.md b/README.md
new file mode 100644
index 0000000..a666b06
--- /dev/null
+++ b/README.md
@@ -0,0 +1,312 @@
+CANopenSocket
+=============
+
+CANopenSocket is a collection of CANopen tools running on Linux with socketCAN interface.
+
+It is based on [CANopenNode](https://github.com/CANopenNode/CANopenNode),
+which is free and open source CANopen Stack and is included as a git submodule.
+
+CANopen is the internationally standardized (EN 50325-4)
+([CiA301](http://can-cia.org/standardization/technical-documents))
+CAN-based higher-layer protocol for embedded control system. For more
+information on CANopen see http://www.can-cia.org/
+
+CANopenSocket may be used as a master or a slave device. However, CANopen itself is not a
+typical master/slave protocol. It is more like producer/consumer protocol. It is also
+possible to operate CANopen network without a master. Pre-configured process data (PDO)
+are transmitted from producers. Each PDO may be consumed by multiple nodes.
+
+Master functionality of CANopenNode contains command line interface with SDO and NMT master
+commands. With SDO master (or SDO client) it is possible to read or write any variable on any device
+on the CANopen Network. NMT master can start, stop or reset nodes.
+
+CANopenNode should run on any Linux machine. Examples below was tested on Debian based machines,
+including **Ubuntu**, **Beaglebone Black** and **Raspberry PI**. It is possible to run tests described
+below without real CAN interface, because Linux kernel already contains virtual CAN interface.
+
+CANopenSocket consists of two applications: **canopend**, which runs in background, and
+**canopencomm**, command interface for SDO and NMT master.
+
+
+### canopend
+**canopend** is an implementation of CANopen device with master functionality. It runs within three
+threads. Realtime thread processes CANopen SYNC and PDO objects. Mainline thread processes other
+non time critical objects. Both are nonblocking. Command interface thread is blocking. It accepts
+commands from socket connection from external application and executes master SDO and NMT tasks.
+
+
+### canopencomm
+**canopencomm** is the other end of the Command interface. It accepts text commands form arguments
+or from standard input or from file. It sends commands to *canopend* via socket, line after line.
+Received result is printed to standard output. It is implementation of the CiA 309 standard.
+
+
+License
+-------
+CANopenSocket is free and open source software: you can redistribute
+it and/or modify it under the terms of the GNU General Public License
+as published by the Free Software Foundation, either version 2 of the
+License, or (at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program. If not, see <http://www.gnu.org/licenses/>.
+
+
+Getting started with CANopen Socket
+-----------------------------------
+
+We will run two instances of *CANopend*. First will be basic node with ID=4,
+second, with nodeID = 3, will have master functionality.
+
+
+### Get the project
+
+Clone the project from git repository and get submodules:
+
+    $ git clone https://github.com/CANopenNode/CANopenSocket.git
+    $ cd CANopenSocket
+    $ git submodule init
+    $ git submodule update
+
+(If you want to work on submodule CANopenNode, you can `cd CANopenNode`,
+and apply git commands directly on it. Initially is in head detached state,
+so you have to `git checkout master` first. Then you can control submodule
+separately, for example `git remote add {yourName} {url-of-your-git-repository}`,
+and `git pull {yourName} {yourbranch}`)
+
+
+### First terminal: CAN dump
+
+Prepare CAN virtual (or real) device:
+
+    $ sudo modprobe vcan
+    $ sudo ip link add dev vcan0 type vcan
+    $ sudo ip link set up vcan0
+
+Run candump from [can-utils](https://github.com/linux-can/can-utils):
+
+    $ sudo apt-get install can-utils
+    $ candump vcan0
+
+It will show all CAN traffic on vcan0.
+
+
+### Second terminal: canopend
+
+Start second terminal, compile and start *canopend*.
+
+    $ cd CANopenSocket/canopend
+    $ make
+    $ app/canopend --help
+    $ app/canopend vcan0 -i 4 -s od4_storage -a od4_storage_auto
+
+You should now see CAN messages on CAN dump terminal. Wait few seconds and
+press CTRL-C.
+
+    vcan0  704   [1]  00                        # Bootup message.
+    vcan0  084   [8]  00 50 01 2F F3 FF FF FF   # Emergency message.
+    vcan0  704   [1]  7F                        # Heartbeat messages
+    vcan0  704   [1]  7F                        # one per second.
+
+Heartbeat messages shows pre-operational state (0x7F). If you follow byte 4 of the
+Emergency message into [CANopenNode/stack/CO_Emergency.h],
+CO_EM_errorStatusBits, you will see under 0x2F "CO_EM_NON_VOLATILE_MEMORY",
+which is generic, critical error with access to non volatile device memory.
+This byte is CANopenNode specific. You can observe also first two bytes,
+which shows standard error code (0x5000 - Device Hardware) or third byte,
+which shows error register. If error register is different than zero, then
+node is not able to enter operational and PDOs can not be exchanged with it.
+
+You can follow the reason of the problem inside the source code. However,
+there are missing non-default storage files. Add them and run it again.
+
+    $ echo - > od4_storage
+    $ echo - > od4_storage_auto
+    $ app/canopend vcan0 -i 4 -s od4_storage -a od4_storage_auto
+
+    vcan0  704   [1]  00
+    vcan0  184   [2]  00 00                     # PDO message
+    vcan0  704   [1]  05
+
+Now there is operational state (0x05) and there shows one PDO on CAN
+address 0x184. To learn more about PDOs, how to configure communication
+and mapping parameters and how to use them see other sources of CANopen
+documentation (For example article of PDO re-mapping procedure in [CAN
+newsletter magazine, June 2016](http://can-newsletter.org/engineering/engineering-miscellaneous/160601_can-newsletter-magazine-june-2016) ).
+
+Start also second instance of *canopend* (master on nodeID=3) in the same
+window (*canopend terminal*). Use default od_storage files and default
+socket for command interface.
+
+    $ # press CTRL-Z
+    $ bg
+    $ app/canopend vcan0 -i 3 -c ""
+
+
+### Third terminal: canopencomm
+
+Start third terminal, compile and start canopencomm.
+
+    $ cd CANopenSocket/canopencomm
+    $ make
+    $ ./canopencomm --help
+
+#### SDO master
+
+Play with it and also observe CAN dump terminal. First Heartbeat at
+index 0x1017, subindex 0, 16-bit integer, on nodeID 4.
+
+    $ ./canopencomm [1] 4 read 0x1017 0 i16
+    $ ./canopencomm [1] 4 write 0x1017 0 i16 5000
+
+In CAN dump you can see some SDO communication. You will notice, that
+Heartbeats from node 4 are coming in 5 second interval now. You can do
+the same also for node 3. Now store Object dictionary, so it will preserve
+variables on next start of the program.
+
+    $ ./canopencomm 4 w 0x1010 1 u32 0x65766173
+
+You can read more about Object dictionary variables for this
+CANopenNode in [canopend/CANopenSocket.html].
+
+
+#### NMT master
+If node is operational (started), it can exchange all objects, including
+PDO, SDO, etc. In pre-operational, PDOs are disabled, SDOs works. In stopped
+only NMT messages are accepted.
+
+    $ ./canopencomm 4 preop
+    $ ./canopencomm 4 start
+    $ ./canopencomm 4 stop
+    $ ./canopencomm 4 r 0x1017 0 i16 		# time out
+    $ ./canopencomm 4 reset communication
+    $ ./canopencomm 4 reset node
+    $ ./canopencomm 3 reset node
+
+In *canopend terminal* you see, that both devices finished. Further commands
+are not possible. If you set so, last command can also reset computer.
+
+
+### Next steps
+Now you can learn more skills on CANopen from some other sources:
+books, data sheet of some CANopen device, standard CiA 301(it's free), etc.
+Then you can enter the big world of [CANopen devices](http://can-newsletter.org/hardware).
+
+
+Accessing real CANopen devices is the same as described above for virtual CAN interface.
+Some tested USB to CAN interfaces, which are natively integrated into Linux are:
+
+ - Simple serial [USBtin](http://www.fischl.de/usbtin/) - Start with: `sudo slcand -f -o -c -s8 /dev/ttyACM0 can0; sudo ip link set up can0`
+ - [EMS CPC-USB](http://www.ems-wuensche.com/product/datasheet/html/can-usb-adapter-converter-interface-cpcusb.html) - Start with: `sudo ip link set up can0 type can bitrate 250000`
+ - [PCAN-USB FD](http://www.peak-system.com/PCAN-USB-FD.365.0.html?&L=1) - Needs newer Linux kernel, supports CAN flexible data rate.
+ - You can get the idea of other supported CAN interfaces in [Linux kernel source](https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/drivers/net/can).
+ - Beaglebone or Paspberry PI or similar has CAN capes available. On RPI worked
+   also the above USB interfaces, but it was necessary to compile the kernel.
+
+
+With [CANopenNode](https://github.com/CANopenNode/CANopenNode) you can also design your
+own device. There are many very useful and high quality specifications for different
+[device profiles](http://www.can-cia.org/standardization/specifications/),
+some of them are public and free to download.
+
+
+Here we played with virtual CAN interface and result shows as pixels on
+screen. If you connect real CAN interface to your computer, things may
+become dangerous. Keep control and safety on your machines!
+
+
+### LSS extension
+LSS (Layer settings service) is a extension to CANopen described in CiA DSP 305. The 
+interface is described in CiA DS 309 2.1.0 (ASCII mapping).
+LSS allows the user to change node ID and bitrate, as well as setting the node ID on an
+unconfigured node.
+
+LSS uses the the OD Identity register as an unique value to select a node. Therefore
+the LSS address always consists of four 32 bit values. This also means that LSS relies 
+on this register to actually be unique.
+
+To use LSS, a compatible node is needed. Note that canopend only includes LSS master 
+functionality.
+
+The following example show some typical use cases for LSS:
+
+ - Changing the node ID for a known slave, store the new node ID to eeprom, apply new node ID.
+   The node currently has the node ID 22.
+    $ ./canopencomm lss_switch_sel 0x00000428 0x00000431 0x00000002 0x5C17EEBC 
+    $ ./canopencomm lss_set_node 4
+    $ ./canopencomm lss_store
+    $ ./canopencomm lss_switch_glob 0
+    $ ./canopencomm 22 reset communication
+    
+   Note that the node ID change is not done until reset communication/node
+    
+ - Changing the node ID for a known slave, store the new node ID to eeprom, apply new node ID.
+   The node currently has an invalid node ID.
+    $ ./canopencomm lss_switch_sel 0x00000428 0x00000431 0x00000002 0x5C17EEBC 
+    $ ./canopencomm lss_set_node 4
+    $ ./canopencomm lss_store
+    $ ./canopencomm lss_switch_glob 0
+    
+   Note that the node ID is automatically applied.
+    
+ - Search for a node via LSS fastscan, store the new node ID to eeprom, apply new node ID
+ 
+    $ ./canopencomm [1] _lss_fastscan
+    
+    [1] 0x00000428 0x00000432 0x00000002 0x6C81413C
+    
+    $ ./canopencomm lss_set_node 4
+    $ ./canopencomm lss_store
+    $ ./canopencomm lss_switch_glob 0
+ 
+   To increase scanning speed, you can use 
+   
+    $ ./canopencomm [1] _lss_fastscan 25
+    
+   where 25 is the scan step delay in ms. Be aware that the scan will become unreliable when
+   the delay is set to low.
+   
+ - Auto enumerate all nodes via LSS fastscan. Enumeration automatically begins at node ID 2
+   and node ID is automatically stored to eeprom. Like with _lss_fastscan, an optional 
+   parameter can be used to change default delay time.
+ 
+    $ ./canopencomm lss_allnodes
+    
+    [1] OK, found 3 nodes starting at node ID 2.
+
+ - To get further control over the fastscan process, the lss_allnodes command supports 
+   an extended parameter set. If you want to use this set, all parameters are mandatory. 
+   Auto enumerate all nodes via LSS fastscan. Set delay time to 25ms, set enumeration start
+   to node ID 7, do not store LSS address in eeprom, enumerate only devices with vendor ID
+   "0x428", ignore product code and software revision, scan for serial number
+    
+    $ ./canopencomm lss_allnodes 25 7 0 2 0x428 1 0 1 0 0 0
+    
+    [1] OK, found 2 nodes starting at node ID 7.
+    
+   The parameters are as following:
+   - 25     scan step delay time in ms
+   - 7      enumeration start
+   - 0      store node IDs to eeprom; 0 = no, 1 = yes
+   - 2      vendor ID scan selector; 0 = fastscan, 2 = match value in next parameter
+   - 0x428  vendor ID to match
+   - 1      product code scan selector; 0 = fastscan, 1 = ignore, 2 = match value in next parameter
+   - 0      product code to match (ignored in this example)
+   - 1      software version scan selector; 0 = fastscan, 1 = ignore, 2 = match value in next parameter
+   - 0      software version to match (ignored in this example)
+   - 0      serial number scan selector; 0 = fastscan, 1 = ignore, 2 = match value in next parameter
+   - 0      serial number to match (not used in this example)
+ 
+ Note that only unconfigured nodes (those without a valid node ID) will take part in
+ fastscan!
+ 
+    
+
+
+
+
diff --git a/canopencomm/.cproject b/canopencomm/.cproject
new file mode 100644
index 0000000..5391c77
--- /dev/null
+++ b/canopencomm/.cproject
@@ -0,0 +1,105 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<?fileVersion 4.0.0?><cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
+	<storageModule moduleId="org.eclipse.cdt.core.settings">
+		<cconfiguration id="cdt.managedbuild.config.gnu.exe.debug.999307856">
+			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.gnu.exe.debug.999307856" moduleId="org.eclipse.cdt.core.settings" name="Debug">
+				<externalSettings/>
+				<extensions>
+					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.CWDLocator" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
+				</extensions>
+			</storageModule>
+			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
+				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug,org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.gnu.exe.debug.999307856" name="Debug" parent="cdt.managedbuild.config.gnu.exe.debug">
+					<folderInfo id="cdt.managedbuild.config.gnu.exe.debug.999307856." name="/" resourcePath="">
+						<toolChain id="cdt.managedbuild.toolchain.gnu.exe.debug.1148495654" name="Linux GCC" superClass="cdt.managedbuild.toolchain.gnu.exe.debug">
+							<targetPlatform id="cdt.managedbuild.target.gnu.platform.exe.debug.1224145185" name="Debug Platform" superClass="cdt.managedbuild.target.gnu.platform.exe.debug"/>
+							<builder buildPath="${workspace_loc:/CANopenCommand}/Debug" id="cdt.managedbuild.target.gnu.builder.exe.debug.1093738551" managedBuildOn="true" name="Gnu Make Builder.Debug" superClass="cdt.managedbuild.target.gnu.builder.exe.debug"/>
+							<tool id="cdt.managedbuild.tool.gnu.archiver.base.1296732028" name="GCC Archiver" superClass="cdt.managedbuild.tool.gnu.archiver.base"/>
+							<tool id="cdt.managedbuild.tool.gnu.cpp.compiler.exe.debug.1442706316" name="GCC C++ Compiler" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.exe.debug">
+								<option id="gnu.cpp.compiler.exe.debug.option.optimization.level.506949253" superClass="gnu.cpp.compiler.exe.debug.option.optimization.level" value="gnu.cpp.compiler.optimization.level.none" valueType="enumerated"/>
+								<option id="gnu.cpp.compiler.exe.debug.option.debugging.level.1472947357" superClass="gnu.cpp.compiler.exe.debug.option.debugging.level" value="gnu.cpp.compiler.debugging.level.max" valueType="enumerated"/>
+							</tool>
+							<tool id="cdt.managedbuild.tool.gnu.c.compiler.exe.debug.434615368" name="GCC C Compiler" superClass="cdt.managedbuild.tool.gnu.c.compiler.exe.debug">
+								<option defaultValue="gnu.c.optimization.level.none" id="gnu.c.compiler.exe.debug.option.optimization.level.393129829" superClass="gnu.c.compiler.exe.debug.option.optimization.level" valueType="enumerated"/>
+								<option id="gnu.c.compiler.exe.debug.option.debugging.level.1035146694" superClass="gnu.c.compiler.exe.debug.option.debugging.level" value="gnu.c.debugging.level.max" valueType="enumerated"/>
+								<inputType id="cdt.managedbuild.tool.gnu.c.compiler.input.359179812" superClass="cdt.managedbuild.tool.gnu.c.compiler.input"/>
+							</tool>
+							<tool id="cdt.managedbuild.tool.gnu.c.linker.exe.debug.1564481539" name="GCC C Linker" superClass="cdt.managedbuild.tool.gnu.c.linker.exe.debug">
+								<inputType id="cdt.managedbuild.tool.gnu.c.linker.input.1334889170" superClass="cdt.managedbuild.tool.gnu.c.linker.input">
+									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
+									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
+								</inputType>
+							</tool>
+							<tool id="cdt.managedbuild.tool.gnu.cpp.linker.exe.debug.805280978" name="GCC C++ Linker" superClass="cdt.managedbuild.tool.gnu.cpp.linker.exe.debug"/>
+							<tool id="cdt.managedbuild.tool.gnu.assembler.exe.debug.1395324952" name="GCC Assembler" superClass="cdt.managedbuild.tool.gnu.assembler.exe.debug">
+								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.144426316" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
+							</tool>
+						</toolChain>
+					</folderInfo>
+				</configuration>
+			</storageModule>
+			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
+		</cconfiguration>
+		<cconfiguration id="cdt.managedbuild.config.gnu.exe.release.501065681">
+			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.gnu.exe.release.501065681" moduleId="org.eclipse.cdt.core.settings" name="Release">
+				<externalSettings/>
+				<extensions>
+					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.CWDLocator" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
+				</extensions>
+			</storageModule>
+			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
+				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release,org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.gnu.exe.release.501065681" name="Release" parent="cdt.managedbuild.config.gnu.exe.release">
+					<folderInfo id="cdt.managedbuild.config.gnu.exe.release.501065681." name="/" resourcePath="">
+						<toolChain id="cdt.managedbuild.toolchain.gnu.exe.release.1431432337" name="Linux GCC" superClass="cdt.managedbuild.toolchain.gnu.exe.release">
+							<targetPlatform id="cdt.managedbuild.target.gnu.platform.exe.release.612319431" name="Debug Platform" superClass="cdt.managedbuild.target.gnu.platform.exe.release"/>
+							<builder buildPath="${workspace_loc:/CANopenCommand}/Release" id="cdt.managedbuild.target.gnu.builder.exe.release.557695164" managedBuildOn="true" name="Gnu Make Builder.Release" superClass="cdt.managedbuild.target.gnu.builder.exe.release"/>
+							<tool id="cdt.managedbuild.tool.gnu.archiver.base.30956698" name="GCC Archiver" superClass="cdt.managedbuild.tool.gnu.archiver.base"/>
+							<tool id="cdt.managedbuild.tool.gnu.cpp.compiler.exe.release.1982744477" name="GCC C++ Compiler" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.exe.release">
+								<option id="gnu.cpp.compiler.exe.release.option.optimization.level.1439405605" superClass="gnu.cpp.compiler.exe.release.option.optimization.level" value="gnu.cpp.compiler.optimization.level.most" valueType="enumerated"/>
+								<option id="gnu.cpp.compiler.exe.release.option.debugging.level.873638571" superClass="gnu.cpp.compiler.exe.release.option.debugging.level" value="gnu.cpp.compiler.debugging.level.none" valueType="enumerated"/>
+							</tool>
+							<tool id="cdt.managedbuild.tool.gnu.c.compiler.exe.release.864484126" name="GCC C Compiler" superClass="cdt.managedbuild.tool.gnu.c.compiler.exe.release">
+								<option defaultValue="gnu.c.optimization.level.most" id="gnu.c.compiler.exe.release.option.optimization.level.1482245051" superClass="gnu.c.compiler.exe.release.option.optimization.level" valueType="enumerated"/>
+								<option id="gnu.c.compiler.exe.release.option.debugging.level.988711051" superClass="gnu.c.compiler.exe.release.option.debugging.level" value="gnu.c.debugging.level.none" valueType="enumerated"/>
+								<inputType id="cdt.managedbuild.tool.gnu.c.compiler.input.1259484255" superClass="cdt.managedbuild.tool.gnu.c.compiler.input"/>
+							</tool>
+							<tool id="cdt.managedbuild.tool.gnu.c.linker.exe.release.109860328" name="GCC C Linker" superClass="cdt.managedbuild.tool.gnu.c.linker.exe.release">
+								<inputType id="cdt.managedbuild.tool.gnu.c.linker.input.1655433662" superClass="cdt.managedbuild.tool.gnu.c.linker.input">
+									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
+									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
+								</inputType>
+							</tool>
+							<tool id="cdt.managedbuild.tool.gnu.cpp.linker.exe.release.356193888" name="GCC C++ Linker" superClass="cdt.managedbuild.tool.gnu.cpp.linker.exe.release"/>
+							<tool id="cdt.managedbuild.tool.gnu.assembler.exe.release.1846032108" name="GCC Assembler" superClass="cdt.managedbuild.tool.gnu.assembler.exe.release">
+								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.1199617" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
+							</tool>
+						</toolChain>
+					</folderInfo>
+				</configuration>
+			</storageModule>
+		</cconfiguration>
+	</storageModule>
+	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
+		<project id="CANopenCommand.cdt.managedbuild.target.gnu.exe.481893175" name="Executable" projectType="cdt.managedbuild.target.gnu.exe"/>
+	</storageModule>
+	<storageModule moduleId="scannerConfiguration">
+		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
+		<scannerConfigBuildInfo instanceId="cdt.managedbuild.config.gnu.exe.debug.999307856;cdt.managedbuild.config.gnu.exe.debug.999307856.;cdt.managedbuild.tool.gnu.c.compiler.exe.debug.434615368;cdt.managedbuild.tool.gnu.c.compiler.input.359179812">
+			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
+		</scannerConfigBuildInfo>
+		<scannerConfigBuildInfo instanceId="cdt.managedbuild.config.gnu.exe.release.501065681;cdt.managedbuild.config.gnu.exe.release.501065681.;cdt.managedbuild.tool.gnu.c.compiler.exe.release.864484126;cdt.managedbuild.tool.gnu.c.compiler.input.1259484255">
+			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
+		</scannerConfigBuildInfo>
+	</storageModule>
+	<storageModule moduleId="org.eclipse.cdt.core.LanguageSettingsProviders"/>
+</cproject>
diff --git a/canopencomm/.project b/canopencomm/.project
new file mode 100644
index 0000000..23710ed
--- /dev/null
+++ b/canopencomm/.project
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>CANopenCommand</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.cdt.managedbuilder.core.genmakebuilder</name>
+			<triggers>clean,full,incremental,</triggers>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.cdt.managedbuilder.core.ScannerConfigBuilder</name>
+			<triggers>full,incremental,</triggers>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.cdt.core.cnature</nature>
+		<nature>org.eclipse.cdt.managedbuilder.core.managedBuildNature</nature>
+		<nature>org.eclipse.cdt.managedbuilder.core.ScannerConfigNature</nature>
+	</natures>
+</projectDescription>
diff --git a/canopencomm/CANopenCommand.c b/canopencomm/CANopenCommand.c
index 890f9f7..e2d870e 100644
--- a/canopencomm/CANopenCommand.c
+++ b/canopencomm/CANopenCommand.c
@@ -28,7 +28,12 @@
 #include <stdlib.h>
 #include <unistd.h>
 #include <sys/un.h>
+#include <sys/types.h>
 #include <sys/socket.h>
+#include <netdb.h>
+#include <netinet/in.h>
+#include <arpa/inet.h>// inet_aton
+#include <limits.h>
 
 
 #ifndef BUF_SIZE
@@ -52,13 +57,16 @@ fprintf(stderr,
 "Usage: %s [options] <command string>\n", progName);
 fprintf(stderr,
 "\n"
-"Program reads arguments or standard input or file. It sends commands to\n"
+"Program reads arguments from standard input or file. It sends commands to\n"
 "canopend via socket, line after line. Result is printed to standard output.\n"
+"Socket is either unix domain socket (default) or a remote tcp socket (option -t)."
 "For more information see http://www.can-cia.org/, CiA 309 standard.\n"
 "\n"
 "Options:\n"
 "  -f <input file path>  Path to the input file.\n"
 "  -s <socket path>      Path to the socket (default '/tmp/CO_command_socket').\n"
+"  -t <host>             Connect via tcp to remote <host>.\n"
+"  -p <port>             Tcp port to connect to when using -t. Defaults to 60000\n"
 "  -h                    Display description of error codes in case of error.\n"
 "                        (Default, if command is passed by program arguments.)\n"
 "  --help                Display this help.\n"
@@ -202,15 +210,17 @@ static void printErrorDescs(void) {
     fprintf(stderr, "\n");
 }
 
-
 /******************************************************************************/
 int main (int argc, char *argv[]) {
     char *socketPath = "/tmp/CO_command_socket";  /* Name of the local domain socket, configurable by arguments. */
     char *inputFilePath = NULL;
+    sa_family_t addrFamily = AF_UNIX;
+    char  tcpPort[20] = "60000"; /* default port when used in tcp mode */
 
     char buf[BUF_SIZE];
+    char hostname[HOST_NAME_MAX];
     int fd;
-    struct sockaddr_un addr;
+    struct sockaddr_un addr_un;
     int opt;
     int i;
 
@@ -225,7 +235,7 @@ int main (int argc, char *argv[]) {
     }
 
     /* Get program options */
-    while((opt = getopt(argc, argv, "s:f:h")) != -1) {
+    while((opt = getopt(argc, argv, "s:f:hp:t:")) != -1) {
         switch (opt) {
             case 'f':
                 inputFilePath = optarg;
@@ -236,6 +246,13 @@ int main (int argc, char *argv[]) {
             case 'h':
                 printErrorDescription = 1;
                 break;
+            case 't':
+                addrFamily = AF_INET;
+                strncpy(hostname, optarg, sizeof(hostname));
+                break;
+            case 'p':
+                strncpy(tcpPort, optarg, sizeof(tcpPort));
+                break;
             default:
                 printUsage(argv[0]);
                 exit(EXIT_FAILURE);
@@ -243,17 +260,55 @@ int main (int argc, char *argv[]) {
     }
 
     /* Create and connect client socket */
-    fd = socket(AF_UNIX, SOCK_STREAM, 0);
-    if(fd == -1) {
-        errExit("Socket creation failed");
-    }
+    if(addrFamily == AF_INET) {
 
-    memset(&addr, 0, sizeof(struct sockaddr_un));
-    addr.sun_family = AF_UNIX;
-    strncpy(addr.sun_path, socketPath, sizeof(addr.sun_path) - 1);
+        struct addrinfo hints, *res, *rp;
+        int errcode;
 
-    if(connect(fd, (struct sockaddr *)&addr, sizeof(struct sockaddr_un)) == -1) {
-        errExit("Socket connection failed");
+        memset(&hints, 0, sizeof(hints));
+        hints.ai_family = AF_INET;
+        hints.ai_socktype = SOCK_STREAM;
+        hints.ai_flags |= AI_CANONNAME;
+
+        errcode = getaddrinfo(hostname, tcpPort, &hints, &res);
+        if (errcode != 0) {
+            fprintf(stderr, "Error! Getaddrinfo for host %s failed\n", hostname);
+            exit(EXIT_FAILURE);
+        }
+
+      /* getaddrinfo() returns a list of address structures.
+         Try each address until we successfully connect.
+         If socket (or connect) fails, we (close the socket
+         and) try the next address. */
+
+      for (rp = res; rp != NULL; rp = rp->ai_next) {
+          fd = socket(rp->ai_family, rp->ai_socktype,
+                       rp->ai_protocol);
+          if (fd == -1) {
+              continue;
+          }
+
+          if (connect(fd, rp->ai_addr, rp->ai_addrlen) != -1) {
+              break;                  /* Success */
+          }
+
+          close(fd);
+          errExit("Socket connection failed");
+      }
+    }
+    else { // addrFamily == AF_UNIX
+      fd = socket(AF_UNIX, SOCK_STREAM, 0);
+      if(fd == -1) {
+          errExit("Socket creation failed");
+      }
+
+      memset(&addr_un, 0, sizeof(struct sockaddr_un));
+      addr_un.sun_family = addrFamily;
+      strncpy(addr_un.sun_path, socketPath, sizeof(addr_un.sun_path) - 1);
+
+      if(connect(fd, (struct sockaddr *)&addr_un, sizeof(struct sockaddr_un)) == -1) {
+          errExit("Socket connection failed");
+      }
     }
 
 
diff --git a/canopencomm/canopencomm b/canopencomm/canopencomm
deleted file mode 100644
index b3b0a6e..0000000
Binary files a/canopencomm/canopencomm and /dev/null differ
diff --git a/canopend/.cproject b/canopend/.cproject
new file mode 100644
index 0000000..95ffb42
--- /dev/null
+++ b/canopend/.cproject
@@ -0,0 +1,141 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<?fileVersion 4.0.0?><cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
+	<storageModule moduleId="org.eclipse.cdt.core.settings">
+		<cconfiguration id="cdt.managedbuild.config.gnu.exe.debug.898424113">
+			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.gnu.exe.debug.898424113" moduleId="org.eclipse.cdt.core.settings" name="Debug">
+				<externalSettings/>
+				<extensions>
+					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.CWDLocator" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
+				</extensions>
+			</storageModule>
+			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
+				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug,org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.gnu.exe.debug.898424113" name="Debug" parent="cdt.managedbuild.config.gnu.exe.debug">
+					<folderInfo id="cdt.managedbuild.config.gnu.exe.debug.898424113." name="/" resourcePath="">
+						<toolChain id="cdt.managedbuild.toolchain.gnu.exe.debug.148327856" name="Linux GCC" superClass="cdt.managedbuild.toolchain.gnu.exe.debug">
+							<targetPlatform id="cdt.managedbuild.target.gnu.platform.exe.debug.1376693244" name="Debug Platform" superClass="cdt.managedbuild.target.gnu.platform.exe.debug"/>
+							<builder buildPath="${workspace_loc:/canopend}/Debug" id="cdt.managedbuild.target.gnu.builder.exe.debug.1349546271" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="Gnu Make Builder" superClass="cdt.managedbuild.target.gnu.builder.exe.debug"/>
+							<tool id="cdt.managedbuild.tool.gnu.archiver.base.1514729925" name="GCC Archiver" superClass="cdt.managedbuild.tool.gnu.archiver.base"/>
+							<tool id="cdt.managedbuild.tool.gnu.cpp.compiler.exe.debug.2101021159" name="GCC C++ Compiler" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.exe.debug">
+								<option id="gnu.cpp.compiler.exe.debug.option.optimization.level.296791647" name="Optimization Level" superClass="gnu.cpp.compiler.exe.debug.option.optimization.level" value="gnu.cpp.compiler.optimization.level.none" valueType="enumerated"/>
+								<option id="gnu.cpp.compiler.exe.debug.option.debugging.level.817487388" name="Debug Level" superClass="gnu.cpp.compiler.exe.debug.option.debugging.level" value="gnu.cpp.compiler.debugging.level.max" valueType="enumerated"/>
+							</tool>
+							<tool id="cdt.managedbuild.tool.gnu.c.compiler.exe.debug.729274998" name="GCC C Compiler" superClass="cdt.managedbuild.tool.gnu.c.compiler.exe.debug">
+								<option defaultValue="gnu.c.optimization.level.none" id="gnu.c.compiler.exe.debug.option.optimization.level.2088278901" name="Optimization Level" superClass="gnu.c.compiler.exe.debug.option.optimization.level" valueType="enumerated"/>
+								<option id="gnu.c.compiler.exe.debug.option.debugging.level.1597631964" name="Debug Level" superClass="gnu.c.compiler.exe.debug.option.debugging.level" value="gnu.c.debugging.level.max" valueType="enumerated"/>
+								<option id="gnu.c.compiler.option.include.paths.1151403227" name="Include paths (-I)" superClass="gnu.c.compiler.option.include.paths" valueType="includePath">
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/canopend/CANopenNode/stack/socketCAN}&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/canopend/CANopenNode/stack}&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/canopend/CANopenNode}&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/canopend/src}&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/canopend/objDict}&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/canopend/app}&quot;"/>
+								</option>
+								<inputType id="cdt.managedbuild.tool.gnu.c.compiler.input.1922337884" superClass="cdt.managedbuild.tool.gnu.c.compiler.input"/>
+							</tool>
+							<tool id="cdt.managedbuild.tool.gnu.c.linker.exe.debug.207711816" name="GCC C Linker" superClass="cdt.managedbuild.tool.gnu.c.linker.exe.debug">
+								<option id="gnu.c.link.option.libs.1447704449" name="Libraries (-l)" superClass="gnu.c.link.option.libs"/>
+								<option id="gnu.c.link.option.ldflags.1539982255" name="Linker flags" superClass="gnu.c.link.option.ldflags" value="-pthread" valueType="string"/>
+								<inputType id="cdt.managedbuild.tool.gnu.c.linker.input.1402729825" superClass="cdt.managedbuild.tool.gnu.c.linker.input">
+									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
+									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
+								</inputType>
+							</tool>
+							<tool id="cdt.managedbuild.tool.gnu.cpp.linker.exe.debug.1858885711" name="GCC C++ Linker" superClass="cdt.managedbuild.tool.gnu.cpp.linker.exe.debug"/>
+							<tool id="cdt.managedbuild.tool.gnu.assembler.exe.debug.856642483" name="GCC Assembler" superClass="cdt.managedbuild.tool.gnu.assembler.exe.debug">
+								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.1230454853" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
+							</tool>
+						</toolChain>
+					</folderInfo>
+					<sourceEntries>
+						<entry excluding="CANopenNode/stack/STM32F3|CANopenNode/stack/STM32|CANopenNode/stack/SAM3X|CANopenNode/stack/PIC32|CANopenNode/stack/PIC24_dsPIC33|CANopenNode/stack/MCF5282|CANopenNode/stack/LPC177x_8x|CANopenNode/stack/eCos|CANopenNode/stack/dsPIC30F|CANopenNode/stack/drvTemplate|CANopenNode/example" flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name=""/>
+					</sourceEntries>
+				</configuration>
+			</storageModule>
+			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
+		</cconfiguration>
+		<cconfiguration id="cdt.managedbuild.config.gnu.exe.release.1789259597">
+			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.gnu.exe.release.1789259597" moduleId="org.eclipse.cdt.core.settings" name="Release">
+				<externalSettings/>
+				<extensions>
+					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.CWDLocator" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
+				</extensions>
+			</storageModule>
+			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
+				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release,org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.gnu.exe.release.1789259597" name="Release" parent="cdt.managedbuild.config.gnu.exe.release">
+					<folderInfo id="cdt.managedbuild.config.gnu.exe.release.1789259597." name="/" resourcePath="">
+						<toolChain id="cdt.managedbuild.toolchain.gnu.exe.release.1100006739" name="Linux GCC" superClass="cdt.managedbuild.toolchain.gnu.exe.release">
+							<targetPlatform id="cdt.managedbuild.target.gnu.platform.exe.release.1337275467" name="Debug Platform" superClass="cdt.managedbuild.target.gnu.platform.exe.release"/>
+							<builder buildPath="${workspace_loc:/canopend}/Release" id="cdt.managedbuild.target.gnu.builder.exe.release.524118800" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="Gnu Make Builder" superClass="cdt.managedbuild.target.gnu.builder.exe.release"/>
+							<tool id="cdt.managedbuild.tool.gnu.archiver.base.1639655953" name="GCC Archiver" superClass="cdt.managedbuild.tool.gnu.archiver.base"/>
+							<tool id="cdt.managedbuild.tool.gnu.cpp.compiler.exe.release.432142144" name="GCC C++ Compiler" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.exe.release">
+								<option id="gnu.cpp.compiler.exe.release.option.optimization.level.1764223250" name="Optimization Level" superClass="gnu.cpp.compiler.exe.release.option.optimization.level" value="gnu.cpp.compiler.optimization.level.most" valueType="enumerated"/>
+								<option id="gnu.cpp.compiler.exe.release.option.debugging.level.1511037910" name="Debug Level" superClass="gnu.cpp.compiler.exe.release.option.debugging.level" value="gnu.cpp.compiler.debugging.level.none" valueType="enumerated"/>
+							</tool>
+							<tool id="cdt.managedbuild.tool.gnu.c.compiler.exe.release.528814243" name="GCC C Compiler" superClass="cdt.managedbuild.tool.gnu.c.compiler.exe.release">
+								<option defaultValue="gnu.c.optimization.level.most" id="gnu.c.compiler.exe.release.option.optimization.level.33693430" name="Optimization Level" superClass="gnu.c.compiler.exe.release.option.optimization.level" valueType="enumerated"/>
+								<option id="gnu.c.compiler.exe.release.option.debugging.level.264854187" name="Debug Level" superClass="gnu.c.compiler.exe.release.option.debugging.level" value="gnu.c.debugging.level.none" valueType="enumerated"/>
+								<option id="gnu.c.compiler.option.include.paths.47003494" name="Include paths (-I)" superClass="gnu.c.compiler.option.include.paths" valueType="includePath">
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/canopend/CANopenNode/stack/socketCAN}&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/canopend/CANopenNode/stack}&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/canopend/CANopenNode}&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/canopend/src}&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/canopend/objDict}&quot;"/>
+									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/canopend/app}&quot;"/>
+								</option>
+								<inputType id="cdt.managedbuild.tool.gnu.c.compiler.input.187721026" superClass="cdt.managedbuild.tool.gnu.c.compiler.input"/>
+							</tool>
+							<tool id="cdt.managedbuild.tool.gnu.c.linker.exe.release.1072368845" name="GCC C Linker" superClass="cdt.managedbuild.tool.gnu.c.linker.exe.release">
+								<option id="gnu.c.link.option.libs.290101869" name="Libraries (-l)" superClass="gnu.c.link.option.libs"/>
+								<option id="gnu.c.link.option.ldflags.687307723" name="Linker flags" superClass="gnu.c.link.option.ldflags" value="-pthread" valueType="string"/>
+								<inputType id="cdt.managedbuild.tool.gnu.c.linker.input.1535306669" superClass="cdt.managedbuild.tool.gnu.c.linker.input">
+									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
+									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
+								</inputType>
+							</tool>
+							<tool id="cdt.managedbuild.tool.gnu.cpp.linker.exe.release.1092357927" name="GCC C++ Linker" superClass="cdt.managedbuild.tool.gnu.cpp.linker.exe.release"/>
+							<tool id="cdt.managedbuild.tool.gnu.assembler.exe.release.1490406731" name="GCC Assembler" superClass="cdt.managedbuild.tool.gnu.assembler.exe.release">
+								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.1944312472" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
+							</tool>
+						</toolChain>
+					</folderInfo>
+					<sourceEntries>
+						<entry excluding="CANopenNode/stack/STM32F3|CANopenNode/stack/STM32|CANopenNode/stack/SAM3X|CANopenNode/stack/PIC32|CANopenNode/stack/PIC24_dsPIC33|CANopenNode/stack/MCF5282|CANopenNode/stack/LPC177x_8x|CANopenNode/stack/eCos|CANopenNode/stack/dsPIC30F|CANopenNode/stack/drvTemplate|CANopenNode/example" flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name=""/>
+					</sourceEntries>
+				</configuration>
+			</storageModule>
+			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
+		</cconfiguration>
+	</storageModule>
+	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
+		<project id="canopend.cdt.managedbuild.target.gnu.exe.1636745446" name="Executable" projectType="cdt.managedbuild.target.gnu.exe"/>
+	</storageModule>
+	<storageModule moduleId="scannerConfiguration">
+		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
+		<scannerConfigBuildInfo instanceId="cdt.managedbuild.config.gnu.exe.release.1789259597;cdt.managedbuild.config.gnu.exe.release.1789259597.;cdt.managedbuild.tool.gnu.c.compiler.exe.release.528814243;cdt.managedbuild.tool.gnu.c.compiler.input.187721026">
+			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
+		</scannerConfigBuildInfo>
+		<scannerConfigBuildInfo instanceId="cdt.managedbuild.config.gnu.exe.debug.898424113;cdt.managedbuild.config.gnu.exe.debug.898424113.;cdt.managedbuild.tool.gnu.c.compiler.exe.debug.729274998;cdt.managedbuild.tool.gnu.c.compiler.input.1922337884">
+			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
+		</scannerConfigBuildInfo>
+	</storageModule>
+	<storageModule moduleId="org.eclipse.cdt.core.LanguageSettingsProviders"/>
+	<storageModule moduleId="refreshScope" versionNumber="2">
+		<configuration configurationName="Release">
+			<resource resourceType="PROJECT" workspacePath="/canopend"/>
+		</configuration>
+		<configuration configurationName="Debug">
+			<resource resourceType="PROJECT" workspacePath="/canopend"/>
+		</configuration>
+	</storageModule>
+	<storageModule moduleId="org.eclipse.cdt.internal.ui.text.commentOwnerProjectMappings"/>
+</cproject>
diff --git a/canopend/.project b/canopend/.project
new file mode 100644
index 0000000..8c0b6fc
--- /dev/null
+++ b/canopend/.project
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>canopend</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.cdt.managedbuilder.core.genmakebuilder</name>
+			<triggers>clean,full,incremental,</triggers>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.cdt.managedbuilder.core.ScannerConfigBuilder</name>
+			<triggers>full,incremental,</triggers>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.cdt.core.cnature</nature>
+		<nature>org.eclipse.cdt.managedbuilder.core.managedBuildNature</nature>
+		<nature>org.eclipse.cdt.managedbuilder.core.ScannerConfigNature</nature>
+	</natures>
+	<linkedResources>
+		<link>
+			<name>CANopenNode</name>
+			<type>2</type>
+			<locationURI>WORKSPACE_LOC/CANopenNode</locationURI>
+		</link>
+	</linkedResources>
+</projectDescription>
diff --git a/canopend/ALEX b/canopend/ALEX
deleted file mode 100644
index b4a27d3..0000000
Binary files a/canopend/ALEX and /dev/null differ
diff --git a/canopend/Makefile b/canopend/Makefile
index 9b327e7..7e34949 100644
--- a/canopend/Makefile
+++ b/canopend/Makefile
@@ -1,6 +1,5 @@
-
 # Makefile for CANopend.
-# Test Comment
+
 
 STACKDRV_SRC =  ../CANopenNode/stack/socketCAN
 STACK_SRC =     ../CANopenNode/stack
@@ -8,10 +7,9 @@ CANOPEN_SRC =   ../CANopenNode
 CANOPEND_SRC =  ./src
 OBJ_DICT_SRC =  ./objDict
 APP_SRC =       ./app
-ROBOT_SRC = 	../robot
-STATEMCH_SRC = 	../stateMachine
 
-LINK_TARGET  =  $ ALEX
+
+LINK_TARGET  =  $(APP_SRC)/canopend
 
 
 INCLUDE_DIRS = -I$(STACKDRV_SRC) \
@@ -19,8 +17,6 @@ INCLUDE_DIRS = -I$(STACKDRV_SRC) \
                -I$(CANOPEN_SRC)  \
                -I$(CANOPEND_SRC) \
                -I$(OBJ_DICT_SRC) \
-               -I$(ROBOT_SRC)    \
-	       -I$(STATEMCH_SRC) \
                -I$(APP_SRC)
 
 
@@ -35,26 +31,18 @@ SOURCES =       $(STACKDRV_SRC)/CO_driver.c         \
                 $(STACK_SRC)/CO_PDO.c               \
                 $(STACK_SRC)/CO_HBconsumer.c        \
                 $(STACK_SRC)/CO_SDOmaster.c         \
+                $(STACK_SRC)/CO_LSSmaster.c     		\
                 $(STACK_SRC)/CO_trace.c             \
                 $(CANOPEN_SRC)/CANopen.c            \
                 $(CANOPEND_SRC)/CO_command.c        \
                 $(CANOPEND_SRC)/CO_comm_helpers.c   \
                 $(CANOPEND_SRC)/CO_master.c         \
+                $(CANOPEND_SRC)/CO_LSS_master.c     \
                 $(CANOPEND_SRC)/CO_time.c           \
-                $(OBJ_DICT_SRC)/CO_OD.c             
-
-SOURCESCPP = 	$(CANOPEND_SRC)/main.cpp            \
-                $(APP_SRC)/application.cpp          \
-		$(STATEMCH_SRC)/Transition.cpp      \
-		$(STATEMCH_SRC)/StateMachine.cpp    \
-		$(STATEMCH_SRC)/State.cpp	    \
-		$(STATEMCH_SRC)/Event.cpp      	    \
-		$(STATEMCH_SRC)/sitStand.cpp        \
-		$(ROBOT_SRC)/Robot.cpp              \
-		$(ROBOT_SRC)/Joint.cpp              \
-	        $(ROBOT_SRC)/GPIOConst.cpp          \
-	        $(ROBOT_SRC)/GPIOManager.cpp	    
- 
+                $(CANOPEND_SRC)/main.c              \
+                $(OBJ_DICT_SRC)/CO_OD.c             \
+                $(APP_SRC)/application.c
+
 
 # canopend is three-threaded application: nonblocking mainline, nonblocking
 # rt-thread and blocking command interface thread.
@@ -67,10 +55,8 @@ SOURCESCPP = 	$(CANOPEND_SRC)/main.cpp            \
 
 
 OBJS = $(SOURCES:%.c=%.o)
-OBJSCPP = $(SOURCESCPP:%.cpp=%.o)
-
-CC = g++
-CFLAGS =  -std=c++11  -g $(INCLUDE_DIRS)
+CC ?= gcc
+CFLAGS = -Wall -g $(INCLUDE_DIRS)
 LDFLAGS = -lrt -pthread
 
 
@@ -79,13 +65,10 @@ LDFLAGS = -lrt -pthread
 all: clean $(LINK_TARGET)
 
 clean:
-	rm -f $(OBJS) $(OBJSCPP) $(LINK_TARGET)
+	rm -f $(OBJS) $(LINK_TARGET)
 
 %.o: %.c
 	$(CC) $(CFLAGS) -c $< -o $@
 
-%.o: %.cpp
-	$(CC) $(CFLAGS) -c $< -o $@
-
-$(LINK_TARGET): $(OBJS) $(OBJSCPP)
+$(LINK_TARGET): $(OBJS)
 	$(CC) $(LDFLAGS) $^ -o $@
diff --git a/canopend/app/application.c b/canopend/app/application.c
new file mode 100644
index 0000000..ccf417c
--- /dev/null
+++ b/canopend/app/application.c
@@ -0,0 +1,58 @@
+/*
+ * Application interface for CANopenSocket.
+ *
+ * @file        application.c
+ * @author      Janez Paternoster
+ * @copyright   2016 Janez Paternoster
+ *
+ * This file is part of CANopenSocket, a Linux implementation of CANopen
+ * stack with master functionality. Project home page is
+ * <https://github.com/CANopenNode/CANopenSocket>. CANopenSocket is based
+ * on CANopenNode: <https://github.com/CANopenNode/CANopenNode>.
+ *
+ * CANopenSocket is free and open source software: you can redistribute
+ * it and/or modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation, either version 2 of the
+ * License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program. If not, see <http://www.gnu.org/licenses/>.
+ */
+
+
+#include "CANopen.h"
+
+
+/******************************************************************************/
+void app_programStart(void){
+
+}
+
+
+/******************************************************************************/
+void app_communicationReset(void){
+
+}
+
+
+/******************************************************************************/
+void app_programEnd(void){
+
+}
+
+
+/******************************************************************************/
+void app_programAsync(uint16_t timer1msDiff){
+
+}
+
+
+/******************************************************************************/
+void app_program1ms(void){
+
+}
diff --git a/canopend/app/application.cpp b/canopend/app/application.cpp
deleted file mode 100644
index 3d717c3..0000000
--- a/canopend/app/application.cpp
+++ /dev/null
@@ -1,189 +0,0 @@
-/*
- * Application interface for CANopenSocket.
- *
- * @file        application.c
- * @author      Janez Paternoster
- * @copyright   2016 Janez Paternoster
- *
- * This file is part of CANopenSocket, a Linux implementation of CANopen
- * stack with master functionality. Project home page is
- * <https://github.com/CANopenNode/CANopenSocket>. CANopenSocket is based
- * on CANopenNode: <https://github.com/CANopenNode/CANopenNode>.
- *
- * CANopenSocket is free and open source software: you can redistribute
- * it and/or modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation, either version 2 of the
- * License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program. If not, see <http://www.gnu.org/licenses/>.
- */
-#include "CANopen.h"
-#include "CO_command.h"
-#include "stdio.h"
-#include <stdint.h>
-#include <sys/time.h>
-
-/*For master-> node SDO message sending*/
-#define CO_COMMAND_SDO_BUFFER_SIZE 100000
-#define STRING_BUFFER_SIZE (CO_COMMAND_SDO_BUFFER_SIZE * 4 + 100)
-#include <string.h>
-char buf[STRING_BUFFER_SIZE];
-char ret[STRING_BUFFER_SIZE];
-char message[STRING_BUFFER_SIZE] = "[1] 2 read 0x6063 0 i32"; // Read J2 position
-//char message[STRING_BUFFER_SIZE] = "[1] 100 read 0x1017  0 i32"; // Read bbb HB
-//// Data logger helper functions
-void fileLogHeader();
-void fileLogger();
-void strreverse(char *begin, char *end);
-void itoa(int value, char *str, int base);
-/******************************************************************************/
-void app_programStart(void)
-{
-}
-/******************************************************************************/
-void app_communicationReset(void)
-{
-}
-/******************************************************************************/
-void app_programEnd(void)
-{
-}
-/******************************************************************************/
-void app_programAsync(uint16_t timer1msDiffy)
-{
-    //Timing speed of reading from memory and file writing
-    //struct timeval start;
-    //struct timeval stop;
-    //gettimeofday(&start, NULL);
-    /*
-struct timeval tv;
-gettimeofday(&tv,NULL);
-printf("time before(s): %lu, (us): %lu\n",tv.tv_sec, tv.tv_usec);
-fileLogger(timer1msDiff);
-gettimeofday(&tv,NULL);
-printf("time after(s): %lu, (us): %lu\n",tv.tv_sec, tv.tv_usec);
-*/
-    //gettimeofday(&stop, NULL);
-    //double elapsed_ms = (stop.tv_sec - start.tv_sec) * 1000.0;
-    //elapsed_ms += (stop.tv_usec - start.tv_usec) / 1000.0;
-    //printf("TASK 1:  %.2f milliseconds\n", elapsed_ms);
-
-    //// cancomm_socketFree for SDO MESSAGING TO JOINTS
-    // printf("MESSAGING!");
-    // strcpy(buf, message);
-    // cancomm_socketFree(buf, ret);
-    // printf("Return message: %s", ret);
-}
-
-/******************************************************************************/
-void app_program1ms(void)
-{
-    // fileLogger();
-}
-/******************************************************************************/
-void itoa(int value, char *str, int base)
-{
-    static char num[] = "0123456789abcdefghijklmnopqrstuvwxyz";
-    char *wstr = str;
-    int sign;
-    // Validate base
-    if (base < 2 || base > 35)
-    {
-        *wstr = '\0';
-        return;
-    }
-    // Take care of sign
-    if ((sign = value) < 0)
-        value = -value;
-    // Conversion. Number is reversed.
-    do
-        *wstr++ = num[value % base];
-    while (value /= base);
-    if (sign < 0)
-        *wstr++ = '-';
-    *wstr = '\0';
-    // Reverse string
-    strreverse(str, wstr - 1);
-}
-/******************************************************************************/
-void strreverse(char *begin, char *end)
-{
-    char aux;
-    while (end > begin)
-        aux = *end, *end-- = *begin, *begin++ = aux;
-}
-/******************************************************************************/
-void fileLogger()
-{
-    //printf("fileLogger beggining\n");
-    FILE *fp;
-    fp = fopen("X2_log.txt", "a");
-    // Generate whatever you want logged here, "data" is just an example
-    char position[50];
-    char timestamp[50];
-    char torque[50];
-    char comma[] = ", ";
-
-    //Getting timestamp
-    //printf("time(s): %lu, (us): %lu\n",tv.tv_sec, tv.tv_usec);
-    //itoa(timer1msDiff, position, 10);
-    struct timeval tv;
-    gettimeofday(&tv, NULL);
-    itoa(tv.tv_sec, timestamp, 10);
-    fputs(timestamp, fp);
-    fputs(comma, fp);
-    itoa(tv.tv_usec, timestamp, 10);
-    fputs(timestamp, fp);
-    fputs(comma, fp);
-
-    // Motor 1: Left Hip position and Torque
-    itoa(CO_OD_RAM.actualMotorPositions.motor1, position, 10);
-    itoa(((int16_t)CO_OD_RAM.statusWords.motor1), torque, 10);
-    fputs(position, fp);
-    fputs(comma, fp);
-    fputs(torque, fp);
-    fputs(comma, fp);
-    // Motor 2: Left Knee position and Torque
-    itoa(CO_OD_RAM.actualMotorPositions.motor2, position, 10);
-    itoa(((int16_t)CO_OD_RAM.statusWords.motor2), torque, 10);
-    fputs(position, fp);
-    fputs(comma, fp);
-    fputs(torque, fp);
-    fputs(comma, fp);
-    // Motor 3: Right Hip position and Torque
-    itoa(CO_OD_RAM.actualMotorPositions.motor3, position, 10);
-    itoa(((int16_t)CO_OD_RAM.statusWords.motor3), torque, 10);
-    fputs(position, fp);
-    fputs(comma, fp);
-    fputs(torque, fp);
-    fputs(comma, fp);
-    // Motor 4: Right Knee position and Torque
-    itoa(CO_OD_RAM.actualMotorPositions.motor4, position, 10);
-    itoa(((int16_t)CO_OD_RAM.statusWords.motor4), torque, 10);
-    fputs(position, fp);
-    fputs(comma, fp);
-    fputs(torque, fp);
-    fputs("\n", fp);
-
-    fclose(fp);
-}
-void fileLogHeader()
-{
-    FILE *fp;
-    fp = fopen("X2_log.txt", "a");
-    char header1[] = "======================================\n";
-    char header2[] = "X2 exoskeleton torque and position log\n";
-    char header3[] = "======================================\n";
-    char header4[] = "Time(s), time(ms) LHPos, LHT, LKPos, LKT, RHPos, RHT,RKPos, RKT\n";
-    fputs(header1, fp);
-    fputs(header2, fp);
-    fputs(header3, fp);
-    fputs(header4, fp);
-    fclose(fp);
-}
\ No newline at end of file
diff --git a/canopend/app/application.h b/canopend/app/application.h
index d3f3b41..42e781a 100644
--- a/canopend/app/application.h
+++ b/canopend/app/application.h
@@ -24,23 +24,29 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+
 #ifndef CO_APPLICATION_H
 #define CO_APPLICATION_H
+
+
 /**
  * Function is called on program startup.
  */
 void app_programStart(void);
 
+
 /**
  * Function is called after CANopen communication reset.
  */
 void app_communicationReset(void);
 
+
 /**
  * Function is called just before program ends.
  */
 void app_programEnd(void);
 
+
 /**
  * Function is called cyclically from main.
  *
@@ -48,6 +54,7 @@ void app_programEnd(void);
  */
 void app_programAsync(uint16_t timer1msDiff);
 
+
 /**
  * Function is called cyclically from realtime thread at constant intervals.
  *
@@ -55,4 +62,5 @@ void app_programAsync(uint16_t timer1msDiff);
  */
 void app_program1ms(void);
 
+
 #endif
diff --git a/canopend/app/canopend b/canopend/app/canopend
deleted file mode 100644
index 88995f6..0000000
Binary files a/canopend/app/canopend and /dev/null differ
diff --git a/canopend/objDict/CO_OD.c b/canopend/objDict/CO_OD.c
index da17f94..6c970f0 100644
--- a/canopend/objDict/CO_OD.c
+++ b/canopend/objDict/CO_OD.c
@@ -1,56 +1,34 @@
-/*******************************************************************************
-
-   File - CO_OD.c/CO_OD.h
-   CANopen Object Dictionary.
-
-   Copyright (C) 2004-2008 Janez Paternoster
-
-   License: GNU Lesser General Public License (LGPL).
-
-   <http://canopennode.sourceforge.net>
-
-   (For more information see <CO_SDO.h>.)
-
-   This file is part of CANopenNode, an opensource CANopen Stack.
-   Project home page is <https://github.com/CANopenNode/CANopenNode>.
-   For more information on CANopen see <http://www.can-cia.org/>.
- 
-   CANopenNode is free and open source software: you can redistribute
-   it and/or modify it under the terms of the GNU General Public License
-   as published by the Free Software Foundation, either version 2 of the
-   License, or (at your option) any later version.
-  
-   This program is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
-   GNU General Public License for more details.
-  
-   You should have received a copy of the GNU General Public License
-   along with this program. If not, see <http://www.gnu.org/licenses/>.
-  
-   Following clarification and special exception to the GNU General Public
-   License is included to the distribution terms of CANopenNode:
-  
-   Linking this library statically or dynamically with other modules is
-   making a combined work based on this library. Thus, the terms and
-   conditions of the GNU General Public License cover the whole combination.
-  
-   As a special exception, the copyright holders of this library give
-   you permission to link this library with independent modules to
-   produce an executable, regardless of the license terms of these
-   independent modules, and to copy and distribute the resulting
-   executable under terms of your choice, provided that you also meet,
-   for each linked independent module, the terms and conditions of the
-   license of that module. An independent module is a module which is
-   not derived from or based on this library. If you modify this
-   library, you may extend this exception to your version of the
-   library, but you are not obliged to do so. If you do not wish
-   to do so, delete this exception statement from your version.
- 
-   This file was automatically generated with libedssharp Object
-   Dictionary Editor v0.6-xdd-alpha-81-gb562769
-   DON'T EDIT THIS FILE MANUALLY !!!!
-*******************************************************************************/
+/*
+ * CANopen Object Dictionary.
+ *
+ * This file was automatically generated with CANopenNode Object
+ * Dictionary Editor. DON'T EDIT THIS FILE MANUALLY !!!!
+ * Object Dictionary Editor is currently an older, but functional web
+ * application. For more info see See 'Object_Dictionary_Editor/about.html' in
+ * <http://sourceforge.net/p/canopennode/code_complete/ci/master/tree/>
+ * For more information on CANopen Object Dictionary see <CO_SDO.h>.
+ *
+ * @file        CO_OD.c
+ * @author      Janez Paternoster
+ * @copyright   2010 - 2016 Janez Paternoster
+ *
+ * This file is part of CANopenNode, an opensource CANopen Stack.
+ * Project home page is <https://github.com/CANopenNode/CANopenNode>.
+ * For more information on CANopen see <http://www.can-cia.org/>.
+ *
+ * CANopenNode is free and open source software: you can redistribute
+ * it and/or modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation, either version 2 of the
+ * License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program. If not, see <http://www.gnu.org/licenses/>.
+ */
 
 
 #include "CO_driver.h"
@@ -62,2611 +40,1494 @@
    DEFINITION AND INITIALIZATION OF OBJECT DICTIONARY VARIABLES
 *******************************************************************************/
 
-
-/***** Definition for ROM variables ********************************************/
-struct sCO_OD_ROM CO_OD_ROM = {
+/***** Definition for RAM variables *******************************************/
+struct sCO_OD_RAM CO_OD_RAM = {
            CO_OD_FIRST_LAST_WORD,
 
-/*100c*/ 0x00,
-/*1012*/ 0x0000L,
+/*1001*/ 0x0,
+/*1002*/ 0x0L,
+/*1003*/ {0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1010*/ {0x3L},
+/*1011*/ {0x1L},
+/*1280*/{{0x3, 0x0L, 0x0L, 0x0}},
+/*2100*/ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
+/*2103*/ 0x0,
+/*2104*/ 0x0,
+/*2107*/ {0x3E8, 0x0, 0x0, 0x0, 0x0},
+/*2108*/ {0},
+/*2109*/ {0},
+/*2110*/ {0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L},
+/*2120*/ {0x5, 0x1234567890ABCDEFLL, 0x234567890ABCDEF1LL, 12.345, 456.789, 0},
+/*2130*/ {0x3, {'-', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0, 0x0L},
+/*2400*/ 0x0,
+/*2401*/{{0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*2402*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*2403*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*2404*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*2405*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*2406*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*2407*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*2408*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*2409*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*240A*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*240B*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*240C*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*240D*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*240E*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*240F*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*2410*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*2411*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*2412*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*2413*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*2414*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*2415*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*2416*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*2417*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*2418*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*2419*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*241A*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*241B*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*241C*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*241D*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*241E*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*241F*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
+/*2420*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L}},
+/*6000*/ {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
+/*6200*/ {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
+/*6401*/ {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
+/*6411*/ {0, 0, 0, 0, 0, 0, 0, 0},
 
            CO_OD_FIRST_LAST_WORD,
 };
 
 
-/***** Definition for RAM variables ********************************************/
-struct sCO_OD_RAM CO_OD_RAM = {
+/***** Definition for EEPROM variables ****************************************/
+struct sCO_OD_EEPROM CO_OD_EEPROM = {
            CO_OD_FIRST_LAST_WORD,
 
-/*1000*/ 0x0000L,
-/*1001*/ 0x0L,
-/*1002*/ 0x0000L,
-/*1003*/ {0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1005*/ 0x40000080L,
-/*1006*/ 0x2710L,
-/*1007*/ 0x0000L,
-/*1008*/ {'C', 'A', 'N', 'o', 'p', 'e', 'n', 'N', 'o', 'd', 'e'},
-/*1009*/ {'3', '.', '0', '0'},
-/*100a*/ {'3', '.', '0', '0'},
-/*100d*/ 0x0L,
-/*1010*/ {0x0003L},
-/*1011*/ {0x0001L},
-/*1013*/ 0x0000L,
-/*1014*/ 0x0080L,
-/*1015*/ 0x64,
-/*1016*/ {0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1017*/ 0x0,
-/*1018*/ {0x4L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1019*/ 0x0L,
-/*1029*/ {0x0L, 0x0L, 0x1L, 0x0L, 0x0L, 0x0L},
-/*1200*/ {{0x2L, 0x0600L, 0x0580L}},
-/*1280*/ {{0x3L, 0x0000L, 0x0000L, 0x0L}},
-/*1400*/ {{0x2L, 0x0181L, 0xffL},
-/*1401*/ {0x2L, 0x0182L, 0xffL},
-/*1402*/ {0x2L, 0x0183L, 0xffL},
-/*1403*/ {0x2L, 0x0184L, 0xffL},
-/*1404*/ {0x2L, 0x0185L, 0xfeL},
-/*1405*/ {0x2L, 0x0186L, 0xfeL},
-/*1406*/ {0x2L, 0x0281L, 0xfeL},
-/*1407*/ {0x2L, 0x0282L, 0xfeL},
-/*1408*/ {0x2L, 0x0283L, 0xfeL},
-/*1409*/ {0x2L, 0x0284L, 0xfeL},
-/*140a*/ {0x2L, 0x0285L, 0xfeL},
-/*140b*/ {0x2L, 0x0286L, 0xfeL},
-/*140c*/ {0x2L, 0x0381L, 0xfeL},
-/*140d*/ {0x2L, 0x0382L, 0xfeL},
-/*140e*/ {0x2L, 0x0383L, 0xfeL},
-/*140f*/ {0x2L, 0x0384L, 0xfeL},
-/*1410*/ {0x2L, 0x80000000L, 0xfeL},
-/*1411*/ {0x2L, 0x80000000L, 0xfeL},
-/*1412*/ {0x2L, 0x80000000L, 0xfeL},
-/*1413*/ {0x2L, 0x80000000L, 0xfeL},
-/*1414*/ {0x2L, 0x80000000L, 0xfeL},
-/*1415*/ {0x2L, 0x80000000L, 0xfeL},
-/*1416*/ {0x2L, 0x80000000L, 0xfeL},
-/*1417*/ {0x2L, 0x80000000L, 0xfeL},
-/*1418*/ {0x2L, 0x80000000L, 0xfeL},
-/*1419*/ {0x2L, 0x80000000L, 0xfeL},
-/*141a*/ {0x2L, 0x80000000L, 0xfeL},
-/*141b*/ {0x2L, 0x80000000L, 0xfeL},
-/*141c*/ {0x2L, 0x80000000L, 0xfeL},
-/*141d*/ {0x2L, 0x80000000L, 0xfeL},
-/*141e*/ {0x2L, 0x80000000L, 0xfeL},
-/*141f*/ {0x2L, 0x80000000L, 0xfeL}},
-/*1600*/ {{0x1L, 0x60410110L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1601*/ {0x1L, 0x60410210L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1602*/ {0x1L, 0x60410310L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1603*/ {0x1L, 0x60410410L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1604*/ {0x1L, 0x60410510L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1605*/ {0x1L, 0x60410610L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1606*/ {0x2L, 0x60640120L, 0x606c0120L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1607*/ {0x2L, 0x60640220L, 0x606c0220L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1608*/ {0x2L, 0x60640320L, 0x606c0320L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1609*/ {0x2L, 0x60640420L, 0x606c0420L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*160a*/ {0x2L, 0x60640520L, 0x606c0520L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*160b*/ {0x0L, 0x60640620L, 0x606c0620L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*160c*/ {0x1L, 0x60770110L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*160d*/ {0x1L, 0x60770210L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*160e*/ {0x1L, 0x60770310L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*160f*/ {0x0L, 0x60770410L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1610*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1611*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1612*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1613*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1614*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1615*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1616*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1617*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1618*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1619*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*161a*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*161b*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*161c*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*161d*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*161e*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*161f*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L}},
-/*1800*/ {{0x6L, 0x0201L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*1801*/ {0x6L, 0x0202L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*1802*/ {0x6L, 0x0203L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*1803*/ {0x6L, 0x0204L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*1804*/ {0x6L, 0x0205L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*1805*/ {0x6L, 0x0206L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*1806*/ {0x6L, 0x0301L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*1807*/ {0x6L, 0x0302L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*1808*/ {0x6L, 0x0303L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*1809*/ {0x6L, 0x0304L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*180a*/ {0x6L, 0x0305L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*180b*/ {0x6L, 0x0306L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*180c*/ {0x6L, 0x0401L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*180d*/ {0x6L, 0x0402L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*180e*/ {0x6L, 0x0403L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*180f*/ {0x6L, 0x0404L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*1810*/ {0x6L, 0x0405L, 0xfeL, 0x00, 0x00, 0x0L},
-/*1811*/ {0x6L, 0x0406L, 0xfeL, 0x00, 0x00, 0x0L},
-/*1812*/ {0x6L, 0x80000000L, 0xfeL, 0x00, 0x00, 0x0L},
-/*1813*/ {0x6L, 0x80000000L, 0xfeL, 0x00, 0x00, 0x0L},
-/*1814*/ {0x6L, 0x80000000L, 0xfeL, 0x00, 0x00, 0x0L},
-/*1815*/ {0x6L, 0x80000000L, 0xfeL, 0x00, 0x00, 0x0L},
-/*1816*/ {0x6L, 0x80000000L, 0xfeL, 0x00, 0x00, 0x0L},
-/*1817*/ {0x6L, 0x80000000L, 0xfeL, 0x00, 0x00, 0x0L},
-/*1818*/ {0x6L, 0x80000000L, 0xfeL, 0x00, 0x00, 0x0L},
-/*1819*/ {0x6L, 0x80000000L, 0xfeL, 0x00, 0x00, 0x0L},
-/*181a*/ {0x6L, 0x80000000L, 0xfeL, 0x00, 0x00, 0x0L},
-/*181b*/ {0x6L, 0x80000000L, 0xfeL, 0x00, 0x00, 0x0L},
-/*181c*/ {0x6L, 0x80000000L, 0xfeL, 0x00, 0x00, 0x0L},
-/*181d*/ {0x6L, 0x80000000L, 0xfeL, 0x00, 0x00, 0x0L},
-/*181e*/ {0x6L, 0x80000000L, 0xfeL, 0x00, 0x00, 0x0L},
-/*181f*/ {0x6L, 0x80000000L, 0xfeL, 0x00, 0x00, 0x0L}},
-/*1a00*/ {{0x1L, 0x60400110L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a01*/ {0x1L, 0x60400210L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a02*/ {0x1L, 0x60400310L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a03*/ {0x1L, 0x60400410L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a04*/ {0x1L, 0x60400510L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a05*/ {0x1L, 0x60400610L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a06*/ {0x1L, 0x607a0120L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a07*/ {0x1L, 0x607a0220L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a08*/ {0x1L, 0x607a0320L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a09*/ {0x1L, 0x607a0420L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a0a*/ {0x1L, 0x607a0520L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a0b*/ {0x1L, 0x607a0620L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a0c*/ {0x1L, 0x60ff0120L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a0d*/ {0x1L, 0x60ff0220L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a0e*/ {0x1L, 0x60ff0320L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a0f*/ {0x1L, 0x60ff0420L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a10*/ {0x1L, 0x60ff0520L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a11*/ {0x1L, 0x60ff0620L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a12*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a13*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a14*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a15*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a16*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a17*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a18*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a19*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a1a*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a1b*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a1c*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a1d*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a1e*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a1f*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L}},
-/*1f80*/ 0x0000L,
-/*1f81*/ {0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1f82*/ {0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1f89*/ 0x0000L,
-/*2100*/ {0x0L},
-/*2101*/ 0x20L,
-/*2102*/ 0xfa,
-/*2103*/ 0x00,
-/*2104*/ 0x00,
-/*2106*/ 0x0000L,
-/*2107*/ {0x3e8, 0x00, 0x00, 0x00, 0x00},
-/*2108*/ {0x00},
-/*2109*/ {0x00},
-/*2110*/ {0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*2111*/ {0x0001L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*2112*/ {0x0001L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*2120*/ {0x5L, 0x1234567890abcdefL, 0x234567890abcdef1L, 12.345, 456.789, 0},
-/*2130*/ {0x3L, {'-'}, 0x00000000L, 0x0000L},
-/*2301*/ {{0x8L, 0x03e8L, 0x0L, {'T', 'r', 'a', 'c', 'e', '1'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2302*/ {0x8L, 0x03e8L, 0x0L, {'T', 'r', 'a', 'c', 'e', '2'}, {'g', 'r', 'e', 'e', 'n'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2303*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2304*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2305*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2306*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2307*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2308*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2309*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*230a*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*230b*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*230c*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*230d*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*230e*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*230f*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2310*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2311*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2312*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2313*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2314*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2315*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2316*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2317*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2318*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2319*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*231a*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*231b*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*231c*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*231d*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*231e*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*231f*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2320*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L}},
-/*2400*/ 0x0L,
-/*2401*/ {{0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2402*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2403*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2404*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2405*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2406*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2407*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2408*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2409*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*240a*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*240b*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*240c*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*240d*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*240e*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*240f*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2410*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2411*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2412*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2413*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2414*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2415*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2416*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2417*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2418*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2419*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*241a*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*241b*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*241c*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*241d*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*241e*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*241f*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2420*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L}},
-/*6000*/ {0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*6040*/ {0x6L, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
-/*6041*/ {0x6L, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
-/*6064*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*606c*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*6077*/ {0x4L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*607a*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*60ff*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*6200*/ {0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*6401*/ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
-/*6411*/ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
+/*2106*/ 0x0L,
+/*2112*/ {1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L},
 
            CO_OD_FIRST_LAST_WORD,
 };
 
 
-/***** Definition for EEPROM variables ********************************************/
-struct sCO_OD_EEPROM CO_OD_EEPROM = {
+/***** Definition for ROM variables *******************************************/
+   struct sCO_OD_ROM CO_OD_ROM = {    //constant variables, stored in flash
            CO_OD_FIRST_LAST_WORD,
 
-
-           CO_OD_FIRST_LAST_WORD,
+/*1000*/ 0x0L,
+/*1005*/ 0x80L,
+/*1006*/ 0x0L,
+/*1007*/ 0x0L,
+/*1008*/ {'C', 'A', 'N', 'o', 'p', 'e', 'n', 'N', 'o', 'd', 'e'},
+/*1009*/ {'3', '.', '0', '0'},
+/*100A*/ {'3', '.', '0', '0'},
+/*1014*/ 0x80L,
+/*1015*/ 0x64,
+/*1016*/ {0x0L, 0x0L, 0x0L, 0x0L},
+/*1017*/ 0x3E8,
+/*1018*/ {0x4, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1019*/ 0x0,
+/*1029*/ {0x0, 0x0, 0x1, 0x0, 0x0, 0x0},
+/*1200*/{{0x2, 0x600L, 0x580L}},
+/*1400*/{{0x2, 0x200L, 0xFF},
+/*1401*/ {0x2, 0x300L, 0xFE},
+/*1402*/ {0x2, 0x400L, 0xFE},
+/*1403*/ {0x2, 0x500L, 0xFE},
+/*1404*/ {0x2, 0x80000000L, 0xFE},
+/*1405*/ {0x2, 0x80000000L, 0xFE},
+/*1406*/ {0x2, 0x80000000L, 0xFE},
+/*1407*/ {0x2, 0x80000000L, 0xFE},
+/*1408*/ {0x2, 0x80000000L, 0xFE},
+/*1409*/ {0x2, 0x80000000L, 0xFE},
+/*140A*/ {0x2, 0x80000000L, 0xFE},
+/*140B*/ {0x2, 0x80000000L, 0xFE},
+/*140C*/ {0x2, 0x80000000L, 0xFE},
+/*140D*/ {0x2, 0x80000000L, 0xFE},
+/*140E*/ {0x2, 0x80000000L, 0xFE},
+/*140F*/ {0x2, 0x80000000L, 0xFE}},
+/*1600*/{{0x2, 0x62000108L, 0x62000208L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1601*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1602*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1603*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1604*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1605*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1606*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1607*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1608*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1609*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*160A*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*160B*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*160C*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*160D*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*160E*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*160F*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L}},
+/*1800*/{{0x6, 0x180L, 0xFF, 0x64, 0x0, 0x0, 0x0},
+/*1801*/ {0x6, 0x280L, 0xFE, 0x0, 0x0, 0x0, 0x0},
+/*1802*/ {0x6, 0x380L, 0xFE, 0x0, 0x0, 0x0, 0x0},
+/*1803*/ {0x6, 0x480L, 0xFE, 0x0, 0x0, 0x0, 0x0},
+/*1804*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
+/*1805*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
+/*1806*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
+/*1807*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
+/*1808*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
+/*1809*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
+/*180A*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
+/*180B*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
+/*180C*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
+/*180D*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
+/*180E*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
+/*180F*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0}},
+/*1A00*/{{0x2, 0x60000108L, 0x60000208L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1A01*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1A02*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1A03*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1A04*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1A05*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1A06*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1A07*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1A08*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1A09*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1A0A*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1A0B*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1A0C*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1A0D*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1A0E*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
+/*1A0F*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L}},
+/*1F80*/ 0x0L,
+/*2101*/ 0x20,
+/*2102*/ 0xFA,
+/*2111*/ {1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L},
+/*2301*/{{0x8, 0x3E8L, 0x0, {'T', 'r', 'a', 'c', 'e', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*2302*/ {0x8, 0x3E8L, 0x0, {'T', 'r', 'a', 'c', 'e', '2', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'g', 'r', 'e', 'e', 'n', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*2303*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*2304*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*2305*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*2306*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*2307*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*2308*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*2309*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*230A*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*230B*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*230C*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*230D*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*230E*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*230F*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*2310*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*2311*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*2312*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*2313*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*2314*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*2315*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*2316*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*2317*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*2318*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*2319*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*231A*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*231B*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*231C*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*231D*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*231E*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*231F*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
+/*2320*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L}},
+
+           CO_OD_FIRST_LAST_WORD
 };
 
 
-
-
 /*******************************************************************************
    STRUCTURES FOR RECORD TYPE OBJECTS
 *******************************************************************************/
-
-
 /*0x1018*/ const CO_OD_entryRecord_t OD_record1018[5] = {
-           {(void*)&CO_OD_RAM.identity.maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.identity.vendorID, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.identity.productCode, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.identity.revisionNumber, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.identity.serialNumber, 0x86, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.identity.maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.identity.vendorID, 0x85,  4},
+           {(void*)&CO_OD_ROM.identity.productCode, 0x85,  4},
+           {(void*)&CO_OD_ROM.identity.revisionNumber, 0x85,  4},
+           {(void*)&CO_OD_ROM.identity.serialNumber, 0x85,  4}};
 /*0x1200*/ const CO_OD_entryRecord_t OD_record1200[3] = {
-           {(void*)&CO_OD_RAM.SDOServerParameter[0].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.SDOServerParameter[0].COB_IDClientToServer, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.SDOServerParameter[0].COB_IDServerToClient, 0x86, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.SDOServerParameter[0].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.SDOServerParameter[0].COB_IDClientToServer, 0x85,  4},
+           {(void*)&CO_OD_ROM.SDOServerParameter[0].COB_IDServerToClient, 0x85,  4}};
 /*0x1280*/ const CO_OD_entryRecord_t OD_record1280[4] = {
-           {(void*)&CO_OD_RAM.SDOClientParameter[0].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.SDOClientParameter[0].COB_IDClientToServer, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.SDOClientParameter[0].COB_IDServerToClient, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.SDOClientParameter[0].nodeIDOfTheSDOServer, 0x0e, 0x1 },
-};
-
+           {(void*)&CO_OD_RAM.SDOClientParameter[0].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.SDOClientParameter[0].COB_IDClientToServer, 0xBE,  4},
+           {(void*)&CO_OD_RAM.SDOClientParameter[0].COB_IDServerToClient, 0xBE,  4},
+           {(void*)&CO_OD_RAM.SDOClientParameter[0].nodeIDOfTheSDOServer, 0x0E,  1}};
 /*0x1400*/ const CO_OD_entryRecord_t OD_record1400[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[0].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[0].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[0].transmissionType, 0x0e, 0x1 },
-};
-
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[0].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[0].COB_IDUsedByRPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[0].transmissionType, 0x0D,  1}};
 /*0x1401*/ const CO_OD_entryRecord_t OD_record1401[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[1].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[1].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[1].transmissionType, 0x0e, 0x1 },
-};
-
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[1].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[1].COB_IDUsedByRPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[1].transmissionType, 0x0D,  1}};
 /*0x1402*/ const CO_OD_entryRecord_t OD_record1402[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[2].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[2].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[2].transmissionType, 0x0e, 0x1 },
-};
-
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[2].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[2].COB_IDUsedByRPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[2].transmissionType, 0x0D,  1}};
 /*0x1403*/ const CO_OD_entryRecord_t OD_record1403[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[3].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[3].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[3].transmissionType, 0x0e, 0x1 },
-};
-
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[3].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[3].COB_IDUsedByRPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[3].transmissionType, 0x0D,  1}};
 /*0x1404*/ const CO_OD_entryRecord_t OD_record1404[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[4].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[4].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[4].transmissionType, 0x0e, 0x1 },
-};
-
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[4].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[4].COB_IDUsedByRPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[4].transmissionType, 0x0D,  1}};
 /*0x1405*/ const CO_OD_entryRecord_t OD_record1405[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[5].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[5].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[5].transmissionType, 0x0e, 0x1 },
-};
-
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[5].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[5].COB_IDUsedByRPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[5].transmissionType, 0x0D,  1}};
 /*0x1406*/ const CO_OD_entryRecord_t OD_record1406[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[6].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[6].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[6].transmissionType, 0x0e, 0x1 },
-};
-
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[6].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[6].COB_IDUsedByRPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[6].transmissionType, 0x0D,  1}};
 /*0x1407*/ const CO_OD_entryRecord_t OD_record1407[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[7].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[7].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[7].transmissionType, 0x0e, 0x1 },
-};
-
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[7].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[7].COB_IDUsedByRPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[7].transmissionType, 0x0D,  1}};
 /*0x1408*/ const CO_OD_entryRecord_t OD_record1408[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[8].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[8].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[8].transmissionType, 0x0e, 0x1 },
-};
-
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[8].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[8].COB_IDUsedByRPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[8].transmissionType, 0x0D,  1}};
 /*0x1409*/ const CO_OD_entryRecord_t OD_record1409[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[9].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[9].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[9].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x140a*/ const CO_OD_entryRecord_t OD_record140a[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[10].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[10].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[10].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x140b*/ const CO_OD_entryRecord_t OD_record140b[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[11].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[11].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[11].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x140c*/ const CO_OD_entryRecord_t OD_record140c[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[12].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[12].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[12].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x140d*/ const CO_OD_entryRecord_t OD_record140d[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[13].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[13].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[13].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x140e*/ const CO_OD_entryRecord_t OD_record140e[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[14].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[14].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[14].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x140f*/ const CO_OD_entryRecord_t OD_record140f[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[15].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[15].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[15].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x1410*/ const CO_OD_entryRecord_t OD_record1410[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[16].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[16].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[16].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x1411*/ const CO_OD_entryRecord_t OD_record1411[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[17].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[17].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[17].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x1412*/ const CO_OD_entryRecord_t OD_record1412[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[18].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[18].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[18].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x1413*/ const CO_OD_entryRecord_t OD_record1413[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[19].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[19].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[19].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x1414*/ const CO_OD_entryRecord_t OD_record1414[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[20].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[20].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[20].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x1415*/ const CO_OD_entryRecord_t OD_record1415[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[21].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[21].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[21].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x1416*/ const CO_OD_entryRecord_t OD_record1416[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[22].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[22].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[22].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x1417*/ const CO_OD_entryRecord_t OD_record1417[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[23].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[23].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[23].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x1418*/ const CO_OD_entryRecord_t OD_record1418[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[24].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[24].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[24].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x1419*/ const CO_OD_entryRecord_t OD_record1419[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[25].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[25].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[25].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x141a*/ const CO_OD_entryRecord_t OD_record141a[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[26].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[26].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[26].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x141b*/ const CO_OD_entryRecord_t OD_record141b[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[27].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[27].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[27].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x141c*/ const CO_OD_entryRecord_t OD_record141c[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[28].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[28].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[28].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x141d*/ const CO_OD_entryRecord_t OD_record141d[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[29].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[29].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[29].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x141e*/ const CO_OD_entryRecord_t OD_record141e[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[30].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[30].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[30].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x141f*/ const CO_OD_entryRecord_t OD_record141f[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[31].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[31].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[31].transmissionType, 0x0e, 0x1 },
-};
-
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[9].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[9].COB_IDUsedByRPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[9].transmissionType, 0x0D,  1}};
+/*0x140A*/ const CO_OD_entryRecord_t OD_record140A[3] = {
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[10].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[10].COB_IDUsedByRPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[10].transmissionType, 0x0D,  1}};
+/*0x140B*/ const CO_OD_entryRecord_t OD_record140B[3] = {
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[11].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[11].COB_IDUsedByRPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[11].transmissionType, 0x0D,  1}};
+/*0x140C*/ const CO_OD_entryRecord_t OD_record140C[3] = {
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[12].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[12].COB_IDUsedByRPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[12].transmissionType, 0x0D,  1}};
+/*0x140D*/ const CO_OD_entryRecord_t OD_record140D[3] = {
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[13].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[13].COB_IDUsedByRPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[13].transmissionType, 0x0D,  1}};
+/*0x140E*/ const CO_OD_entryRecord_t OD_record140E[3] = {
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[14].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[14].COB_IDUsedByRPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[14].transmissionType, 0x0D,  1}};
+/*0x140F*/ const CO_OD_entryRecord_t OD_record140F[3] = {
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[15].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[15].COB_IDUsedByRPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[15].transmissionType, 0x0D,  1}};
 /*0x1600*/ const CO_OD_entryRecord_t OD_record1600[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[0].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[0].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[0].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[0].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[0].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[0].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[0].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[0].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[0].mappedObject8, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[0].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[0].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[0].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[0].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[0].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[0].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[0].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[0].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[0].mappedObject8, 0x8D,  4}};
 /*0x1601*/ const CO_OD_entryRecord_t OD_record1601[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[1].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[1].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[1].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[1].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[1].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[1].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[1].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[1].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[1].mappedObject8, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[1].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[1].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[1].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[1].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[1].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[1].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[1].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[1].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[1].mappedObject8, 0x8D,  4}};
 /*0x1602*/ const CO_OD_entryRecord_t OD_record1602[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[2].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[2].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[2].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[2].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[2].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[2].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[2].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[2].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[2].mappedObject8, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[2].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[2].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[2].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[2].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[2].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[2].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[2].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[2].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[2].mappedObject8, 0x8D,  4}};
 /*0x1603*/ const CO_OD_entryRecord_t OD_record1603[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[3].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[3].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[3].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[3].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[3].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[3].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[3].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[3].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[3].mappedObject8, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[3].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[3].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[3].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[3].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[3].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[3].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[3].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[3].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[3].mappedObject8, 0x8D,  4}};
 /*0x1604*/ const CO_OD_entryRecord_t OD_record1604[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[4].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[4].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[4].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[4].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[4].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[4].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[4].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[4].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[4].mappedObject8, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[4].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[4].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[4].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[4].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[4].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[4].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[4].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[4].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[4].mappedObject8, 0x8D,  4}};
 /*0x1605*/ const CO_OD_entryRecord_t OD_record1605[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[5].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[5].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[5].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[5].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[5].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[5].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[5].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[5].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[5].mappedObject8, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[5].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[5].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[5].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[5].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[5].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[5].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[5].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[5].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[5].mappedObject8, 0x8D,  4}};
 /*0x1606*/ const CO_OD_entryRecord_t OD_record1606[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[6].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[6].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[6].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[6].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[6].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[6].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[6].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[6].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[6].mappedObject8, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[6].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[6].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[6].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[6].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[6].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[6].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[6].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[6].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[6].mappedObject8, 0x8D,  4}};
 /*0x1607*/ const CO_OD_entryRecord_t OD_record1607[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[7].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[7].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[7].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[7].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[7].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[7].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[7].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[7].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[7].mappedObject8, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[7].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[7].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[7].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[7].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[7].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[7].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[7].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[7].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[7].mappedObject8, 0x8D,  4}};
 /*0x1608*/ const CO_OD_entryRecord_t OD_record1608[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[8].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[8].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[8].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[8].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[8].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[8].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[8].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[8].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[8].mappedObject8, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[8].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[8].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[8].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[8].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[8].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[8].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[8].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[8].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[8].mappedObject8, 0x8D,  4}};
 /*0x1609*/ const CO_OD_entryRecord_t OD_record1609[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[9].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[9].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[9].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[9].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[9].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[9].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[9].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[9].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[9].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x160a*/ const CO_OD_entryRecord_t OD_record160a[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[10].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[10].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[10].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[10].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[10].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[10].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[10].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[10].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[10].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x160b*/ const CO_OD_entryRecord_t OD_record160b[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[11].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[11].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[11].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[11].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[11].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[11].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[11].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[11].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[11].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x160c*/ const CO_OD_entryRecord_t OD_record160c[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[12].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[12].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[12].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[12].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[12].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[12].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[12].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[12].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[12].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x160d*/ const CO_OD_entryRecord_t OD_record160d[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[13].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[13].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[13].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[13].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[13].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[13].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[13].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[13].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[13].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x160e*/ const CO_OD_entryRecord_t OD_record160e[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[14].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[14].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[14].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[14].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[14].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[14].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[14].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[14].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[14].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x160f*/ const CO_OD_entryRecord_t OD_record160f[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[15].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[15].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[15].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[15].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[15].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[15].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[15].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[15].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[15].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1610*/ const CO_OD_entryRecord_t OD_record1610[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[16].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[16].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[16].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[16].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[16].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[16].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[16].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[16].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[16].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1611*/ const CO_OD_entryRecord_t OD_record1611[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[17].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[17].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[17].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[17].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[17].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[17].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[17].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[17].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[17].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1612*/ const CO_OD_entryRecord_t OD_record1612[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[18].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[18].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[18].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[18].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[18].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[18].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[18].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[18].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[18].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1613*/ const CO_OD_entryRecord_t OD_record1613[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[19].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[19].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[19].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[19].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[19].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[19].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[19].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[19].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[19].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1614*/ const CO_OD_entryRecord_t OD_record1614[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[20].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[20].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[20].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[20].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[20].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[20].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[20].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[20].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[20].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1615*/ const CO_OD_entryRecord_t OD_record1615[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[21].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[21].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[21].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[21].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[21].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[21].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[21].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[21].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[21].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1616*/ const CO_OD_entryRecord_t OD_record1616[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[22].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[22].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[22].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[22].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[22].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[22].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[22].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[22].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[22].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1617*/ const CO_OD_entryRecord_t OD_record1617[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[23].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[23].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[23].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[23].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[23].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[23].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[23].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[23].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[23].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1618*/ const CO_OD_entryRecord_t OD_record1618[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[24].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[24].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[24].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[24].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[24].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[24].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[24].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[24].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[24].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1619*/ const CO_OD_entryRecord_t OD_record1619[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[25].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[25].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[25].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[25].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[25].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[25].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[25].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[25].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[25].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x161a*/ const CO_OD_entryRecord_t OD_record161a[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[26].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[26].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[26].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[26].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[26].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[26].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[26].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[26].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[26].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x161b*/ const CO_OD_entryRecord_t OD_record161b[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[27].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[27].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[27].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[27].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[27].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[27].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[27].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[27].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[27].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x161c*/ const CO_OD_entryRecord_t OD_record161c[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[28].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[28].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[28].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[28].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[28].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[28].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[28].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[28].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[28].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x161d*/ const CO_OD_entryRecord_t OD_record161d[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[29].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[29].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[29].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[29].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[29].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[29].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[29].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[29].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[29].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x161e*/ const CO_OD_entryRecord_t OD_record161e[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[30].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[30].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[30].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[30].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[30].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[30].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[30].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[30].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[30].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x161f*/ const CO_OD_entryRecord_t OD_record161f[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[31].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[31].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[31].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[31].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[31].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[31].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[31].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[31].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[31].mappedObject8, 0x86, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[9].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[9].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[9].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[9].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[9].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[9].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[9].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[9].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[9].mappedObject8, 0x8D,  4}};
+/*0x160A*/ const CO_OD_entryRecord_t OD_record160A[9] = {
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[10].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[10].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[10].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[10].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[10].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[10].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[10].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[10].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[10].mappedObject8, 0x8D,  4}};
+/*0x160B*/ const CO_OD_entryRecord_t OD_record160B[9] = {
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[11].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[11].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[11].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[11].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[11].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[11].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[11].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[11].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[11].mappedObject8, 0x8D,  4}};
+/*0x160C*/ const CO_OD_entryRecord_t OD_record160C[9] = {
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[12].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[12].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[12].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[12].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[12].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[12].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[12].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[12].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[12].mappedObject8, 0x8D,  4}};
+/*0x160D*/ const CO_OD_entryRecord_t OD_record160D[9] = {
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[13].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[13].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[13].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[13].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[13].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[13].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[13].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[13].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[13].mappedObject8, 0x8D,  4}};
+/*0x160E*/ const CO_OD_entryRecord_t OD_record160E[9] = {
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[14].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[14].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[14].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[14].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[14].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[14].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[14].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[14].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[14].mappedObject8, 0x8D,  4}};
+/*0x160F*/ const CO_OD_entryRecord_t OD_record160F[9] = {
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[15].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[15].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[15].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[15].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[15].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[15].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[15].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[15].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.RPDOMappingParameter[15].mappedObject8, 0x8D,  4}};
 /*0x1800*/ const CO_OD_entryRecord_t OD_record1800[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[0].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[0].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[0].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[0].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[0].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[0].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[0].SYNCStartValue, 0x0e, 0x1 },
-};
-
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[0].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[0].COB_IDUsedByTPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[0].transmissionType, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[0].inhibitTime, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[0].compatibilityEntry, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[0].eventTimer, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[0].SYNCStartValue, 0x0D,  1}};
 /*0x1801*/ const CO_OD_entryRecord_t OD_record1801[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[1].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[1].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[1].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[1].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[1].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[1].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[1].SYNCStartValue, 0x0e, 0x1 },
-};
-
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[1].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[1].COB_IDUsedByTPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[1].transmissionType, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[1].inhibitTime, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[1].compatibilityEntry, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[1].eventTimer, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[1].SYNCStartValue, 0x0D,  1}};
 /*0x1802*/ const CO_OD_entryRecord_t OD_record1802[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[2].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[2].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[2].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[2].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[2].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[2].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[2].SYNCStartValue, 0x0e, 0x1 },
-};
-
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[2].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[2].COB_IDUsedByTPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[2].transmissionType, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[2].inhibitTime, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[2].compatibilityEntry, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[2].eventTimer, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[2].SYNCStartValue, 0x0D,  1}};
 /*0x1803*/ const CO_OD_entryRecord_t OD_record1803[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[3].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[3].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[3].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[3].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[3].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[3].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[3].SYNCStartValue, 0x0e, 0x1 },
-};
-
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[3].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[3].COB_IDUsedByTPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[3].transmissionType, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[3].inhibitTime, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[3].compatibilityEntry, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[3].eventTimer, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[3].SYNCStartValue, 0x0D,  1}};
 /*0x1804*/ const CO_OD_entryRecord_t OD_record1804[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[4].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[4].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[4].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[4].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[4].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[4].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[4].SYNCStartValue, 0x0e, 0x1 },
-};
-
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[4].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[4].COB_IDUsedByTPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[4].transmissionType, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[4].inhibitTime, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[4].compatibilityEntry, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[4].eventTimer, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[4].SYNCStartValue, 0x0D,  1}};
 /*0x1805*/ const CO_OD_entryRecord_t OD_record1805[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[5].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[5].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[5].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[5].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[5].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[5].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[5].SYNCStartValue, 0x0e, 0x1 },
-};
-
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[5].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[5].COB_IDUsedByTPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[5].transmissionType, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[5].inhibitTime, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[5].compatibilityEntry, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[5].eventTimer, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[5].SYNCStartValue, 0x0D,  1}};
 /*0x1806*/ const CO_OD_entryRecord_t OD_record1806[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[6].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[6].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[6].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[6].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[6].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[6].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[6].SYNCStartValue, 0x0e, 0x1 },
-};
-
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[6].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[6].COB_IDUsedByTPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[6].transmissionType, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[6].inhibitTime, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[6].compatibilityEntry, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[6].eventTimer, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[6].SYNCStartValue, 0x0D,  1}};
 /*0x1807*/ const CO_OD_entryRecord_t OD_record1807[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[7].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[7].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[7].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[7].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[7].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[7].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[7].SYNCStartValue, 0x0e, 0x1 },
-};
-
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[7].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[7].COB_IDUsedByTPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[7].transmissionType, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[7].inhibitTime, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[7].compatibilityEntry, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[7].eventTimer, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[7].SYNCStartValue, 0x0D,  1}};
 /*0x1808*/ const CO_OD_entryRecord_t OD_record1808[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[8].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[8].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[8].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[8].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[8].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[8].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[8].SYNCStartValue, 0x0e, 0x1 },
-};
-
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[8].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[8].COB_IDUsedByTPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[8].transmissionType, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[8].inhibitTime, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[8].compatibilityEntry, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[8].eventTimer, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[8].SYNCStartValue, 0x0D,  1}};
 /*0x1809*/ const CO_OD_entryRecord_t OD_record1809[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[9].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[9].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[9].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[9].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[9].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[9].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[9].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x180a*/ const CO_OD_entryRecord_t OD_record180a[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[10].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[10].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[10].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[10].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[10].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[10].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[10].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x180b*/ const CO_OD_entryRecord_t OD_record180b[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[11].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[11].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[11].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[11].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[11].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[11].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[11].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x180c*/ const CO_OD_entryRecord_t OD_record180c[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[12].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[12].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[12].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[12].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[12].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[12].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[12].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x180d*/ const CO_OD_entryRecord_t OD_record180d[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[13].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[13].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[13].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[13].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[13].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[13].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[13].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x180e*/ const CO_OD_entryRecord_t OD_record180e[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[14].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[14].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[14].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[14].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[14].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[14].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[14].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x180f*/ const CO_OD_entryRecord_t OD_record180f[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[15].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[15].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[15].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[15].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[15].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[15].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[15].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1810*/ const CO_OD_entryRecord_t OD_record1810[6] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[16].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[16].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[16].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[16].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[16].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[16].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1811*/ const CO_OD_entryRecord_t OD_record1811[6] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[17].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[17].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[17].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[17].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[17].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[17].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1812*/ const CO_OD_entryRecord_t OD_record1812[6] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[18].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[18].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[18].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[18].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[18].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[18].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1813*/ const CO_OD_entryRecord_t OD_record1813[6] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[19].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[19].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[19].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[19].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[19].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[19].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1814*/ const CO_OD_entryRecord_t OD_record1814[6] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[20].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[20].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[20].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[20].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[20].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[20].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1815*/ const CO_OD_entryRecord_t OD_record1815[6] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[21].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[21].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[21].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[21].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[21].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[21].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1816*/ const CO_OD_entryRecord_t OD_record1816[6] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[22].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[22].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[22].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[22].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[22].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[22].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1817*/ const CO_OD_entryRecord_t OD_record1817[6] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[23].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[23].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[23].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[23].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[23].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[23].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1818*/ const CO_OD_entryRecord_t OD_record1818[6] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[24].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[24].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[24].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[24].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[24].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[24].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1819*/ const CO_OD_entryRecord_t OD_record1819[6] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[25].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[25].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[25].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[25].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[25].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[25].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x181a*/ const CO_OD_entryRecord_t OD_record181a[6] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[26].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[26].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[26].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[26].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[26].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[26].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x181b*/ const CO_OD_entryRecord_t OD_record181b[6] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[27].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[27].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[27].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[27].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[27].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[27].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x181c*/ const CO_OD_entryRecord_t OD_record181c[6] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[28].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[28].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[28].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[28].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[28].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[28].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x181d*/ const CO_OD_entryRecord_t OD_record181d[6] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[29].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[29].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[29].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[29].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[29].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[29].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x181e*/ const CO_OD_entryRecord_t OD_record181e[6] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[30].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[30].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[30].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[30].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[30].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[30].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x181f*/ const CO_OD_entryRecord_t OD_record181f[6] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[31].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[31].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[31].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[31].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[31].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[31].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1a00*/ const CO_OD_entryRecord_t OD_record1a00[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[0].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[0].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[0].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[0].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[0].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[0].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[0].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[0].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[0].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a01*/ const CO_OD_entryRecord_t OD_record1a01[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[1].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[1].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[1].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[1].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[1].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[1].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[1].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[1].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[1].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a02*/ const CO_OD_entryRecord_t OD_record1a02[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[2].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[2].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[2].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[2].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[2].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[2].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[2].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[2].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[2].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a03*/ const CO_OD_entryRecord_t OD_record1a03[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[3].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[3].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[3].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[3].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[3].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[3].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[3].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[3].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[3].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a04*/ const CO_OD_entryRecord_t OD_record1a04[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[4].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[4].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[4].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[4].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[4].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[4].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[4].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[4].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[4].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a05*/ const CO_OD_entryRecord_t OD_record1a05[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[5].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[5].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[5].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[5].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[5].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[5].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[5].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[5].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[5].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a06*/ const CO_OD_entryRecord_t OD_record1a06[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[6].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[6].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[6].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[6].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[6].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[6].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[6].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[6].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[6].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a07*/ const CO_OD_entryRecord_t OD_record1a07[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[7].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[7].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[7].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[7].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[7].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[7].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[7].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[7].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[7].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a08*/ const CO_OD_entryRecord_t OD_record1a08[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[8].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[8].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[8].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[8].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[8].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[8].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[8].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[8].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[8].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a09*/ const CO_OD_entryRecord_t OD_record1a09[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[9].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[9].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[9].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[9].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[9].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[9].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[9].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[9].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[9].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a0a*/ const CO_OD_entryRecord_t OD_record1a0a[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[10].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[10].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[10].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[10].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[10].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[10].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[10].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[10].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[10].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a0b*/ const CO_OD_entryRecord_t OD_record1a0b[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[11].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[11].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[11].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[11].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[11].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[11].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[11].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[11].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[11].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a0c*/ const CO_OD_entryRecord_t OD_record1a0c[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[12].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[12].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[12].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[12].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[12].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[12].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[12].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[12].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[12].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a0d*/ const CO_OD_entryRecord_t OD_record1a0d[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[13].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[13].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[13].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[13].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[13].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[13].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[13].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[13].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[13].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a0e*/ const CO_OD_entryRecord_t OD_record1a0e[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[14].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[14].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[14].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[14].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[14].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[14].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[14].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[14].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[14].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a0f*/ const CO_OD_entryRecord_t OD_record1a0f[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[15].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[15].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[15].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[15].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[15].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[15].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[15].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[15].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[15].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a10*/ const CO_OD_entryRecord_t OD_record1a10[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[16].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[16].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[16].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[16].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[16].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[16].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[16].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[16].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[16].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1a11*/ const CO_OD_entryRecord_t OD_record1a11[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[17].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[17].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[17].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[17].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[17].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[17].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[17].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[17].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[17].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1a12*/ const CO_OD_entryRecord_t OD_record1a12[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[18].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[18].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[18].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[18].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[18].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[18].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[18].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[18].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[18].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1a13*/ const CO_OD_entryRecord_t OD_record1a13[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[19].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[19].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[19].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[19].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[19].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[19].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[19].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[19].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[19].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1a14*/ const CO_OD_entryRecord_t OD_record1a14[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[20].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[20].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[20].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[20].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[20].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[20].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[20].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[20].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[20].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1a15*/ const CO_OD_entryRecord_t OD_record1a15[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[21].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[21].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[21].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[21].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[21].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[21].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[21].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[21].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[21].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1a16*/ const CO_OD_entryRecord_t OD_record1a16[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[22].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[22].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[22].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[22].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[22].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[22].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[22].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[22].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[22].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1a17*/ const CO_OD_entryRecord_t OD_record1a17[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[23].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[23].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[23].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[23].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[23].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[23].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[23].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[23].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[23].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1a18*/ const CO_OD_entryRecord_t OD_record1a18[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[24].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[24].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[24].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[24].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[24].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[24].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[24].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[24].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[24].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1a19*/ const CO_OD_entryRecord_t OD_record1a19[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[25].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[25].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[25].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[25].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[25].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[25].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[25].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[25].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[25].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1a1a*/ const CO_OD_entryRecord_t OD_record1a1a[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[26].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[26].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[26].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[26].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[26].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[26].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[26].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[26].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[26].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1a1b*/ const CO_OD_entryRecord_t OD_record1a1b[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[27].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[27].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[27].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[27].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[27].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[27].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[27].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[27].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[27].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1a1c*/ const CO_OD_entryRecord_t OD_record1a1c[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[28].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[28].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[28].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[28].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[28].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[28].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[28].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[28].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[28].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1a1d*/ const CO_OD_entryRecord_t OD_record1a1d[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[29].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[29].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[29].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[29].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[29].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[29].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[29].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[29].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[29].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1a1e*/ const CO_OD_entryRecord_t OD_record1a1e[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[30].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[30].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[30].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[30].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[30].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[30].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[30].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[30].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[30].mappedObject8, 0x86, 0x4 },
-};
-
-/*0x1a1f*/ const CO_OD_entryRecord_t OD_record1a1f[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[31].numberOfMappedObjects, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[31].mappedObject1, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[31].mappedObject2, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[31].mappedObject3, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[31].mappedObject4, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[31].mappedObject5, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[31].mappedObject6, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[31].mappedObject7, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[31].mappedObject8, 0x86, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[9].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[9].COB_IDUsedByTPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[9].transmissionType, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[9].inhibitTime, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[9].compatibilityEntry, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[9].eventTimer, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[9].SYNCStartValue, 0x0D,  1}};
+/*0x180A*/ const CO_OD_entryRecord_t OD_record180A[7] = {
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[10].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[10].COB_IDUsedByTPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[10].transmissionType, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[10].inhibitTime, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[10].compatibilityEntry, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[10].eventTimer, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[10].SYNCStartValue, 0x0D,  1}};
+/*0x180B*/ const CO_OD_entryRecord_t OD_record180B[7] = {
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[11].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[11].COB_IDUsedByTPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[11].transmissionType, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[11].inhibitTime, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[11].compatibilityEntry, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[11].eventTimer, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[11].SYNCStartValue, 0x0D,  1}};
+/*0x180C*/ const CO_OD_entryRecord_t OD_record180C[7] = {
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[12].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[12].COB_IDUsedByTPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[12].transmissionType, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[12].inhibitTime, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[12].compatibilityEntry, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[12].eventTimer, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[12].SYNCStartValue, 0x0D,  1}};
+/*0x180D*/ const CO_OD_entryRecord_t OD_record180D[7] = {
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[13].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[13].COB_IDUsedByTPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[13].transmissionType, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[13].inhibitTime, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[13].compatibilityEntry, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[13].eventTimer, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[13].SYNCStartValue, 0x0D,  1}};
+/*0x180E*/ const CO_OD_entryRecord_t OD_record180E[7] = {
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[14].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[14].COB_IDUsedByTPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[14].transmissionType, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[14].inhibitTime, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[14].compatibilityEntry, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[14].eventTimer, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[14].SYNCStartValue, 0x0D,  1}};
+/*0x180F*/ const CO_OD_entryRecord_t OD_record180F[7] = {
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[15].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[15].COB_IDUsedByTPDO, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[15].transmissionType, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[15].inhibitTime, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[15].compatibilityEntry, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[15].eventTimer, 0x8D,  2},
+           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[15].SYNCStartValue, 0x0D,  1}};
+/*0x1A00*/ const CO_OD_entryRecord_t OD_record1A00[9] = {
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[0].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[0].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[0].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[0].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[0].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[0].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[0].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[0].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[0].mappedObject8, 0x8D,  4}};
+/*0x1A01*/ const CO_OD_entryRecord_t OD_record1A01[9] = {
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[1].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[1].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[1].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[1].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[1].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[1].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[1].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[1].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[1].mappedObject8, 0x8D,  4}};
+/*0x1A02*/ const CO_OD_entryRecord_t OD_record1A02[9] = {
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[2].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[2].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[2].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[2].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[2].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[2].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[2].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[2].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[2].mappedObject8, 0x8D,  4}};
+/*0x1A03*/ const CO_OD_entryRecord_t OD_record1A03[9] = {
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[3].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[3].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[3].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[3].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[3].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[3].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[3].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[3].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[3].mappedObject8, 0x8D,  4}};
+/*0x1A04*/ const CO_OD_entryRecord_t OD_record1A04[9] = {
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[4].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[4].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[4].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[4].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[4].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[4].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[4].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[4].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[4].mappedObject8, 0x8D,  4}};
+/*0x1A05*/ const CO_OD_entryRecord_t OD_record1A05[9] = {
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[5].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[5].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[5].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[5].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[5].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[5].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[5].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[5].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[5].mappedObject8, 0x8D,  4}};
+/*0x1A06*/ const CO_OD_entryRecord_t OD_record1A06[9] = {
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[6].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[6].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[6].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[6].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[6].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[6].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[6].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[6].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[6].mappedObject8, 0x8D,  4}};
+/*0x1A07*/ const CO_OD_entryRecord_t OD_record1A07[9] = {
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[7].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[7].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[7].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[7].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[7].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[7].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[7].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[7].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[7].mappedObject8, 0x8D,  4}};
+/*0x1A08*/ const CO_OD_entryRecord_t OD_record1A08[9] = {
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[8].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[8].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[8].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[8].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[8].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[8].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[8].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[8].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[8].mappedObject8, 0x8D,  4}};
+/*0x1A09*/ const CO_OD_entryRecord_t OD_record1A09[9] = {
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[9].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[9].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[9].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[9].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[9].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[9].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[9].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[9].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[9].mappedObject8, 0x8D,  4}};
+/*0x1A0A*/ const CO_OD_entryRecord_t OD_record1A0A[9] = {
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[10].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[10].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[10].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[10].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[10].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[10].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[10].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[10].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[10].mappedObject8, 0x8D,  4}};
+/*0x1A0B*/ const CO_OD_entryRecord_t OD_record1A0B[9] = {
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[11].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[11].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[11].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[11].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[11].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[11].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[11].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[11].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[11].mappedObject8, 0x8D,  4}};
+/*0x1A0C*/ const CO_OD_entryRecord_t OD_record1A0C[9] = {
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[12].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[12].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[12].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[12].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[12].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[12].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[12].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[12].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[12].mappedObject8, 0x8D,  4}};
+/*0x1A0D*/ const CO_OD_entryRecord_t OD_record1A0D[9] = {
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[13].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[13].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[13].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[13].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[13].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[13].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[13].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[13].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[13].mappedObject8, 0x8D,  4}};
+/*0x1A0E*/ const CO_OD_entryRecord_t OD_record1A0E[9] = {
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[14].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[14].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[14].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[14].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[14].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[14].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[14].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[14].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[14].mappedObject8, 0x8D,  4}};
+/*0x1A0F*/ const CO_OD_entryRecord_t OD_record1A0F[9] = {
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[15].numberOfMappedObjects, 0x0D,  1},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[15].mappedObject1, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[15].mappedObject2, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[15].mappedObject3, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[15].mappedObject4, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[15].mappedObject5, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[15].mappedObject6, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[15].mappedObject7, 0x8D,  4},
+           {(void*)&CO_OD_ROM.TPDOMappingParameter[15].mappedObject8, 0x8D,  4}};
 /*0x2120*/ const CO_OD_entryRecord_t OD_record2120[6] = {
-           {(void*)&CO_OD_RAM.testVar.maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.testVar.I64, 0x9e, 0x8 },
-           {(void*)&CO_OD_RAM.testVar.U64, 0x9e, 0x8 },
-           {(void*)&CO_OD_RAM.testVar.R32, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.testVar.R64, 0x9e, 0x8 },
-           {(void*)0, 0x0e, 0x0 },
-};
-
+           {(void*)&CO_OD_RAM.testVar.maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.testVar.I64, 0xBE,  8},
+           {(void*)&CO_OD_RAM.testVar.U64, 0xBE,  8},
+           {(void*)&CO_OD_RAM.testVar.R32, 0xBE,  4},
+           {(void*)&CO_OD_RAM.testVar.R64, 0xBE,  8},
+           {0, 0x0E,  0}};
 /*0x2130*/ const CO_OD_entryRecord_t OD_record2130[4] = {
-           {(void*)&CO_OD_RAM.time.maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.time.string, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.time.epochTimeBaseMs, 0x86, 0x8 },
-           {(void*)&CO_OD_RAM.time.epochTimeOffsetMs, 0x9e, 0x4 },
-};
-
+           {(void*)&CO_OD_RAM.time.maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.time.string[0], 0x06, 30},
+           {(void*)&CO_OD_RAM.time.epochTimeBaseMs, 0x86,  8},
+           {(void*)&CO_OD_RAM.time.epochTimeOffsetMs, 0xBE,  4}};
 /*0x2301*/ const CO_OD_entryRecord_t OD_record2301[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[0].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[0].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[0].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[0].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[0].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[0].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[0].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[0].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[0].threshold, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.traceConfig[0].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[0].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[0].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[0].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[0].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[0].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[0].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[0].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[0].threshold, 0x8D,  4}};
 /*0x2302*/ const CO_OD_entryRecord_t OD_record2302[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[1].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[1].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[1].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[1].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[1].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[1].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[1].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[1].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[1].threshold, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.traceConfig[1].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[1].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[1].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[1].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[1].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[1].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[1].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[1].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[1].threshold, 0x8D,  4}};
 /*0x2303*/ const CO_OD_entryRecord_t OD_record2303[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[2].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[2].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[2].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[2].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[2].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[2].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[2].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[2].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[2].threshold, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.traceConfig[2].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[2].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[2].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[2].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[2].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[2].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[2].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[2].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[2].threshold, 0x8D,  4}};
 /*0x2304*/ const CO_OD_entryRecord_t OD_record2304[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[3].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[3].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[3].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[3].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[3].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[3].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[3].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[3].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[3].threshold, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.traceConfig[3].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[3].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[3].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[3].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[3].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[3].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[3].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[3].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[3].threshold, 0x8D,  4}};
 /*0x2305*/ const CO_OD_entryRecord_t OD_record2305[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[4].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[4].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[4].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[4].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[4].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[4].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[4].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[4].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[4].threshold, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.traceConfig[4].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[4].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[4].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[4].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[4].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[4].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[4].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[4].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[4].threshold, 0x8D,  4}};
 /*0x2306*/ const CO_OD_entryRecord_t OD_record2306[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[5].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[5].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[5].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[5].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[5].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[5].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[5].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[5].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[5].threshold, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.traceConfig[5].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[5].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[5].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[5].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[5].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[5].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[5].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[5].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[5].threshold, 0x8D,  4}};
 /*0x2307*/ const CO_OD_entryRecord_t OD_record2307[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[6].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[6].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[6].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[6].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[6].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[6].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[6].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[6].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[6].threshold, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.traceConfig[6].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[6].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[6].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[6].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[6].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[6].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[6].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[6].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[6].threshold, 0x8D,  4}};
 /*0x2308*/ const CO_OD_entryRecord_t OD_record2308[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[7].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[7].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[7].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[7].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[7].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[7].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[7].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[7].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[7].threshold, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.traceConfig[7].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[7].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[7].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[7].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[7].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[7].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[7].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[7].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[7].threshold, 0x8D,  4}};
 /*0x2309*/ const CO_OD_entryRecord_t OD_record2309[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[8].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[8].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[8].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[8].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[8].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[8].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[8].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[8].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[8].threshold, 0x8e, 0x4 },
-};
-
-/*0x230a*/ const CO_OD_entryRecord_t OD_record230a[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[9].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[9].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[9].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[9].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[9].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[9].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[9].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[9].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[9].threshold, 0x8e, 0x4 },
-};
-
-/*0x230b*/ const CO_OD_entryRecord_t OD_record230b[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[10].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[10].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[10].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[10].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[10].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[10].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[10].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[10].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[10].threshold, 0x8e, 0x4 },
-};
-
-/*0x230c*/ const CO_OD_entryRecord_t OD_record230c[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[11].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[11].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[11].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[11].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[11].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[11].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[11].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[11].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[11].threshold, 0x8e, 0x4 },
-};
-
-/*0x230d*/ const CO_OD_entryRecord_t OD_record230d[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[12].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[12].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[12].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[12].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[12].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[12].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[12].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[12].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[12].threshold, 0x8e, 0x4 },
-};
-
-/*0x230e*/ const CO_OD_entryRecord_t OD_record230e[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[13].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[13].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[13].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[13].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[13].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[13].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[13].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[13].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[13].threshold, 0x8e, 0x4 },
-};
-
-/*0x230f*/ const CO_OD_entryRecord_t OD_record230f[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[14].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[14].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[14].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[14].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[14].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[14].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[14].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[14].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[14].threshold, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.traceConfig[8].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[8].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[8].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[8].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[8].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[8].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[8].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[8].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[8].threshold, 0x8D,  4}};
+/*0x230A*/ const CO_OD_entryRecord_t OD_record230A[9] = {
+           {(void*)&CO_OD_ROM.traceConfig[9].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[9].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[9].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[9].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[9].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[9].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[9].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[9].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[9].threshold, 0x8D,  4}};
+/*0x230B*/ const CO_OD_entryRecord_t OD_record230B[9] = {
+           {(void*)&CO_OD_ROM.traceConfig[10].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[10].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[10].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[10].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[10].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[10].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[10].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[10].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[10].threshold, 0x8D,  4}};
+/*0x230C*/ const CO_OD_entryRecord_t OD_record230C[9] = {
+           {(void*)&CO_OD_ROM.traceConfig[11].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[11].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[11].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[11].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[11].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[11].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[11].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[11].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[11].threshold, 0x8D,  4}};
+/*0x230D*/ const CO_OD_entryRecord_t OD_record230D[9] = {
+           {(void*)&CO_OD_ROM.traceConfig[12].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[12].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[12].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[12].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[12].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[12].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[12].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[12].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[12].threshold, 0x8D,  4}};
+/*0x230E*/ const CO_OD_entryRecord_t OD_record230E[9] = {
+           {(void*)&CO_OD_ROM.traceConfig[13].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[13].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[13].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[13].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[13].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[13].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[13].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[13].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[13].threshold, 0x8D,  4}};
+/*0x230F*/ const CO_OD_entryRecord_t OD_record230F[9] = {
+           {(void*)&CO_OD_ROM.traceConfig[14].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[14].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[14].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[14].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[14].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[14].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[14].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[14].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[14].threshold, 0x8D,  4}};
 /*0x2310*/ const CO_OD_entryRecord_t OD_record2310[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[15].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[15].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[15].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[15].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[15].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[15].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[15].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[15].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[15].threshold, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.traceConfig[15].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[15].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[15].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[15].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[15].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[15].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[15].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[15].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[15].threshold, 0x8D,  4}};
 /*0x2311*/ const CO_OD_entryRecord_t OD_record2311[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[16].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[16].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[16].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[16].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[16].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[16].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[16].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[16].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[16].threshold, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.traceConfig[16].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[16].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[16].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[16].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[16].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[16].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[16].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[16].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[16].threshold, 0x8D,  4}};
 /*0x2312*/ const CO_OD_entryRecord_t OD_record2312[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[17].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[17].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[17].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[17].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[17].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[17].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[17].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[17].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[17].threshold, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.traceConfig[17].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[17].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[17].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[17].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[17].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[17].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[17].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[17].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[17].threshold, 0x8D,  4}};
 /*0x2313*/ const CO_OD_entryRecord_t OD_record2313[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[18].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[18].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[18].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[18].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[18].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[18].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[18].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[18].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[18].threshold, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.traceConfig[18].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[18].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[18].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[18].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[18].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[18].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[18].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[18].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[18].threshold, 0x8D,  4}};
 /*0x2314*/ const CO_OD_entryRecord_t OD_record2314[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[19].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[19].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[19].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[19].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[19].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[19].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[19].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[19].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[19].threshold, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.traceConfig[19].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[19].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[19].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[19].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[19].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[19].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[19].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[19].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[19].threshold, 0x8D,  4}};
 /*0x2315*/ const CO_OD_entryRecord_t OD_record2315[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[20].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[20].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[20].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[20].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[20].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[20].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[20].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[20].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[20].threshold, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.traceConfig[20].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[20].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[20].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[20].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[20].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[20].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[20].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[20].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[20].threshold, 0x8D,  4}};
 /*0x2316*/ const CO_OD_entryRecord_t OD_record2316[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[21].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[21].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[21].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[21].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[21].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[21].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[21].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[21].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[21].threshold, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.traceConfig[21].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[21].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[21].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[21].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[21].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[21].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[21].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[21].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[21].threshold, 0x8D,  4}};
 /*0x2317*/ const CO_OD_entryRecord_t OD_record2317[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[22].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[22].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[22].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[22].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[22].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[22].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[22].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[22].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[22].threshold, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.traceConfig[22].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[22].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[22].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[22].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[22].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[22].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[22].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[22].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[22].threshold, 0x8D,  4}};
 /*0x2318*/ const CO_OD_entryRecord_t OD_record2318[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[23].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[23].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[23].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[23].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[23].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[23].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[23].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[23].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[23].threshold, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.traceConfig[23].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[23].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[23].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[23].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[23].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[23].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[23].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[23].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[23].threshold, 0x8D,  4}};
 /*0x2319*/ const CO_OD_entryRecord_t OD_record2319[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[24].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[24].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[24].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[24].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[24].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[24].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[24].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[24].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[24].threshold, 0x8e, 0x4 },
-};
-
-/*0x231a*/ const CO_OD_entryRecord_t OD_record231a[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[25].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[25].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[25].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[25].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[25].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[25].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[25].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[25].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[25].threshold, 0x8e, 0x4 },
-};
-
-/*0x231b*/ const CO_OD_entryRecord_t OD_record231b[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[26].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[26].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[26].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[26].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[26].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[26].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[26].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[26].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[26].threshold, 0x8e, 0x4 },
-};
-
-/*0x231c*/ const CO_OD_entryRecord_t OD_record231c[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[27].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[27].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[27].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[27].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[27].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[27].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[27].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[27].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[27].threshold, 0x8e, 0x4 },
-};
-
-/*0x231d*/ const CO_OD_entryRecord_t OD_record231d[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[28].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[28].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[28].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[28].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[28].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[28].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[28].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[28].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[28].threshold, 0x8e, 0x4 },
-};
-
-/*0x231e*/ const CO_OD_entryRecord_t OD_record231e[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[29].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[29].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[29].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[29].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[29].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[29].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[29].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[29].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[29].threshold, 0x8e, 0x4 },
-};
-
-/*0x231f*/ const CO_OD_entryRecord_t OD_record231f[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[30].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[30].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[30].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[30].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[30].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[30].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[30].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[30].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[30].threshold, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.traceConfig[24].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[24].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[24].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[24].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[24].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[24].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[24].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[24].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[24].threshold, 0x8D,  4}};
+/*0x231A*/ const CO_OD_entryRecord_t OD_record231A[9] = {
+           {(void*)&CO_OD_ROM.traceConfig[25].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[25].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[25].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[25].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[25].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[25].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[25].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[25].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[25].threshold, 0x8D,  4}};
+/*0x231B*/ const CO_OD_entryRecord_t OD_record231B[9] = {
+           {(void*)&CO_OD_ROM.traceConfig[26].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[26].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[26].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[26].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[26].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[26].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[26].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[26].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[26].threshold, 0x8D,  4}};
+/*0x231C*/ const CO_OD_entryRecord_t OD_record231C[9] = {
+           {(void*)&CO_OD_ROM.traceConfig[27].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[27].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[27].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[27].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[27].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[27].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[27].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[27].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[27].threshold, 0x8D,  4}};
+/*0x231D*/ const CO_OD_entryRecord_t OD_record231D[9] = {
+           {(void*)&CO_OD_ROM.traceConfig[28].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[28].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[28].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[28].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[28].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[28].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[28].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[28].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[28].threshold, 0x8D,  4}};
+/*0x231E*/ const CO_OD_entryRecord_t OD_record231E[9] = {
+           {(void*)&CO_OD_ROM.traceConfig[29].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[29].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[29].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[29].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[29].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[29].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[29].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[29].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[29].threshold, 0x8D,  4}};
+/*0x231F*/ const CO_OD_entryRecord_t OD_record231F[9] = {
+           {(void*)&CO_OD_ROM.traceConfig[30].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[30].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[30].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[30].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[30].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[30].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[30].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[30].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[30].threshold, 0x8D,  4}};
 /*0x2320*/ const CO_OD_entryRecord_t OD_record2320[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[31].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[31].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[31].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[31].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[31].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[31].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[31].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[31].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[31].threshold, 0x8e, 0x4 },
-};
-
+           {(void*)&CO_OD_ROM.traceConfig[31].maxSubIndex, 0x05,  1},
+           {(void*)&CO_OD_ROM.traceConfig[31].size, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[31].axisNo, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[31].name[0], 0x0D, 30},
+           {(void*)&CO_OD_ROM.traceConfig[31].color[0], 0x0D, 20},
+           {(void*)&CO_OD_ROM.traceConfig[31].map, 0x8D,  4},
+           {(void*)&CO_OD_ROM.traceConfig[31].format, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[31].trigger, 0x0D,  1},
+           {(void*)&CO_OD_ROM.traceConfig[31].threshold, 0x8D,  4}};
 /*0x2401*/ const CO_OD_entryRecord_t OD_record2401[7] = {
-           {(void*)&CO_OD_RAM.trace[0].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[0].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[0].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[0].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[0].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[0].triggerTime, 0x9e, 0x4 },
-};
-
+           {(void*)&CO_OD_RAM.trace[0].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[0].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[0].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[0].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[0].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[0].triggerTime, 0xBE,  4}};
 /*0x2402*/ const CO_OD_entryRecord_t OD_record2402[7] = {
-           {(void*)&CO_OD_RAM.trace[1].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[1].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[1].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[1].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[1].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[1].triggerTime, 0x9e, 0x4 },
-};
-
+           {(void*)&CO_OD_RAM.trace[1].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[1].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[1].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[1].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[1].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[1].triggerTime, 0xBE,  4}};
 /*0x2403*/ const CO_OD_entryRecord_t OD_record2403[7] = {
-           {(void*)&CO_OD_RAM.trace[2].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[2].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[2].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[2].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[2].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[2].triggerTime, 0x9e, 0x4 },
-};
-
+           {(void*)&CO_OD_RAM.trace[2].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[2].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[2].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[2].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[2].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[2].triggerTime, 0xBE,  4}};
 /*0x2404*/ const CO_OD_entryRecord_t OD_record2404[7] = {
-           {(void*)&CO_OD_RAM.trace[3].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[3].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[3].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[3].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[3].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[3].triggerTime, 0x9e, 0x4 },
-};
-
+           {(void*)&CO_OD_RAM.trace[3].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[3].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[3].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[3].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[3].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[3].triggerTime, 0xBE,  4}};
 /*0x2405*/ const CO_OD_entryRecord_t OD_record2405[7] = {
-           {(void*)&CO_OD_RAM.trace[4].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[4].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[4].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[4].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[4].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[4].triggerTime, 0x9e, 0x4 },
-};
-
+           {(void*)&CO_OD_RAM.trace[4].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[4].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[4].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[4].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[4].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[4].triggerTime, 0xBE,  4}};
 /*0x2406*/ const CO_OD_entryRecord_t OD_record2406[7] = {
-           {(void*)&CO_OD_RAM.trace[5].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[5].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[5].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[5].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[5].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[5].triggerTime, 0x9e, 0x4 },
-};
-
+           {(void*)&CO_OD_RAM.trace[5].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[5].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[5].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[5].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[5].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[5].triggerTime, 0xBE,  4}};
 /*0x2407*/ const CO_OD_entryRecord_t OD_record2407[7] = {
-           {(void*)&CO_OD_RAM.trace[6].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[6].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[6].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[6].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[6].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[6].triggerTime, 0x9e, 0x4 },
-};
-
+           {(void*)&CO_OD_RAM.trace[6].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[6].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[6].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[6].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[6].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[6].triggerTime, 0xBE,  4}};
 /*0x2408*/ const CO_OD_entryRecord_t OD_record2408[7] = {
-           {(void*)&CO_OD_RAM.trace[7].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[7].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[7].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[7].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[7].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[7].triggerTime, 0x9e, 0x4 },
-};
-
+           {(void*)&CO_OD_RAM.trace[7].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[7].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[7].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[7].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[7].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[7].triggerTime, 0xBE,  4}};
 /*0x2409*/ const CO_OD_entryRecord_t OD_record2409[7] = {
-           {(void*)&CO_OD_RAM.trace[8].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[8].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[8].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[8].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[8].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[8].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x240a*/ const CO_OD_entryRecord_t OD_record240a[7] = {
-           {(void*)&CO_OD_RAM.trace[9].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[9].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[9].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[9].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[9].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[9].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x240b*/ const CO_OD_entryRecord_t OD_record240b[7] = {
-           {(void*)&CO_OD_RAM.trace[10].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[10].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[10].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[10].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[10].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[10].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x240c*/ const CO_OD_entryRecord_t OD_record240c[7] = {
-           {(void*)&CO_OD_RAM.trace[11].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[11].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[11].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[11].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[11].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[11].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x240d*/ const CO_OD_entryRecord_t OD_record240d[7] = {
-           {(void*)&CO_OD_RAM.trace[12].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[12].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[12].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[12].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[12].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[12].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x240e*/ const CO_OD_entryRecord_t OD_record240e[7] = {
-           {(void*)&CO_OD_RAM.trace[13].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[13].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[13].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[13].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[13].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[13].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x240f*/ const CO_OD_entryRecord_t OD_record240f[7] = {
-           {(void*)&CO_OD_RAM.trace[14].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[14].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[14].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[14].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[14].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[14].triggerTime, 0x9e, 0x4 },
-};
-
+           {(void*)&CO_OD_RAM.trace[8].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[8].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[8].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[8].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[8].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[8].triggerTime, 0xBE,  4}};
+/*0x240A*/ const CO_OD_entryRecord_t OD_record240A[7] = {
+           {(void*)&CO_OD_RAM.trace[9].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[9].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[9].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[9].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[9].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[9].triggerTime, 0xBE,  4}};
+/*0x240B*/ const CO_OD_entryRecord_t OD_record240B[7] = {
+           {(void*)&CO_OD_RAM.trace[10].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[10].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[10].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[10].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[10].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[10].triggerTime, 0xBE,  4}};
+/*0x240C*/ const CO_OD_entryRecord_t OD_record240C[7] = {
+           {(void*)&CO_OD_RAM.trace[11].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[11].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[11].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[11].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[11].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[11].triggerTime, 0xBE,  4}};
+/*0x240D*/ const CO_OD_entryRecord_t OD_record240D[7] = {
+           {(void*)&CO_OD_RAM.trace[12].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[12].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[12].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[12].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[12].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[12].triggerTime, 0xBE,  4}};
+/*0x240E*/ const CO_OD_entryRecord_t OD_record240E[7] = {
+           {(void*)&CO_OD_RAM.trace[13].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[13].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[13].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[13].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[13].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[13].triggerTime, 0xBE,  4}};
+/*0x240F*/ const CO_OD_entryRecord_t OD_record240F[7] = {
+           {(void*)&CO_OD_RAM.trace[14].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[14].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[14].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[14].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[14].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[14].triggerTime, 0xBE,  4}};
 /*0x2410*/ const CO_OD_entryRecord_t OD_record2410[7] = {
-           {(void*)&CO_OD_RAM.trace[15].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[15].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[15].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[15].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[15].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[15].triggerTime, 0x9e, 0x4 },
-};
-
+           {(void*)&CO_OD_RAM.trace[15].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[15].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[15].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[15].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[15].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[15].triggerTime, 0xBE,  4}};
 /*0x2411*/ const CO_OD_entryRecord_t OD_record2411[7] = {
-           {(void*)&CO_OD_RAM.trace[16].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[16].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[16].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[16].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[16].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[16].triggerTime, 0x9e, 0x4 },
-};
-
+           {(void*)&CO_OD_RAM.trace[16].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[16].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[16].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[16].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[16].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[16].triggerTime, 0xBE,  4}};
 /*0x2412*/ const CO_OD_entryRecord_t OD_record2412[7] = {
-           {(void*)&CO_OD_RAM.trace[17].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[17].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[17].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[17].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[17].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[17].triggerTime, 0x9e, 0x4 },
-};
-
+           {(void*)&CO_OD_RAM.trace[17].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[17].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[17].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[17].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[17].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[17].triggerTime, 0xBE,  4}};
 /*0x2413*/ const CO_OD_entryRecord_t OD_record2413[7] = {
-           {(void*)&CO_OD_RAM.trace[18].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[18].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[18].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[18].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[18].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[18].triggerTime, 0x9e, 0x4 },
-};
-
+           {(void*)&CO_OD_RAM.trace[18].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[18].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[18].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[18].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[18].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[18].triggerTime, 0xBE,  4}};
 /*0x2414*/ const CO_OD_entryRecord_t OD_record2414[7] = {
-           {(void*)&CO_OD_RAM.trace[19].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[19].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[19].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[19].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[19].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[19].triggerTime, 0x9e, 0x4 },
-};
-
+           {(void*)&CO_OD_RAM.trace[19].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[19].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[19].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[19].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[19].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[19].triggerTime, 0xBE,  4}};
 /*0x2415*/ const CO_OD_entryRecord_t OD_record2415[7] = {
-           {(void*)&CO_OD_RAM.trace[20].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[20].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[20].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[20].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[20].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[20].triggerTime, 0x9e, 0x4 },
-};
-
+           {(void*)&CO_OD_RAM.trace[20].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[20].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[20].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[20].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[20].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[20].triggerTime, 0xBE,  4}};
 /*0x2416*/ const CO_OD_entryRecord_t OD_record2416[7] = {
-           {(void*)&CO_OD_RAM.trace[21].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[21].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[21].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[21].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[21].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[21].triggerTime, 0x9e, 0x4 },
-};
-
+           {(void*)&CO_OD_RAM.trace[21].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[21].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[21].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[21].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[21].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[21].triggerTime, 0xBE,  4}};
 /*0x2417*/ const CO_OD_entryRecord_t OD_record2417[7] = {
-           {(void*)&CO_OD_RAM.trace[22].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[22].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[22].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[22].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[22].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[22].triggerTime, 0x9e, 0x4 },
-};
-
+           {(void*)&CO_OD_RAM.trace[22].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[22].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[22].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[22].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[22].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[22].triggerTime, 0xBE,  4}};
 /*0x2418*/ const CO_OD_entryRecord_t OD_record2418[7] = {
-           {(void*)&CO_OD_RAM.trace[23].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[23].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[23].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[23].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[23].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[23].triggerTime, 0x9e, 0x4 },
-};
-
+           {(void*)&CO_OD_RAM.trace[23].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[23].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[23].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[23].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[23].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[23].triggerTime, 0xBE,  4}};
 /*0x2419*/ const CO_OD_entryRecord_t OD_record2419[7] = {
-           {(void*)&CO_OD_RAM.trace[24].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[24].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[24].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[24].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[24].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[24].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x241a*/ const CO_OD_entryRecord_t OD_record241a[7] = {
-           {(void*)&CO_OD_RAM.trace[25].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[25].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[25].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[25].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[25].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[25].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x241b*/ const CO_OD_entryRecord_t OD_record241b[7] = {
-           {(void*)&CO_OD_RAM.trace[26].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[26].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[26].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[26].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[26].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[26].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x241c*/ const CO_OD_entryRecord_t OD_record241c[7] = {
-           {(void*)&CO_OD_RAM.trace[27].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[27].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[27].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[27].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[27].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[27].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x241d*/ const CO_OD_entryRecord_t OD_record241d[7] = {
-           {(void*)&CO_OD_RAM.trace[28].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[28].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[28].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[28].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[28].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[28].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x241e*/ const CO_OD_entryRecord_t OD_record241e[7] = {
-           {(void*)&CO_OD_RAM.trace[29].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[29].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[29].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[29].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[29].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[29].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x241f*/ const CO_OD_entryRecord_t OD_record241f[7] = {
-           {(void*)&CO_OD_RAM.trace[30].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[30].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[30].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[30].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[30].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[30].triggerTime, 0x9e, 0x4 },
-};
-
+           {(void*)&CO_OD_RAM.trace[24].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[24].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[24].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[24].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[24].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[24].triggerTime, 0xBE,  4}};
+/*0x241A*/ const CO_OD_entryRecord_t OD_record241A[7] = {
+           {(void*)&CO_OD_RAM.trace[25].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[25].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[25].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[25].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[25].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[25].triggerTime, 0xBE,  4}};
+/*0x241B*/ const CO_OD_entryRecord_t OD_record241B[7] = {
+           {(void*)&CO_OD_RAM.trace[26].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[26].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[26].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[26].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[26].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[26].triggerTime, 0xBE,  4}};
+/*0x241C*/ const CO_OD_entryRecord_t OD_record241C[7] = {
+           {(void*)&CO_OD_RAM.trace[27].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[27].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[27].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[27].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[27].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[27].triggerTime, 0xBE,  4}};
+/*0x241D*/ const CO_OD_entryRecord_t OD_record241D[7] = {
+           {(void*)&CO_OD_RAM.trace[28].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[28].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[28].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[28].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[28].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[28].triggerTime, 0xBE,  4}};
+/*0x241E*/ const CO_OD_entryRecord_t OD_record241E[7] = {
+           {(void*)&CO_OD_RAM.trace[29].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[29].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[29].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[29].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[29].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[29].triggerTime, 0xBE,  4}};
+/*0x241F*/ const CO_OD_entryRecord_t OD_record241F[7] = {
+           {(void*)&CO_OD_RAM.trace[30].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[30].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[30].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[30].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[30].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[30].triggerTime, 0xBE,  4}};
 /*0x2420*/ const CO_OD_entryRecord_t OD_record2420[7] = {
-           {(void*)&CO_OD_RAM.trace[31].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[31].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[31].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[31].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[31].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[31].triggerTime, 0x9e, 0x4 },
-};
+           {(void*)&CO_OD_RAM.trace[31].maxSubIndex, 0x06,  1},
+           {(void*)&CO_OD_RAM.trace[31].size, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[31].value, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[31].min, 0xBE,  4},
+           {(void*)&CO_OD_RAM.trace[31].max, 0xBE,  4},
+           {0, 0x06,  0},
+           {(void*)&CO_OD_RAM.trace[31].triggerTime, 0xBE,  4}};
 
-/*0x6040*/ const CO_OD_entryRecord_t OD_record6040[7] = {
-           {(void*)&CO_OD_RAM.controlWords.numberOfMotors, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.controlWords.motor1, 0xfe, 0x2 },
-           {(void*)&CO_OD_RAM.controlWords.motor2, 0xfe, 0x2 },
-           {(void*)&CO_OD_RAM.controlWords.motor3, 0xfe, 0x2 },
-           {(void*)&CO_OD_RAM.controlWords.motor4, 0xfe, 0x2 },
-           {(void*)&CO_OD_RAM.controlWords.motor5, 0xfe, 0x2 },
-           {(void*)&CO_OD_RAM.controlWords.motor6, 0xfe, 0x2 },
-};
-
-/*0x6041*/ const CO_OD_entryRecord_t OD_record6041[7] = {
-           {(void*)&CO_OD_RAM.statusWords.numberOfMotors, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.statusWords.motor1, 0xfe, 0x2 },
-           {(void*)&CO_OD_RAM.statusWords.motor2, 0xfe, 0x2 },
-           {(void*)&CO_OD_RAM.statusWords.motor3, 0xfe, 0x2 },
-           {(void*)&CO_OD_RAM.statusWords.motor4, 0xfe, 0x2 },
-           {(void*)&CO_OD_RAM.statusWords.motor5, 0xfe, 0x2 },
-           {(void*)&CO_OD_RAM.statusWords.motor6, 0xfe, 0x2 },
-};
-
-/*0x6064*/ const CO_OD_entryRecord_t OD_record6064[7] = {
-           {(void*)&CO_OD_RAM.actualMotorPositions.numberOfMotors, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.actualMotorPositions.motor1, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorPositions.motor2, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorPositions.motor3, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorPositions.motor4, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorPositions.motor5, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorPositions.motor6, 0xfe, 0x4 },
-};
-
-/*0x606c*/ const CO_OD_entryRecord_t OD_record606c[7] = {
-           {(void*)&CO_OD_RAM.actualMotorVelocities.numberOfMotors, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.actualMotorVelocities.motor1, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorVelocities.motor2, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorVelocities.motor3, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorVelocities.motor4, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorVelocities.motor5, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorVelocities.motor6, 0xfe, 0x4 },
-};
-
-/*0x6077*/ const CO_OD_entryRecord_t OD_record6077[5] = {
-           {(void*)&CO_OD_RAM.actualMotorTorques.numberOfMotors, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.actualMotorTorques.motor1, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorTorques.motor2, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorTorques.motor3, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorTorques.motor4, 0xfe, 0x4 },
-};
-
-/*0x607a*/ const CO_OD_entryRecord_t OD_record607a[7] = {
-           {(void*)&CO_OD_RAM.targetMotorPositions.numberOfMotors, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.targetMotorPositions.motor1, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.targetMotorPositions.motor2, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.targetMotorPositions.motor3, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.targetMotorPositions.motor4, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.targetMotorPositions.motor5, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.targetMotorPositions.motor6, 0xfe, 0x4 },
-};
-
-/*0x60ff*/ const CO_OD_entryRecord_t OD_record60ff[7] = {
-           {(void*)&CO_OD_RAM.targetMotorVelocities.numberOfMotors, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.targetMotorVelocities.motor1, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.targetMotorVelocities.motor2, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.targetMotorVelocities.motor3, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.targetMotorVelocities.motor4, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.targetMotorVelocities.motor5, 0xfe, 0x4 },
-           {(void*)&CO_OD_RAM.targetMotorVelocities.motor6, 0xfe, 0x4 },
-};
 
 /*******************************************************************************
    OBJECT DICTIONARY
 *******************************************************************************/
-extern const CO_OD_entry_t CO_OD[CO_OD_NoOfElements] = {
-
-{0x1000, 0x00, 0x86, 4, (void*)&CO_OD_RAM.deviceType},
-{0x1001, 0x00, 0x26, 1, (void*)&CO_OD_RAM.errorRegister},
-{0x1002, 0x00, 0xa6, 4, (void*)&CO_OD_RAM.manufacturerStatusRegister},
-{0x1003, 0x08, 0x8e, 4, (void*)&CO_OD_RAM.preDefinedErrorField[0]},
-{0x1005, 0x00, 0x8e, 4, (void*)&CO_OD_RAM.COB_ID_SYNCMessage},
-{0x1006, 0x00, 0x8e, 4, (void*)&CO_OD_RAM.communicationCyclePeriod},
-{0x1007, 0x00, 0x8e, 4, (void*)&CO_OD_RAM.synchronousWindowLength},
-{0x1008, 0x00, 0x86, 11, (void*)&CO_OD_RAM.manufacturerDeviceName},
-{0x1009, 0x00, 0x86, 4, (void*)&CO_OD_RAM.manufacturerHardwareVersion},
-{0x100a, 0x00, 0x86, 4, (void*)&CO_OD_RAM.manufacturerSoftwareVersion},
-{0x100c, 0x00, 0x85, 2, (void*)&CO_OD_ROM.guardTime},
-{0x100d, 0x00, 0x06, 1, (void*)&CO_OD_RAM.lifeTimeFactor},
-{0x1010, 0x01, 0x8e, 4, (void*)&CO_OD_RAM.storeParameters[0]},
-{0x1011, 0x01, 0x8e, 4, (void*)&CO_OD_RAM.restoreDefaultParameters[0]},
-{0x1012, 0x00, 0x85, 4, (void*)&CO_OD_ROM.COB_ID_TIME},
-{0x1013, 0x00, 0x8e, 4, (void*)&CO_OD_RAM.highResolutionTimeStamp},
-{0x1014, 0x00, 0x86, 4, (void*)&CO_OD_RAM.COB_ID_EMCY},
-{0x1015, 0x00, 0x8e, 2, (void*)&CO_OD_RAM.inhibitTimeEMCY},
-{0x1016, 0x04, 0x8e, 4, (void*)&CO_OD_RAM.consumerHeartbeatTime[0]},
-{0x1017, 0x00, 0x8e, 2, (void*)&CO_OD_RAM.producerHeartbeatTime},
-{0x1018, 0x04, 0x00, 0, (void*)&OD_record1018},
-{0x1019, 0x00, 0x0e, 1, (void*)&CO_OD_RAM.synchronousCounterOverflowValue},
-{0x1029, 0x06, 0x0e, 1, (void*)&CO_OD_RAM.errorBehavior[0]},
-{0x1200, 0x02, 0x00, 0, (void*)&OD_record1200},
-{0x1280, 0x03, 0x00, 0, (void*)&OD_record1280},
-{0x1400, 0x02, 0x00, 0, (void*)&OD_record1400},
-{0x1401, 0x02, 0x00, 0, (void*)&OD_record1401},
-{0x1402, 0x02, 0x00, 0, (void*)&OD_record1402},
-{0x1403, 0x02, 0x00, 0, (void*)&OD_record1403},
-{0x1404, 0x02, 0x00, 0, (void*)&OD_record1404},
-{0x1405, 0x02, 0x00, 0, (void*)&OD_record1405},
-{0x1406, 0x02, 0x00, 0, (void*)&OD_record1406},
-{0x1407, 0x02, 0x00, 0, (void*)&OD_record1407},
-{0x1408, 0x02, 0x00, 0, (void*)&OD_record1408},
-{0x1409, 0x02, 0x00, 0, (void*)&OD_record1409},
-{0x140a, 0x02, 0x00, 0, (void*)&OD_record140a},
-{0x140b, 0x02, 0x00, 0, (void*)&OD_record140b},
-{0x140c, 0x02, 0x00, 0, (void*)&OD_record140c},
-{0x140d, 0x02, 0x00, 0, (void*)&OD_record140d},
-{0x140e, 0x02, 0x00, 0, (void*)&OD_record140e},
-{0x140f, 0x02, 0x00, 0, (void*)&OD_record140f},
-{0x1410, 0x02, 0x00, 0, (void*)&OD_record1410},
-{0x1411, 0x02, 0x00, 0, (void*)&OD_record1411},
-{0x1412, 0x02, 0x00, 0, (void*)&OD_record1412},
-{0x1413, 0x02, 0x00, 0, (void*)&OD_record1413},
-{0x1414, 0x02, 0x00, 0, (void*)&OD_record1414},
-{0x1415, 0x02, 0x00, 0, (void*)&OD_record1415},
-{0x1416, 0x02, 0x00, 0, (void*)&OD_record1416},
-{0x1417, 0x02, 0x00, 0, (void*)&OD_record1417},
-{0x1418, 0x02, 0x00, 0, (void*)&OD_record1418},
-{0x1419, 0x02, 0x00, 0, (void*)&OD_record1419},
-{0x141a, 0x02, 0x00, 0, (void*)&OD_record141a},
-{0x141b, 0x02, 0x00, 0, (void*)&OD_record141b},
-{0x141c, 0x02, 0x00, 0, (void*)&OD_record141c},
-{0x141d, 0x02, 0x00, 0, (void*)&OD_record141d},
-{0x141e, 0x02, 0x00, 0, (void*)&OD_record141e},
-{0x141f, 0x02, 0x00, 0, (void*)&OD_record141f},
-{0x1600, 0x08, 0x00, 0, (void*)&OD_record1600},
-{0x1601, 0x08, 0x00, 0, (void*)&OD_record1601},
-{0x1602, 0x08, 0x00, 0, (void*)&OD_record1602},
-{0x1603, 0x08, 0x00, 0, (void*)&OD_record1603},
-{0x1604, 0x08, 0x00, 0, (void*)&OD_record1604},
-{0x1605, 0x08, 0x00, 0, (void*)&OD_record1605},
-{0x1606, 0x08, 0x00, 0, (void*)&OD_record1606},
-{0x1607, 0x08, 0x00, 0, (void*)&OD_record1607},
-{0x1608, 0x08, 0x00, 0, (void*)&OD_record1608},
-{0x1609, 0x08, 0x00, 0, (void*)&OD_record1609},
-{0x160a, 0x08, 0x00, 0, (void*)&OD_record160a},
-{0x160b, 0x08, 0x00, 0, (void*)&OD_record160b},
-{0x160c, 0x08, 0x00, 0, (void*)&OD_record160c},
-{0x160d, 0x08, 0x00, 0, (void*)&OD_record160d},
-{0x160e, 0x08, 0x00, 0, (void*)&OD_record160e},
-{0x160f, 0x08, 0x00, 0, (void*)&OD_record160f},
-{0x1610, 0x08, 0x00, 0, (void*)&OD_record1610},
-{0x1611, 0x08, 0x00, 0, (void*)&OD_record1611},
-{0x1612, 0x08, 0x00, 0, (void*)&OD_record1612},
-{0x1613, 0x08, 0x00, 0, (void*)&OD_record1613},
-{0x1614, 0x08, 0x00, 0, (void*)&OD_record1614},
-{0x1615, 0x08, 0x00, 0, (void*)&OD_record1615},
-{0x1616, 0x08, 0x00, 0, (void*)&OD_record1616},
-{0x1617, 0x08, 0x00, 0, (void*)&OD_record1617},
-{0x1618, 0x08, 0x00, 0, (void*)&OD_record1618},
-{0x1619, 0x08, 0x00, 0, (void*)&OD_record1619},
-{0x161a, 0x08, 0x00, 0, (void*)&OD_record161a},
-{0x161b, 0x08, 0x00, 0, (void*)&OD_record161b},
-{0x161c, 0x08, 0x00, 0, (void*)&OD_record161c},
-{0x161d, 0x08, 0x00, 0, (void*)&OD_record161d},
-{0x161e, 0x08, 0x00, 0, (void*)&OD_record161e},
-{0x161f, 0x08, 0x00, 0, (void*)&OD_record161f},
-{0x1800, 0x06, 0x00, 0, (void*)&OD_record1800},
-{0x1801, 0x06, 0x00, 0, (void*)&OD_record1801},
-{0x1802, 0x06, 0x00, 0, (void*)&OD_record1802},
-{0x1803, 0x06, 0x00, 0, (void*)&OD_record1803},
-{0x1804, 0x06, 0x00, 0, (void*)&OD_record1804},
-{0x1805, 0x06, 0x00, 0, (void*)&OD_record1805},
-{0x1806, 0x06, 0x00, 0, (void*)&OD_record1806},
-{0x1807, 0x06, 0x00, 0, (void*)&OD_record1807},
-{0x1808, 0x06, 0x00, 0, (void*)&OD_record1808},
-{0x1809, 0x06, 0x00, 0, (void*)&OD_record1809},
-{0x180a, 0x06, 0x00, 0, (void*)&OD_record180a},
-{0x180b, 0x06, 0x00, 0, (void*)&OD_record180b},
-{0x180c, 0x06, 0x00, 0, (void*)&OD_record180c},
-{0x180d, 0x06, 0x00, 0, (void*)&OD_record180d},
-{0x180e, 0x06, 0x00, 0, (void*)&OD_record180e},
-{0x180f, 0x06, 0x00, 0, (void*)&OD_record180f},
-{0x1810, 0x05, 0x00, 0, (void*)&OD_record1810},
-{0x1811, 0x05, 0x00, 0, (void*)&OD_record1811},
-{0x1812, 0x05, 0x00, 0, (void*)&OD_record1812},
-{0x1813, 0x05, 0x00, 0, (void*)&OD_record1813},
-{0x1814, 0x05, 0x00, 0, (void*)&OD_record1814},
-{0x1815, 0x05, 0x00, 0, (void*)&OD_record1815},
-{0x1816, 0x05, 0x00, 0, (void*)&OD_record1816},
-{0x1817, 0x05, 0x00, 0, (void*)&OD_record1817},
-{0x1818, 0x05, 0x00, 0, (void*)&OD_record1818},
-{0x1819, 0x05, 0x00, 0, (void*)&OD_record1819},
-{0x181a, 0x05, 0x00, 0, (void*)&OD_record181a},
-{0x181b, 0x05, 0x00, 0, (void*)&OD_record181b},
-{0x181c, 0x05, 0x00, 0, (void*)&OD_record181c},
-{0x181d, 0x05, 0x00, 0, (void*)&OD_record181d},
-{0x181e, 0x05, 0x00, 0, (void*)&OD_record181e},
-{0x181f, 0x05, 0x00, 0, (void*)&OD_record181f},
-{0x1a00, 0x08, 0x00, 0, (void*)&OD_record1a00},
-{0x1a01, 0x08, 0x00, 0, (void*)&OD_record1a01},
-{0x1a02, 0x08, 0x00, 0, (void*)&OD_record1a02},
-{0x1a03, 0x08, 0x00, 0, (void*)&OD_record1a03},
-{0x1a04, 0x08, 0x00, 0, (void*)&OD_record1a04},
-{0x1a05, 0x08, 0x00, 0, (void*)&OD_record1a05},
-{0x1a06, 0x08, 0x00, 0, (void*)&OD_record1a06},
-{0x1a07, 0x08, 0x00, 0, (void*)&OD_record1a07},
-{0x1a08, 0x08, 0x00, 0, (void*)&OD_record1a08},
-{0x1a09, 0x08, 0x00, 0, (void*)&OD_record1a09},
-{0x1a0a, 0x08, 0x00, 0, (void*)&OD_record1a0a},
-{0x1a0b, 0x08, 0x00, 0, (void*)&OD_record1a0b},
-{0x1a0c, 0x08, 0x00, 0, (void*)&OD_record1a0c},
-{0x1a0d, 0x08, 0x00, 0, (void*)&OD_record1a0d},
-{0x1a0e, 0x08, 0x00, 0, (void*)&OD_record1a0e},
-{0x1a0f, 0x08, 0x00, 0, (void*)&OD_record1a0f},
-{0x1a10, 0x08, 0x00, 0, (void*)&OD_record1a10},
-{0x1a11, 0x08, 0x00, 0, (void*)&OD_record1a11},
-{0x1a12, 0x08, 0x00, 0, (void*)&OD_record1a12},
-{0x1a13, 0x08, 0x00, 0, (void*)&OD_record1a13},
-{0x1a14, 0x08, 0x00, 0, (void*)&OD_record1a14},
-{0x1a15, 0x08, 0x00, 0, (void*)&OD_record1a15},
-{0x1a16, 0x08, 0x00, 0, (void*)&OD_record1a16},
-{0x1a17, 0x08, 0x00, 0, (void*)&OD_record1a17},
-{0x1a18, 0x08, 0x00, 0, (void*)&OD_record1a18},
-{0x1a19, 0x08, 0x00, 0, (void*)&OD_record1a19},
-{0x1a1a, 0x08, 0x00, 0, (void*)&OD_record1a1a},
-{0x1a1b, 0x08, 0x00, 0, (void*)&OD_record1a1b},
-{0x1a1c, 0x08, 0x00, 0, (void*)&OD_record1a1c},
-{0x1a1d, 0x08, 0x00, 0, (void*)&OD_record1a1d},
-{0x1a1e, 0x08, 0x00, 0, (void*)&OD_record1a1e},
-{0x1a1f, 0x08, 0x00, 0, (void*)&OD_record1a1f},
-{0x1f80, 0x00, 0x8e, 4, (void*)&CO_OD_RAM.NMTStartup},
-{0x1f81, 0x7f, 0x8e, 4, (void*)&CO_OD_RAM.slaveAssignment[0]},
-{0x1f82, 0x7f, 0x0e, 1, (void*)&CO_OD_RAM.requestNMT[0]},
-{0x1f89, 0x00, 0x8e, 4, (void*)&CO_OD_RAM.bootTime},
-{0x2100, 0x00, 0xa6, 10, (void*)&CO_OD_RAM.errorStatusBits},
-{0x2101, 0x00, 0x0e, 1, (void*)&CO_OD_RAM.CANNodeID},
-{0x2102, 0x00, 0x8e, 2, (void*)&CO_OD_RAM.CANBitRate},
-{0x2103, 0x00, 0x8e, 2, (void*)&CO_OD_RAM.SYNCCounter},
-{0x2104, 0x00, 0x86, 2, (void*)&CO_OD_RAM.SYNCTime},
-{0x2106, 0x00, 0x86, 4, (void*)&CO_OD_RAM.powerOnCounter},
-{0x2107, 0x05, 0x8e, 2, (void*)&CO_OD_RAM.performance[0]},
-{0x2108, 0x01, 0x8e, 2, (void*)&CO_OD_RAM.temperature[0]},
-{0x2109, 0x01, 0x8e, 2, (void*)&CO_OD_RAM.voltage[0]},
-{0x2110, 0x20, 0x8e, 4, (void*)&CO_OD_RAM.variableInt32[0]},
-{0x2111, 0x10, 0x8e, 4, (void*)&CO_OD_RAM.variableROM_Int32[0]},
-{0x2112, 0x10, 0x8e, 4, (void*)&CO_OD_RAM.variableNV_Int32[0]},
-{0x2120, 0x05, 0x00, 0, (void*)&OD_record2120},
-{0x2130, 0x03, 0x00, 0, (void*)&OD_record2130},
-{0x2301, 0x08, 0x00, 0, (void*)&OD_record2301},
-{0x2302, 0x08, 0x00, 0, (void*)&OD_record2302},
-{0x2303, 0x08, 0x00, 0, (void*)&OD_record2303},
-{0x2304, 0x08, 0x00, 0, (void*)&OD_record2304},
-{0x2305, 0x08, 0x00, 0, (void*)&OD_record2305},
-{0x2306, 0x08, 0x00, 0, (void*)&OD_record2306},
-{0x2307, 0x08, 0x00, 0, (void*)&OD_record2307},
-{0x2308, 0x08, 0x00, 0, (void*)&OD_record2308},
-{0x2309, 0x08, 0x00, 0, (void*)&OD_record2309},
-{0x230a, 0x08, 0x00, 0, (void*)&OD_record230a},
-{0x230b, 0x08, 0x00, 0, (void*)&OD_record230b},
-{0x230c, 0x08, 0x00, 0, (void*)&OD_record230c},
-{0x230d, 0x08, 0x00, 0, (void*)&OD_record230d},
-{0x230e, 0x08, 0x00, 0, (void*)&OD_record230e},
-{0x230f, 0x08, 0x00, 0, (void*)&OD_record230f},
-{0x2310, 0x08, 0x00, 0, (void*)&OD_record2310},
-{0x2311, 0x08, 0x00, 0, (void*)&OD_record2311},
-{0x2312, 0x08, 0x00, 0, (void*)&OD_record2312},
-{0x2313, 0x08, 0x00, 0, (void*)&OD_record2313},
-{0x2314, 0x08, 0x00, 0, (void*)&OD_record2314},
-{0x2315, 0x08, 0x00, 0, (void*)&OD_record2315},
-{0x2316, 0x08, 0x00, 0, (void*)&OD_record2316},
-{0x2317, 0x08, 0x00, 0, (void*)&OD_record2317},
-{0x2318, 0x08, 0x00, 0, (void*)&OD_record2318},
-{0x2319, 0x08, 0x00, 0, (void*)&OD_record2319},
-{0x231a, 0x08, 0x00, 0, (void*)&OD_record231a},
-{0x231b, 0x08, 0x00, 0, (void*)&OD_record231b},
-{0x231c, 0x08, 0x00, 0, (void*)&OD_record231c},
-{0x231d, 0x08, 0x00, 0, (void*)&OD_record231d},
-{0x231e, 0x08, 0x00, 0, (void*)&OD_record231e},
-{0x231f, 0x08, 0x00, 0, (void*)&OD_record231f},
-{0x2320, 0x08, 0x00, 0, (void*)&OD_record2320},
-{0x2400, 0x00, 0x1e, 1, (void*)&CO_OD_RAM.traceEnable},
-{0x2401, 0x06, 0x00, 0, (void*)&OD_record2401},
-{0x2402, 0x06, 0x00, 0, (void*)&OD_record2402},
-{0x2403, 0x06, 0x00, 0, (void*)&OD_record2403},
-{0x2404, 0x06, 0x00, 0, (void*)&OD_record2404},
-{0x2405, 0x06, 0x00, 0, (void*)&OD_record2405},
-{0x2406, 0x06, 0x00, 0, (void*)&OD_record2406},
-{0x2407, 0x06, 0x00, 0, (void*)&OD_record2407},
-{0x2408, 0x06, 0x00, 0, (void*)&OD_record2408},
-{0x2409, 0x06, 0x00, 0, (void*)&OD_record2409},
-{0x240a, 0x06, 0x00, 0, (void*)&OD_record240a},
-{0x240b, 0x06, 0x00, 0, (void*)&OD_record240b},
-{0x240c, 0x06, 0x00, 0, (void*)&OD_record240c},
-{0x240d, 0x06, 0x00, 0, (void*)&OD_record240d},
-{0x240e, 0x06, 0x00, 0, (void*)&OD_record240e},
-{0x240f, 0x06, 0x00, 0, (void*)&OD_record240f},
-{0x2410, 0x06, 0x00, 0, (void*)&OD_record2410},
-{0x2411, 0x06, 0x00, 0, (void*)&OD_record2411},
-{0x2412, 0x06, 0x00, 0, (void*)&OD_record2412},
-{0x2413, 0x06, 0x00, 0, (void*)&OD_record2413},
-{0x2414, 0x06, 0x00, 0, (void*)&OD_record2414},
-{0x2415, 0x06, 0x00, 0, (void*)&OD_record2415},
-{0x2416, 0x06, 0x00, 0, (void*)&OD_record2416},
-{0x2417, 0x06, 0x00, 0, (void*)&OD_record2417},
-{0x2418, 0x06, 0x00, 0, (void*)&OD_record2418},
-{0x2419, 0x06, 0x00, 0, (void*)&OD_record2419},
-{0x241a, 0x06, 0x00, 0, (void*)&OD_record241a},
-{0x241b, 0x06, 0x00, 0, (void*)&OD_record241b},
-{0x241c, 0x06, 0x00, 0, (void*)&OD_record241c},
-{0x241d, 0x06, 0x00, 0, (void*)&OD_record241d},
-{0x241e, 0x06, 0x00, 0, (void*)&OD_record241e},
-{0x241f, 0x06, 0x00, 0, (void*)&OD_record241f},
-{0x2420, 0x06, 0x00, 0, (void*)&OD_record2420},
-{0x6000, 0x08, 0x0e, 1, (void*)&CO_OD_RAM.readInput8Bit[0]},
-{0x6040, 0x06, 0x00, 0, (void*)&OD_record6040},
-{0x6041, 0x06, 0x00, 0, (void*)&OD_record6041},
-{0x6064, 0x06, 0x00, 0, (void*)&OD_record6064},
-{0x606c, 0x06, 0x00, 0, (void*)&OD_record606c},
-{0x6077, 0x04, 0x00, 0, (void*)&OD_record6077},
-{0x607a, 0x06, 0x00, 0, (void*)&OD_record607a},
-{0x60ff, 0x06, 0x00, 0, (void*)&OD_record60ff},
-{0x6200, 0x08, 0x0e, 1, (void*)&CO_OD_RAM.writeOutput8Bit[0]},
-{0x6401, 0x0c, 0x8e, 2, (void*)&CO_OD_RAM.readAnalogueInput16Bit[0]},
-{0x6411, 0x08, 0x8e, 2, (void*)&CO_OD_RAM.writeAnalogueOutput16Bit[0]},
+const CO_OD_entry_t CO_OD[CO_OD_NoOfElements] = {
+{0x1000, 0x00, 0x85,  4, (void*)&CO_OD_ROM.deviceType},
+{0x1001, 0x00, 0x36,  1, (void*)&CO_OD_RAM.errorRegister},
+{0x1002, 0x00, 0xB6,  4, (void*)&CO_OD_RAM.manufacturerStatusRegister},
+{0x1003, 0x08, 0x8E,  4, (void*)&CO_OD_RAM.preDefinedErrorField[0]},
+{0x1005, 0x00, 0x8D,  4, (void*)&CO_OD_ROM.COB_ID_SYNCMessage},
+{0x1006, 0x00, 0x8D,  4, (void*)&CO_OD_ROM.communicationCyclePeriod},
+{0x1007, 0x00, 0x8D,  4, (void*)&CO_OD_ROM.synchronousWindowLength},
+{0x1008, 0x00, 0x05, 11, (void*)&CO_OD_ROM.manufacturerDeviceName[0]},
+{0x1009, 0x00, 0x05,  4, (void*)&CO_OD_ROM.manufacturerHardwareVersion[0]},
+{0x100A, 0x00, 0x05,  4, (void*)&CO_OD_ROM.manufacturerSoftwareVersion[0]},
+{0x1010, 0x01, 0x8E,  4, (void*)&CO_OD_RAM.storeParameters[0]},
+{0x1011, 0x01, 0x8E,  4, (void*)&CO_OD_RAM.restoreDefaultParameters[0]},
+{0x1014, 0x00, 0x85,  4, (void*)&CO_OD_ROM.COB_ID_EMCY},
+{0x1015, 0x00, 0x8D,  2, (void*)&CO_OD_ROM.inhibitTimeEMCY},
+{0x1016, 0x04, 0x8D,  4, (void*)&CO_OD_ROM.consumerHeartbeatTime[0]},
+{0x1017, 0x00, 0x8D,  2, (void*)&CO_OD_ROM.producerHeartbeatTime},
+{0x1018, 0x04, 0x00,  0, (void*)&OD_record1018},
+{0x1019, 0x00, 0x0D,  1, (void*)&CO_OD_ROM.synchronousCounterOverflowValue},
+{0x1029, 0x06, 0x0D,  1, (void*)&CO_OD_ROM.errorBehavior[0]},
+{0x1200, 0x02, 0x00,  0, (void*)&OD_record1200},
+{0x1280, 0x03, 0x00,  0, (void*)&OD_record1280},
+{0x1400, 0x02, 0x00,  0, (void*)&OD_record1400},
+{0x1401, 0x02, 0x00,  0, (void*)&OD_record1401},
+{0x1402, 0x02, 0x00,  0, (void*)&OD_record1402},
+{0x1403, 0x02, 0x00,  0, (void*)&OD_record1403},
+{0x1404, 0x02, 0x00,  0, (void*)&OD_record1404},
+{0x1405, 0x02, 0x00,  0, (void*)&OD_record1405},
+{0x1406, 0x02, 0x00,  0, (void*)&OD_record1406},
+{0x1407, 0x02, 0x00,  0, (void*)&OD_record1407},
+{0x1408, 0x02, 0x00,  0, (void*)&OD_record1408},
+{0x1409, 0x02, 0x00,  0, (void*)&OD_record1409},
+{0x140A, 0x02, 0x00,  0, (void*)&OD_record140A},
+{0x140B, 0x02, 0x00,  0, (void*)&OD_record140B},
+{0x140C, 0x02, 0x00,  0, (void*)&OD_record140C},
+{0x140D, 0x02, 0x00,  0, (void*)&OD_record140D},
+{0x140E, 0x02, 0x00,  0, (void*)&OD_record140E},
+{0x140F, 0x02, 0x00,  0, (void*)&OD_record140F},
+{0x1600, 0x08, 0x00,  0, (void*)&OD_record1600},
+{0x1601, 0x08, 0x00,  0, (void*)&OD_record1601},
+{0x1602, 0x08, 0x00,  0, (void*)&OD_record1602},
+{0x1603, 0x08, 0x00,  0, (void*)&OD_record1603},
+{0x1604, 0x08, 0x00,  0, (void*)&OD_record1604},
+{0x1605, 0x08, 0x00,  0, (void*)&OD_record1605},
+{0x1606, 0x08, 0x00,  0, (void*)&OD_record1606},
+{0x1607, 0x08, 0x00,  0, (void*)&OD_record1607},
+{0x1608, 0x08, 0x00,  0, (void*)&OD_record1608},
+{0x1609, 0x08, 0x00,  0, (void*)&OD_record1609},
+{0x160A, 0x08, 0x00,  0, (void*)&OD_record160A},
+{0x160B, 0x08, 0x00,  0, (void*)&OD_record160B},
+{0x160C, 0x08, 0x00,  0, (void*)&OD_record160C},
+{0x160D, 0x08, 0x00,  0, (void*)&OD_record160D},
+{0x160E, 0x08, 0x00,  0, (void*)&OD_record160E},
+{0x160F, 0x08, 0x00,  0, (void*)&OD_record160F},
+{0x1800, 0x06, 0x00,  0, (void*)&OD_record1800},
+{0x1801, 0x06, 0x00,  0, (void*)&OD_record1801},
+{0x1802, 0x06, 0x00,  0, (void*)&OD_record1802},
+{0x1803, 0x06, 0x00,  0, (void*)&OD_record1803},
+{0x1804, 0x06, 0x00,  0, (void*)&OD_record1804},
+{0x1805, 0x06, 0x00,  0, (void*)&OD_record1805},
+{0x1806, 0x06, 0x00,  0, (void*)&OD_record1806},
+{0x1807, 0x06, 0x00,  0, (void*)&OD_record1807},
+{0x1808, 0x06, 0x00,  0, (void*)&OD_record1808},
+{0x1809, 0x06, 0x00,  0, (void*)&OD_record1809},
+{0x180A, 0x06, 0x00,  0, (void*)&OD_record180A},
+{0x180B, 0x06, 0x00,  0, (void*)&OD_record180B},
+{0x180C, 0x06, 0x00,  0, (void*)&OD_record180C},
+{0x180D, 0x06, 0x00,  0, (void*)&OD_record180D},
+{0x180E, 0x06, 0x00,  0, (void*)&OD_record180E},
+{0x180F, 0x06, 0x00,  0, (void*)&OD_record180F},
+{0x1A00, 0x08, 0x00,  0, (void*)&OD_record1A00},
+{0x1A01, 0x08, 0x00,  0, (void*)&OD_record1A01},
+{0x1A02, 0x08, 0x00,  0, (void*)&OD_record1A02},
+{0x1A03, 0x08, 0x00,  0, (void*)&OD_record1A03},
+{0x1A04, 0x08, 0x00,  0, (void*)&OD_record1A04},
+{0x1A05, 0x08, 0x00,  0, (void*)&OD_record1A05},
+{0x1A06, 0x08, 0x00,  0, (void*)&OD_record1A06},
+{0x1A07, 0x08, 0x00,  0, (void*)&OD_record1A07},
+{0x1A08, 0x08, 0x00,  0, (void*)&OD_record1A08},
+{0x1A09, 0x08, 0x00,  0, (void*)&OD_record1A09},
+{0x1A0A, 0x08, 0x00,  0, (void*)&OD_record1A0A},
+{0x1A0B, 0x08, 0x00,  0, (void*)&OD_record1A0B},
+{0x1A0C, 0x08, 0x00,  0, (void*)&OD_record1A0C},
+{0x1A0D, 0x08, 0x00,  0, (void*)&OD_record1A0D},
+{0x1A0E, 0x08, 0x00,  0, (void*)&OD_record1A0E},
+{0x1A0F, 0x08, 0x00,  0, (void*)&OD_record1A0F},
+{0x1F80, 0x00, 0x8D,  4, (void*)&CO_OD_ROM.NMTStartup},
+{0x2100, 0x00, 0x36, 10, (void*)&CO_OD_RAM.errorStatusBits[0]},
+{0x2101, 0x00, 0x0D,  1, (void*)&CO_OD_ROM.CANNodeID},
+{0x2102, 0x00, 0x8D,  2, (void*)&CO_OD_ROM.CANBitRate},
+{0x2103, 0x00, 0x8E,  2, (void*)&CO_OD_RAM.SYNCCounter},
+{0x2104, 0x00, 0x86,  2, (void*)&CO_OD_RAM.SYNCTime},
+{0x2106, 0x00, 0x87,  4, (void*)&CO_OD_EEPROM.powerOnCounter},
+{0x2107, 0x05, 0xBE,  2, (void*)&CO_OD_RAM.performance[0]},
+{0x2108, 0x01, 0xB6,  2, (void*)&CO_OD_RAM.temperature[0]},
+{0x2109, 0x01, 0xB6,  2, (void*)&CO_OD_RAM.voltage[0]},
+{0x2110, 0x20, 0xFE,  4, (void*)&CO_OD_RAM.variableInt32[0]},
+{0x2111, 0x10, 0xFD,  4, (void*)&CO_OD_ROM.variableROMInt32[0]},
+{0x2112, 0x10, 0xFF,  4, (void*)&CO_OD_EEPROM.variableNVInt32[0]},
+{0x2120, 0x05, 0x00,  0, (void*)&OD_record2120},
+{0x2130, 0x03, 0x00,  0, (void*)&OD_record2130},
+{0x2301, 0x08, 0x00,  0, (void*)&OD_record2301},
+{0x2302, 0x08, 0x00,  0, (void*)&OD_record2302},
+{0x2303, 0x08, 0x00,  0, (void*)&OD_record2303},
+{0x2304, 0x08, 0x00,  0, (void*)&OD_record2304},
+{0x2305, 0x08, 0x00,  0, (void*)&OD_record2305},
+{0x2306, 0x08, 0x00,  0, (void*)&OD_record2306},
+{0x2307, 0x08, 0x00,  0, (void*)&OD_record2307},
+{0x2308, 0x08, 0x00,  0, (void*)&OD_record2308},
+{0x2309, 0x08, 0x00,  0, (void*)&OD_record2309},
+{0x230A, 0x08, 0x00,  0, (void*)&OD_record230A},
+{0x230B, 0x08, 0x00,  0, (void*)&OD_record230B},
+{0x230C, 0x08, 0x00,  0, (void*)&OD_record230C},
+{0x230D, 0x08, 0x00,  0, (void*)&OD_record230D},
+{0x230E, 0x08, 0x00,  0, (void*)&OD_record230E},
+{0x230F, 0x08, 0x00,  0, (void*)&OD_record230F},
+{0x2310, 0x08, 0x00,  0, (void*)&OD_record2310},
+{0x2311, 0x08, 0x00,  0, (void*)&OD_record2311},
+{0x2312, 0x08, 0x00,  0, (void*)&OD_record2312},
+{0x2313, 0x08, 0x00,  0, (void*)&OD_record2313},
+{0x2314, 0x08, 0x00,  0, (void*)&OD_record2314},
+{0x2315, 0x08, 0x00,  0, (void*)&OD_record2315},
+{0x2316, 0x08, 0x00,  0, (void*)&OD_record2316},
+{0x2317, 0x08, 0x00,  0, (void*)&OD_record2317},
+{0x2318, 0x08, 0x00,  0, (void*)&OD_record2318},
+{0x2319, 0x08, 0x00,  0, (void*)&OD_record2319},
+{0x231A, 0x08, 0x00,  0, (void*)&OD_record231A},
+{0x231B, 0x08, 0x00,  0, (void*)&OD_record231B},
+{0x231C, 0x08, 0x00,  0, (void*)&OD_record231C},
+{0x231D, 0x08, 0x00,  0, (void*)&OD_record231D},
+{0x231E, 0x08, 0x00,  0, (void*)&OD_record231E},
+{0x231F, 0x08, 0x00,  0, (void*)&OD_record231F},
+{0x2320, 0x08, 0x00,  0, (void*)&OD_record2320},
+{0x2400, 0x00, 0x3E,  1, (void*)&CO_OD_RAM.traceEnable},
+{0x2401, 0x06, 0x00,  0, (void*)&OD_record2401},
+{0x2402, 0x06, 0x00,  0, (void*)&OD_record2402},
+{0x2403, 0x06, 0x00,  0, (void*)&OD_record2403},
+{0x2404, 0x06, 0x00,  0, (void*)&OD_record2404},
+{0x2405, 0x06, 0x00,  0, (void*)&OD_record2405},
+{0x2406, 0x06, 0x00,  0, (void*)&OD_record2406},
+{0x2407, 0x06, 0x00,  0, (void*)&OD_record2407},
+{0x2408, 0x06, 0x00,  0, (void*)&OD_record2408},
+{0x2409, 0x06, 0x00,  0, (void*)&OD_record2409},
+{0x240A, 0x06, 0x00,  0, (void*)&OD_record240A},
+{0x240B, 0x06, 0x00,  0, (void*)&OD_record240B},
+{0x240C, 0x06, 0x00,  0, (void*)&OD_record240C},
+{0x240D, 0x06, 0x00,  0, (void*)&OD_record240D},
+{0x240E, 0x06, 0x00,  0, (void*)&OD_record240E},
+{0x240F, 0x06, 0x00,  0, (void*)&OD_record240F},
+{0x2410, 0x06, 0x00,  0, (void*)&OD_record2410},
+{0x2411, 0x06, 0x00,  0, (void*)&OD_record2411},
+{0x2412, 0x06, 0x00,  0, (void*)&OD_record2412},
+{0x2413, 0x06, 0x00,  0, (void*)&OD_record2413},
+{0x2414, 0x06, 0x00,  0, (void*)&OD_record2414},
+{0x2415, 0x06, 0x00,  0, (void*)&OD_record2415},
+{0x2416, 0x06, 0x00,  0, (void*)&OD_record2416},
+{0x2417, 0x06, 0x00,  0, (void*)&OD_record2417},
+{0x2418, 0x06, 0x00,  0, (void*)&OD_record2418},
+{0x2419, 0x06, 0x00,  0, (void*)&OD_record2419},
+{0x241A, 0x06, 0x00,  0, (void*)&OD_record241A},
+{0x241B, 0x06, 0x00,  0, (void*)&OD_record241B},
+{0x241C, 0x06, 0x00,  0, (void*)&OD_record241C},
+{0x241D, 0x06, 0x00,  0, (void*)&OD_record241D},
+{0x241E, 0x06, 0x00,  0, (void*)&OD_record241E},
+{0x241F, 0x06, 0x00,  0, (void*)&OD_record241F},
+{0x2420, 0x06, 0x00,  0, (void*)&OD_record2420},
+{0x6000, 0x08, 0x76,  1, (void*)&CO_OD_RAM.readInput8Bit[0]},
+{0x6200, 0x08, 0x3E,  1, (void*)&CO_OD_RAM.writeOutput8Bit[0]},
+{0x6401, 0x0C, 0xB6,  2, (void*)&CO_OD_RAM.readAnalogueInput16Bit[0]},
+{0x6411, 0x08, 0xBE,  2, (void*)&CO_OD_RAM.writeAnalogueOutput16Bit[0]},
 };
+
diff --git a/canopend/objDict/CO_OD.h b/canopend/objDict/CO_OD.h
index 93b82f9..cb5a9a7 100644
--- a/canopend/objDict/CO_OD.h
+++ b/canopend/objDict/CO_OD.h
@@ -1,3438 +1,464 @@
-/*******************************************************************************
-
-   File - CO_OD.c/CO_OD.h
-   CANopen Object Dictionary.
-
-   Copyright (C) 2004-2008 Janez Paternoster
-
-   License: GNU Lesser General Public License (LGPL).
-
-   <http://canopennode.sourceforge.net>
-
-   (For more information see <CO_SDO.h>.)
-
-   This file is part of CANopenNode, an opensource CANopen Stack.
-   Project home page is <https://github.com/CANopenNode/CANopenNode>.
-   For more information on CANopen see <http://www.can-cia.org/>.
- 
-   CANopenNode is free and open source software: you can redistribute
-   it and/or modify it under the terms of the GNU General Public License
-   as published by the Free Software Foundation, either version 2 of the
-   License, or (at your option) any later version.
-  
-   This program is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
-   GNU General Public License for more details.
-  
-   You should have received a copy of the GNU General Public License
-   along with this program. If not, see <http://www.gnu.org/licenses/>.
-  
-   Following clarification and special exception to the GNU General Public
-   License is included to the distribution terms of CANopenNode:
-  
-   Linking this library statically or dynamically with other modules is
-   making a combined work based on this library. Thus, the terms and
-   conditions of the GNU General Public License cover the whole combination.
-  
-   As a special exception, the copyright holders of this library give
-   you permission to link this library with independent modules to
-   produce an executable, regardless of the license terms of these
-   independent modules, and to copy and distribute the resulting
-   executable under terms of your choice, provided that you also meet,
-   for each linked independent module, the terms and conditions of the
-   license of that module. An independent module is a module which is
-   not derived from or based on this library. If you modify this
-   library, you may extend this exception to your version of the
-   library, but you are not obliged to do so. If you do not wish
-   to do so, delete this exception statement from your version.
- 
-   This file was automatically generated with libedssharp Object
-   Dictionary Editor v0.6-xdd-alpha-81-gb562769
-   DON'T EDIT THIS FILE MANUALLY !!!!
-*******************************************************************************/
+/*
+ * CANopen Object Dictionary.
+ *
+ * This file was automatically generated with CANopenNode Object
+ * Dictionary Editor. DON'T EDIT THIS FILE MANUALLY !!!!
+ * Object Dictionary Editor is currently an older, but functional web
+ * application. For more info see See 'Object_Dictionary_Editor/about.html' in
+ * <http://sourceforge.net/p/canopennode/code_complete/ci/master/tree/>
+ * For more information on CANopen Object Dictionary see <CO_SDO.h>.
+ *
+ * @file        CO_OD.h
+ * @author      Janez Paternoster
+ * @copyright   2010 - 2016 Janez Paternoster
+ *
+ * This file is part of CANopenNode, an opensource CANopen Stack.
+ * Project home page is <https://github.com/CANopenNode/CANopenNode>.
+ * For more information on CANopen see <http://www.can-cia.org/>.
+ *
+ * CANopenNode is free and open source software: you can redistribute
+ * it and/or modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation, either version 2 of the
+ * License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program. If not, see <http://www.gnu.org/licenses/>.
+ */
+
+
+#ifndef CO_OD_H
+#define CO_OD_H
 
-#pragma once
 
 /*******************************************************************************
    CANopen DATA DYPES
 *******************************************************************************/
-typedef bool_t BOOLEAN;
-typedef uint8_t UNSIGNED8;
-typedef uint16_t UNSIGNED16;
-typedef uint32_t UNSIGNED32;
-typedef uint64_t UNSIGNED64;
-typedef int8_t INTEGER8;
-typedef int16_t INTEGER16;
-typedef int32_t INTEGER32;
-typedef int64_t INTEGER64;
-typedef float32_t REAL32;
-typedef float64_t REAL64;
-typedef char_t VISIBLE_STRING;
-typedef oChar_t OCTET_STRING;
-typedef domain_t DOMAIN;
+   typedef uint8_t      UNSIGNED8;
+   typedef uint16_t     UNSIGNED16;
+   typedef uint32_t     UNSIGNED32;
+   typedef uint64_t     UNSIGNED64;
+   typedef int8_t       INTEGER8;
+   typedef int16_t      INTEGER16;
+   typedef int32_t      INTEGER32;
+   typedef int64_t      INTEGER64;
+   typedef float32_t    REAL32;
+   typedef float64_t    REAL64;
+   typedef char_t       VISIBLE_STRING;
+   typedef oChar_t      OCTET_STRING;
+   typedef domain_t     DOMAIN;
+
 
 /*******************************************************************************
    FILE INFO:
-      FileName:     BBBMasterFinal.eds
-      FileVersion:  0
-      CreationTime: 12:00AM
-      CreationDate: 01-01-2001
-      CreatedBy:    RG
-******************************************************************************/
+      FileName:     CANopenSocket
+      FileVersion:  -
+      CreationTime: 12:05:34
+      CreationDate: 2016-07-26
+      CreatedBy:    JP
+*******************************************************************************/
+
 
 /*******************************************************************************
    DEVICE INFO:
       VendorName:     CANopenNode
-      VendorNumber    0
+      VendorNumber:   0
       ProductName:    CANopenNode
       ProductNumber:  0
-******************************************************************************/
+*******************************************************************************/
+
 
 /*******************************************************************************
    FEATURES
 *******************************************************************************/
-#define CO_NO_SYNC 1       //Associated objects: 1005-1007
-#define CO_NO_EMERGENCY 1  //Associated objects: 1014, 1015
-#define CO_NO_SDO_SERVER 1 //Associated objects: 1200-127F
-#define CO_NO_SDO_CLIENT 1 //Associated objects: 1280-12FF
-#define CO_NO_LSS_SERVER 0 //LSS Slave
-#define CO_NO_LSS_CLIENT 0 //LSS Master
-#define CO_NO_RPDO 32      //Associated objects: 14xx, 16xx
-#define CO_NO_TPDO 32      //Associated objects: 18xx, 1Axx
-#define CO_NO_NMT_MASTER 1
+   #define CO_NO_SYNC                     1   //Associated objects: 1005, 1006, 1007, 2103, 2104
+   #define CO_NO_EMERGENCY                1   //Associated objects: 1014, 1015
+   #define CO_NO_SDO_SERVER               1   //Associated objects: 1200
+   #define CO_NO_SDO_CLIENT               1   //Associated objects: 1280
+   #define CO_NO_RPDO                     16  //Associated objects from index 1400 to 160F, count = 32
+   #define CO_NO_TPDO                     16  //Associated objects from index 1800 to 1A0F, count = 32
+   #define CO_NO_NMT_MASTER               1
+   #define CO_NO_TRACE                    32  //Associated objects from index 2301 to 2420, count = 65
+   #define CO_NO_LSS_CLIENT               1   //todo - do not add this manually to created file, change editor instead
+   #define CO_NO_LSS_SERVER               0   //todo - dito
 
 /*******************************************************************************
    OBJECT DICTIONARY
 *******************************************************************************/
-#define CO_OD_NoOfElements 247
+   #define CO_OD_NoOfElements             169
 
-/*******************************************************************************
-   TYPE DEFINITIONS FOR RECORDS
-*******************************************************************************/
-/*1018    */ typedef struct
-{
-        UNSIGNED8 maxSubIndex;
-        UNSIGNED32 vendorID;
-        UNSIGNED32 productCode;
-        UNSIGNED32 revisionNumber;
-        UNSIGNED32 serialNumber;
-} OD_identity_t;
-/*1200    */ typedef struct
-{
-        UNSIGNED8 maxSubIndex;
-        UNSIGNED32 COB_IDClientToServer;
-        UNSIGNED32 COB_IDServerToClient;
-} OD_SDOServerParameter_t;
-/*1280    */ typedef struct
-{
-        UNSIGNED8 maxSubIndex;
-        UNSIGNED32 COB_IDClientToServer;
-        UNSIGNED32 COB_IDServerToClient;
-        UNSIGNED8 nodeIDOfTheSDOServer;
-} OD_SDOClientParameter_t;
-/*1400    */ typedef struct
-{
-        UNSIGNED8 maxSubIndex;
-        UNSIGNED32 COB_IDUsedByRPDO;
-        UNSIGNED8 transmissionType;
-} OD_RPDOCommunicationParameter_t;
-/*1600    */ typedef struct
-{
-        UNSIGNED8 numberOfMappedObjects;
-        UNSIGNED32 mappedObject1;
-        UNSIGNED32 mappedObject2;
-        UNSIGNED32 mappedObject3;
-        UNSIGNED32 mappedObject4;
-        UNSIGNED32 mappedObject5;
-        UNSIGNED32 mappedObject6;
-        UNSIGNED32 mappedObject7;
-        UNSIGNED32 mappedObject8;
-} OD_RPDOMappingParameter_t;
-/*1800    */ typedef struct
-{
-        UNSIGNED8 maxSubIndex;
-        UNSIGNED32 COB_IDUsedByTPDO;
-        UNSIGNED8 transmissionType;
-        UNSIGNED16 inhibitTime;
-        UNSIGNED8 compatibilityEntry;
-        UNSIGNED16 eventTimer;
-        UNSIGNED8 SYNCStartValue;
-} OD_TPDOCommunicationParameter_t;
-/*1a00    */ typedef struct
-{
-        UNSIGNED8 numberOfMappedObjects;
-        UNSIGNED32 mappedObject1;
-        UNSIGNED32 mappedObject2;
-        UNSIGNED32 mappedObject3;
-        UNSIGNED32 mappedObject4;
-        UNSIGNED32 mappedObject5;
-        UNSIGNED32 mappedObject6;
-        UNSIGNED32 mappedObject7;
-        UNSIGNED32 mappedObject8;
-} OD_TPDOMappingParameter_t;
-/*2120    */ typedef struct
-{
-        UNSIGNED8 maxSubIndex;
-        INTEGER64 I64;
-        UNSIGNED64 U64;
-        REAL32 R32;
-        REAL64 R64;
-        DOMAIN domain;
-} OD_testVar_t;
-/*2130    */ typedef struct
-{
-        UNSIGNED8 maxSubIndex;
-        VISIBLE_STRING string[1];
-        UNSIGNED64 epochTimeBaseMs;
-        UNSIGNED32 epochTimeOffsetMs;
-} OD_time_t;
-/*2301    */ typedef struct
-{
-        UNSIGNED8 maxSubIndex;
-        UNSIGNED32 size;
-        UNSIGNED8 axisNo;
-        VISIBLE_STRING name[6];
-        VISIBLE_STRING color[5];
-        UNSIGNED32 map;
-        UNSIGNED8 format;
-        UNSIGNED8 trigger;
-        INTEGER32 threshold;
-} OD_traceConfig_t;
-/*2401    */ typedef struct
-{
-        UNSIGNED8 maxSubIndex;
-        UNSIGNED32 size;
-        INTEGER32 value;
-        INTEGER32 min;
-        INTEGER32 max;
-        DOMAIN plot;
-        UNSIGNED32 triggerTime;
-} OD_trace_t;
-/*6040    */ typedef struct
-{
-        UNSIGNED8 numberOfMotors;
-        UNSIGNED16 motor1;
-        UNSIGNED16 motor2;
-        UNSIGNED16 motor3;
-        UNSIGNED16 motor4;
-        UNSIGNED16 motor5;
-        UNSIGNED16 motor6;
-} OD_controlWords_t;
-/*6041    */ typedef struct
-{
-        UNSIGNED8 numberOfMotors;
-        UNSIGNED16 motor1;
-        UNSIGNED16 motor2;
-        UNSIGNED16 motor3;
-        UNSIGNED16 motor4;
-        UNSIGNED16 motor5;
-        UNSIGNED16 motor6;
-} OD_statusWords_t;
-/*6064    */ typedef struct
-{
-        UNSIGNED8 numberOfMotors;
-        INTEGER32 motor1;
-        INTEGER32 motor2;
-        INTEGER32 motor3;
-        INTEGER32 motor4;
-        INTEGER32 motor5;
-        INTEGER32 motor6;
-} OD_actualMotorPositions_t;
-/*606c    */ typedef struct
-{
-        UNSIGNED8 numberOfMotors;
-        INTEGER32 motor1;
-        INTEGER32 motor2;
-        INTEGER32 motor3;
-        INTEGER32 motor4;
-        INTEGER32 motor5;
-        INTEGER32 motor6;
-} OD_actualMotorVelocities_t;
-/*6077    */ typedef struct
-{
-        UNSIGNED8 numberOfMotors;
-        INTEGER32 motor1;
-        INTEGER32 motor2;
-        INTEGER32 motor3;
-        INTEGER32 motor4;
-} OD_actualMotorTorques_t;
-/*607a    */ typedef struct
-{
-        UNSIGNED8 numberOfMotors;
-        INTEGER32 motor1;
-        INTEGER32 motor2;
-        INTEGER32 motor3;
-        INTEGER32 motor4;
-        INTEGER32 motor5;
-        INTEGER32 motor6;
-} OD_targetMotorPositions_t;
-/*60ff    */ typedef struct
-{
-        UNSIGNED8 numberOfMotors;
-        INTEGER32 motor1;
-        INTEGER32 motor2;
-        INTEGER32 motor3;
-        INTEGER32 motor4;
-        INTEGER32 motor5;
-        INTEGER32 motor6;
-} OD_targetMotorVelocities_t;
 
 /*******************************************************************************
-   TYPE DEFINITIONS FOR OBJECT DICTIONARY INDEXES
-
-   some of those are redundant with CO_SDO.h CO_ObjDicId_t <Common CiA301 object 
-   dictionary entries>
+   TYPE DEFINITIONS FOR RECORDS
 *******************************************************************************/
-/*1000 */
-#define OD_1000_deviceType 0x1000
-
-/*1001 */
-#define OD_1001_errorRegister 0x1001
-
-/*1002 */
-#define OD_1002_manufacturerStatusRegister 0x1002
-
-/*1003 */
-#define OD_1003_preDefinedErrorField 0x1003
-
-#define OD_1003_0_preDefinedErrorField_maxSubIndex 0
-#define OD_1003_1_preDefinedErrorField_standardErrorField 1
-#define OD_1003_2_preDefinedErrorField_standardErrorField 2
-#define OD_1003_3_preDefinedErrorField_standardErrorField 3
-#define OD_1003_4_preDefinedErrorField_standardErrorField 4
-#define OD_1003_5_preDefinedErrorField_standardErrorField 5
-#define OD_1003_6_preDefinedErrorField_standardErrorField 6
-#define OD_1003_7_preDefinedErrorField_standardErrorField 7
-#define OD_1003_8_preDefinedErrorField_standardErrorField 8
-
-/*1005 */
-#define OD_1005_COB_ID_SYNCMessage 0x1005
-
-/*1006 */
-#define OD_1006_communicationCyclePeriod 0x1006
-
-/*1007 */
-#define OD_1007_synchronousWindowLength 0x1007
-
-/*1008 */
-#define OD_1008_manufacturerDeviceName 0x1008
-
-/*1009 */
-#define OD_1009_manufacturerHardwareVersion 0x1009
-
-/*100a */
-#define OD_100a_manufacturerSoftwareVersion 0x100a
-
-/*100c */
-#define OD_100c_guardTime 0x100c
-
-/*100d */
-#define OD_100d_lifeTimeFactor 0x100d
-
-/*1010 */
-#define OD_1010_storeParameters 0x1010
-
-#define OD_1010_0_storeParameters_maxSubIndex 0
-#define OD_1010_1_storeParameters_saveAllParameters 1
-
-/*1011 */
-#define OD_1011_restoreDefaultParameters 0x1011
-
-#define OD_1011_0_restoreDefaultParameters_maxSubIndex 0
-#define OD_1011_1_restoreDefaultParameters_restoreAllDefaultParameters 1
-
-/*1012 */
-#define OD_1012_COB_ID_TIME 0x1012
-
-/*1013 */
-#define OD_1013_highResolutionTimeStamp 0x1013
-
-/*1014 */
-#define OD_1014_COB_ID_EMCY 0x1014
-
-/*1015 */
-#define OD_1015_inhibitTimeEMCY 0x1015
-
-/*1016 */
-#define OD_1016_consumerHeartbeatTime 0x1016
-
-#define OD_1016_0_consumerHeartbeatTime_maxSubIndex 0
-#define OD_1016_1_consumerHeartbeatTime_consumerHeartbeatTime 1
-#define OD_1016_2_consumerHeartbeatTime_consumerHeartbeatTime 2
-#define OD_1016_3_consumerHeartbeatTime_consumerHeartbeatTime 3
-#define OD_1016_4_consumerHeartbeatTime_consumerHeartbeatTime 4
-
-/*1017 */
-#define OD_1017_producerHeartbeatTime 0x1017
-
-/*1018 */
-#define OD_1018_identity 0x1018
-
-#define OD_1018_0_identity_maxSubIndex 0
-#define OD_1018_1_identity_vendorID 1
-#define OD_1018_2_identity_productCode 2
-#define OD_1018_3_identity_revisionNumber 3
-#define OD_1018_4_identity_serialNumber 4
-
-/*1019 */
-#define OD_1019_synchronousCounterOverflowValue 0x1019
-
-/*1029 */
-#define OD_1029_errorBehavior 0x1029
-
-#define OD_1029_0_errorBehavior_maxSubIndex 0
-#define OD_1029_1_errorBehavior_communication 1
-#define OD_1029_2_errorBehavior_communicationOther 2
-#define OD_1029_3_errorBehavior_communicationPassive 3
-#define OD_1029_4_errorBehavior_generic 4
-#define OD_1029_5_errorBehavior_deviceProfile 5
-#define OD_1029_6_errorBehavior_manufacturerSpecific 6
-
-/*1200 */
-#define OD_1200_SDOServerParameter 0x1200
-
-#define OD_1200_0_SDOServerParameter_maxSubIndex 0
-#define OD_1200_1_SDOServerParameter_COB_IDClientToServer 1
-#define OD_1200_2_SDOServerParameter_COB_IDServerToClient 2
-
-/*1280 */
-#define OD_1280_SDOClientParameter 0x1280
-
-#define OD_1280_0_SDOClientParameter_maxSubIndex 0
-#define OD_1280_1_SDOClientParameter_COB_IDClientToServer 1
-#define OD_1280_2_SDOClientParameter_COB_IDServerToClient 2
-#define OD_1280_3_SDOClientParameter_nodeIDOfTheSDOServer 3
-
-/*1400 */
-#define OD_1400_RPDOCommunicationParameter 0x1400
-
-#define OD_1400_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_1400_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_1400_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1401 */
-#define OD_1401_RPDOCommunicationParameter 0x1401
-
-#define OD_1401_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_1401_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_1401_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1402 */
-#define OD_1402_RPDOCommunicationParameter 0x1402
-
-#define OD_1402_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_1402_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_1402_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1403 */
-#define OD_1403_RPDOCommunicationParameter 0x1403
-
-#define OD_1403_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_1403_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_1403_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1404 */
-#define OD_1404_RPDOCommunicationParameter 0x1404
-
-#define OD_1404_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_1404_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_1404_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1405 */
-#define OD_1405_RPDOCommunicationParameter 0x1405
-
-#define OD_1405_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_1405_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_1405_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1406 */
-#define OD_1406_RPDOCommunicationParameter 0x1406
-
-#define OD_1406_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_1406_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_1406_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1407 */
-#define OD_1407_RPDOCommunicationParameter 0x1407
-
-#define OD_1407_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_1407_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_1407_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1408 */
-#define OD_1408_RPDOCommunicationParameter 0x1408
-
-#define OD_1408_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_1408_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_1408_2_RPDOCommunicationParameter_transmissionType 2
+/*1018      */ typedef struct{
+               UNSIGNED8      maxSubIndex;
+               UNSIGNED32     vendorID;
+               UNSIGNED32     productCode;
+               UNSIGNED32     revisionNumber;
+               UNSIGNED32     serialNumber;
+               }              OD_identity_t;
+
+/*1200[1]   */ typedef struct{
+               UNSIGNED8      maxSubIndex;
+               UNSIGNED32     COB_IDClientToServer;
+               UNSIGNED32     COB_IDServerToClient;
+               }              OD_SDOServerParameter_t;
+
+/*1280[1]   */ typedef struct{
+               UNSIGNED8      maxSubIndex;
+               UNSIGNED32     COB_IDClientToServer;
+               UNSIGNED32     COB_IDServerToClient;
+               UNSIGNED8      nodeIDOfTheSDOServer;
+               }              OD_SDOClientParameter_t;
+
+/*1400[16]  */ typedef struct{
+               UNSIGNED8      maxSubIndex;
+               UNSIGNED32     COB_IDUsedByRPDO;
+               UNSIGNED8      transmissionType;
+               }              OD_RPDOCommunicationParameter_t;
+
+/*1600[16]  */ typedef struct{
+               UNSIGNED8      numberOfMappedObjects;
+               UNSIGNED32     mappedObject1;
+               UNSIGNED32     mappedObject2;
+               UNSIGNED32     mappedObject3;
+               UNSIGNED32     mappedObject4;
+               UNSIGNED32     mappedObject5;
+               UNSIGNED32     mappedObject6;
+               UNSIGNED32     mappedObject7;
+               UNSIGNED32     mappedObject8;
+               }              OD_RPDOMappingParameter_t;
+
+/*1800[16]  */ typedef struct{
+               UNSIGNED8      maxSubIndex;
+               UNSIGNED32     COB_IDUsedByTPDO;
+               UNSIGNED8      transmissionType;
+               UNSIGNED16     inhibitTime;
+               UNSIGNED8      compatibilityEntry;
+               UNSIGNED16     eventTimer;
+               UNSIGNED8      SYNCStartValue;
+               }              OD_TPDOCommunicationParameter_t;
+
+/*1A00[16]  */ typedef struct{
+               UNSIGNED8      numberOfMappedObjects;
+               UNSIGNED32     mappedObject1;
+               UNSIGNED32     mappedObject2;
+               UNSIGNED32     mappedObject3;
+               UNSIGNED32     mappedObject4;
+               UNSIGNED32     mappedObject5;
+               UNSIGNED32     mappedObject6;
+               UNSIGNED32     mappedObject7;
+               UNSIGNED32     mappedObject8;
+               }              OD_TPDOMappingParameter_t;
+
+/*2120      */ typedef struct{
+               UNSIGNED8      maxSubIndex;
+               INTEGER64      I64;
+               UNSIGNED64     U64;
+               REAL32         R32;
+               REAL64         R64;
+               DOMAIN         domain;
+               }              OD_testVar_t;
+
+/*2130      */ typedef struct{
+               UNSIGNED8      maxSubIndex;
+               VISIBLE_STRING string[30];
+               UNSIGNED64     epochTimeBaseMs;
+               UNSIGNED32     epochTimeOffsetMs;
+               }              OD_time_t;
+
+/*2301[32]  */ typedef struct{
+               UNSIGNED8      maxSubIndex;
+               UNSIGNED32     size;
+               UNSIGNED8      axisNo;
+               VISIBLE_STRING name[30];
+               VISIBLE_STRING color[20];
+               UNSIGNED32     map;
+               UNSIGNED8      format;
+               UNSIGNED8      trigger;
+               INTEGER32      threshold;
+               }              OD_traceConfig_t;
+
+/*2401[32]  */ typedef struct{
+               UNSIGNED8      maxSubIndex;
+               UNSIGNED32     size;
+               INTEGER32      value;
+               INTEGER32      min;
+               INTEGER32      max;
+               DOMAIN         plot;
+               UNSIGNED32     triggerTime;
+               }              OD_trace_t;
 
-/*1409 */
-#define OD_1409_RPDOCommunicationParameter 0x1409
-
-#define OD_1409_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_1409_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_1409_2_RPDOCommunicationParameter_transmissionType 2
-
-/*140a */
-#define OD_140a_RPDOCommunicationParameter 0x140a
-
-#define OD_140a_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_140a_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_140a_2_RPDOCommunicationParameter_transmissionType 2
-
-/*140b */
-#define OD_140b_RPDOCommunicationParameter 0x140b
-
-#define OD_140b_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_140b_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_140b_2_RPDOCommunicationParameter_transmissionType 2
-
-/*140c */
-#define OD_140c_RPDOCommunicationParameter 0x140c
-
-#define OD_140c_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_140c_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_140c_2_RPDOCommunicationParameter_transmissionType 2
-
-/*140d */
-#define OD_140d_RPDOCommunicationParameter 0x140d
-
-#define OD_140d_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_140d_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_140d_2_RPDOCommunicationParameter_transmissionType 2
-
-/*140e */
-#define OD_140e_RPDOCommunicationParameter 0x140e
-
-#define OD_140e_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_140e_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_140e_2_RPDOCommunicationParameter_transmissionType 2
-
-/*140f */
-#define OD_140f_RPDOCommunicationParameter 0x140f
-
-#define OD_140f_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_140f_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_140f_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1410 */
-#define OD_1410_RPDOCommunicationParameter 0x1410
-
-#define OD_1410_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_1410_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_1410_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1411 */
-#define OD_1411_RPDOCommunicationParameter 0x1411
-
-#define OD_1411_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_1411_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_1411_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1412 */
-#define OD_1412_RPDOCommunicationParameter 0x1412
-
-#define OD_1412_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_1412_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_1412_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1413 */
-#define OD_1413_RPDOCommunicationParameter 0x1413
-
-#define OD_1413_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_1413_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_1413_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1414 */
-#define OD_1414_RPDOCommunicationParameter 0x1414
-
-#define OD_1414_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_1414_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_1414_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1415 */
-#define OD_1415_RPDOCommunicationParameter 0x1415
-
-#define OD_1415_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_1415_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_1415_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1416 */
-#define OD_1416_RPDOCommunicationParameter 0x1416
-
-#define OD_1416_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_1416_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_1416_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1417 */
-#define OD_1417_RPDOCommunicationParameter 0x1417
-
-#define OD_1417_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_1417_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_1417_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1418 */
-#define OD_1418_RPDOCommunicationParameter 0x1418
-
-#define OD_1418_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_1418_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_1418_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1419 */
-#define OD_1419_RPDOCommunicationParameter 0x1419
-
-#define OD_1419_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_1419_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_1419_2_RPDOCommunicationParameter_transmissionType 2
-
-/*141a */
-#define OD_141a_RPDOCommunicationParameter 0x141a
-
-#define OD_141a_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_141a_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_141a_2_RPDOCommunicationParameter_transmissionType 2
-
-/*141b */
-#define OD_141b_RPDOCommunicationParameter 0x141b
-
-#define OD_141b_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_141b_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_141b_2_RPDOCommunicationParameter_transmissionType 2
-
-/*141c */
-#define OD_141c_RPDOCommunicationParameter 0x141c
-
-#define OD_141c_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_141c_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_141c_2_RPDOCommunicationParameter_transmissionType 2
-
-/*141d */
-#define OD_141d_RPDOCommunicationParameter 0x141d
-
-#define OD_141d_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_141d_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_141d_2_RPDOCommunicationParameter_transmissionType 2
-
-/*141e */
-#define OD_141e_RPDOCommunicationParameter 0x141e
-
-#define OD_141e_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_141e_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_141e_2_RPDOCommunicationParameter_transmissionType 2
-
-/*141f */
-#define OD_141f_RPDOCommunicationParameter 0x141f
-
-#define OD_141f_0_RPDOCommunicationParameter_maxSubIndex 0
-#define OD_141f_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-#define OD_141f_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1600 */
-#define OD_1600_RPDOMappingParameter 0x1600
-
-#define OD_1600_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_1600_1_RPDOMappingParameter_mappedObject1 1
-#define OD_1600_2_RPDOMappingParameter_mappedObject2 2
-#define OD_1600_3_RPDOMappingParameter_mappedObject3 3
-#define OD_1600_4_RPDOMappingParameter_mappedObject4 4
-#define OD_1600_5_RPDOMappingParameter_mappedObject5 5
-#define OD_1600_6_RPDOMappingParameter_mappedObject6 6
-#define OD_1600_7_RPDOMappingParameter_mappedObject7 7
-#define OD_1600_8_RPDOMappingParameter_mappedObject8 8
-
-/*1601 */
-#define OD_1601_RPDOMappingParameter 0x1601
-
-#define OD_1601_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_1601_1_RPDOMappingParameter_mappedObject1 1
-#define OD_1601_2_RPDOMappingParameter_mappedObject2 2
-#define OD_1601_3_RPDOMappingParameter_mappedObject3 3
-#define OD_1601_4_RPDOMappingParameter_mappedObject4 4
-#define OD_1601_5_RPDOMappingParameter_mappedObject5 5
-#define OD_1601_6_RPDOMappingParameter_mappedObject6 6
-#define OD_1601_7_RPDOMappingParameter_mappedObject7 7
-#define OD_1601_8_RPDOMappingParameter_mappedObject8 8
-
-/*1602 */
-#define OD_1602_RPDOMappingParameter 0x1602
-
-#define OD_1602_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_1602_1_RPDOMappingParameter_mappedObject1 1
-#define OD_1602_2_RPDOMappingParameter_mappedObject2 2
-#define OD_1602_3_RPDOMappingParameter_mappedObject3 3
-#define OD_1602_4_RPDOMappingParameter_mappedObject4 4
-#define OD_1602_5_RPDOMappingParameter_mappedObject5 5
-#define OD_1602_6_RPDOMappingParameter_mappedObject6 6
-#define OD_1602_7_RPDOMappingParameter_mappedObject7 7
-#define OD_1602_8_RPDOMappingParameter_mappedObject8 8
-
-/*1603 */
-#define OD_1603_RPDOMappingParameter 0x1603
-
-#define OD_1603_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_1603_1_RPDOMappingParameter_mappedObject1 1
-#define OD_1603_2_RPDOMappingParameter_mappedObject2 2
-#define OD_1603_3_RPDOMappingParameter_mappedObject3 3
-#define OD_1603_4_RPDOMappingParameter_mappedObject4 4
-#define OD_1603_5_RPDOMappingParameter_mappedObject5 5
-#define OD_1603_6_RPDOMappingParameter_mappedObject6 6
-#define OD_1603_7_RPDOMappingParameter_mappedObject7 7
-#define OD_1603_8_RPDOMappingParameter_mappedObject8 8
-
-/*1604 */
-#define OD_1604_RPDOMappingParameter 0x1604
-
-#define OD_1604_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_1604_1_RPDOMappingParameter_mappedObject1 1
-#define OD_1604_2_RPDOMappingParameter_mappedObject2 2
-#define OD_1604_3_RPDOMappingParameter_mappedObject3 3
-#define OD_1604_4_RPDOMappingParameter_mappedObject4 4
-#define OD_1604_5_RPDOMappingParameter_mappedObject5 5
-#define OD_1604_6_RPDOMappingParameter_mappedObject6 6
-#define OD_1604_7_RPDOMappingParameter_mappedObject7 7
-#define OD_1604_8_RPDOMappingParameter_mappedObject8 8
-
-/*1605 */
-#define OD_1605_RPDOMappingParameter 0x1605
-
-#define OD_1605_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_1605_1_RPDOMappingParameter_mappedObject1 1
-#define OD_1605_2_RPDOMappingParameter_mappedObject2 2
-#define OD_1605_3_RPDOMappingParameter_mappedObject3 3
-#define OD_1605_4_RPDOMappingParameter_mappedObject4 4
-#define OD_1605_5_RPDOMappingParameter_mappedObject5 5
-#define OD_1605_6_RPDOMappingParameter_mappedObject6 6
-#define OD_1605_7_RPDOMappingParameter_mappedObject7 7
-#define OD_1605_8_RPDOMappingParameter_mappedObject8 8
-
-/*1606 */
-#define OD_1606_RPDOMappingParameter 0x1606
-
-#define OD_1606_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_1606_1_RPDOMappingParameter_mappedObject1 1
-#define OD_1606_2_RPDOMappingParameter_mappedObject2 2
-#define OD_1606_3_RPDOMappingParameter_mappedObject3 3
-#define OD_1606_4_RPDOMappingParameter_mappedObject4 4
-#define OD_1606_5_RPDOMappingParameter_mappedObject5 5
-#define OD_1606_6_RPDOMappingParameter_mappedObject6 6
-#define OD_1606_7_RPDOMappingParameter_mappedObject7 7
-#define OD_1606_8_RPDOMappingParameter_mappedObject8 8
-
-/*1607 */
-#define OD_1607_RPDOMappingParameter 0x1607
-
-#define OD_1607_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_1607_1_RPDOMappingParameter_mappedObject1 1
-#define OD_1607_2_RPDOMappingParameter_mappedObject2 2
-#define OD_1607_3_RPDOMappingParameter_mappedObject3 3
-#define OD_1607_4_RPDOMappingParameter_mappedObject4 4
-#define OD_1607_5_RPDOMappingParameter_mappedObject5 5
-#define OD_1607_6_RPDOMappingParameter_mappedObject6 6
-#define OD_1607_7_RPDOMappingParameter_mappedObject7 7
-#define OD_1607_8_RPDOMappingParameter_mappedObject8 8
-
-/*1608 */
-#define OD_1608_RPDOMappingParameter 0x1608
-
-#define OD_1608_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_1608_1_RPDOMappingParameter_mappedObject1 1
-#define OD_1608_2_RPDOMappingParameter_mappedObject2 2
-#define OD_1608_3_RPDOMappingParameter_mappedObject3 3
-#define OD_1608_4_RPDOMappingParameter_mappedObject4 4
-#define OD_1608_5_RPDOMappingParameter_mappedObject5 5
-#define OD_1608_6_RPDOMappingParameter_mappedObject6 6
-#define OD_1608_7_RPDOMappingParameter_mappedObject7 7
-#define OD_1608_8_RPDOMappingParameter_mappedObject8 8
-
-/*1609 */
-#define OD_1609_RPDOMappingParameter 0x1609
-
-#define OD_1609_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_1609_1_RPDOMappingParameter_mappedObject1 1
-#define OD_1609_2_RPDOMappingParameter_mappedObject2 2
-#define OD_1609_3_RPDOMappingParameter_mappedObject3 3
-#define OD_1609_4_RPDOMappingParameter_mappedObject4 4
-#define OD_1609_5_RPDOMappingParameter_mappedObject5 5
-#define OD_1609_6_RPDOMappingParameter_mappedObject6 6
-#define OD_1609_7_RPDOMappingParameter_mappedObject7 7
-#define OD_1609_8_RPDOMappingParameter_mappedObject8 8
-
-/*160a */
-#define OD_160a_RPDOMappingParameter 0x160a
-
-#define OD_160a_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_160a_1_RPDOMappingParameter_mappedObject1 1
-#define OD_160a_2_RPDOMappingParameter_mappedObject2 2
-#define OD_160a_3_RPDOMappingParameter_mappedObject3 3
-#define OD_160a_4_RPDOMappingParameter_mappedObject4 4
-#define OD_160a_5_RPDOMappingParameter_mappedObject5 5
-#define OD_160a_6_RPDOMappingParameter_mappedObject6 6
-#define OD_160a_7_RPDOMappingParameter_mappedObject7 7
-#define OD_160a_8_RPDOMappingParameter_mappedObject8 8
-
-/*160b */
-#define OD_160b_RPDOMappingParameter 0x160b
-
-#define OD_160b_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_160b_1_RPDOMappingParameter_mappedObject1 1
-#define OD_160b_2_RPDOMappingParameter_mappedObject2 2
-#define OD_160b_3_RPDOMappingParameter_mappedObject3 3
-#define OD_160b_4_RPDOMappingParameter_mappedObject4 4
-#define OD_160b_5_RPDOMappingParameter_mappedObject5 5
-#define OD_160b_6_RPDOMappingParameter_mappedObject6 6
-#define OD_160b_7_RPDOMappingParameter_mappedObject7 7
-#define OD_160b_8_RPDOMappingParameter_mappedObject8 8
-
-/*160c */
-#define OD_160c_RPDOMappingParameter 0x160c
-
-#define OD_160c_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_160c_1_RPDOMappingParameter_mappedObject1 1
-#define OD_160c_2_RPDOMappingParameter_mappedObject2 2
-#define OD_160c_3_RPDOMappingParameter_mappedObject3 3
-#define OD_160c_4_RPDOMappingParameter_mappedObject4 4
-#define OD_160c_5_RPDOMappingParameter_mappedObject5 5
-#define OD_160c_6_RPDOMappingParameter_mappedObject6 6
-#define OD_160c_7_RPDOMappingParameter_mappedObject7 7
-#define OD_160c_8_RPDOMappingParameter_mappedObject8 8
-
-/*160d */
-#define OD_160d_RPDOMappingParameter 0x160d
-
-#define OD_160d_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_160d_1_RPDOMappingParameter_mappedObject1 1
-#define OD_160d_2_RPDOMappingParameter_mappedObject2 2
-#define OD_160d_3_RPDOMappingParameter_mappedObject3 3
-#define OD_160d_4_RPDOMappingParameter_mappedObject4 4
-#define OD_160d_5_RPDOMappingParameter_mappedObject5 5
-#define OD_160d_6_RPDOMappingParameter_mappedObject6 6
-#define OD_160d_7_RPDOMappingParameter_mappedObject7 7
-#define OD_160d_8_RPDOMappingParameter_mappedObject8 8
-
-/*160e */
-#define OD_160e_RPDOMappingParameter 0x160e
-
-#define OD_160e_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_160e_1_RPDOMappingParameter_mappedObject1 1
-#define OD_160e_2_RPDOMappingParameter_mappedObject2 2
-#define OD_160e_3_RPDOMappingParameter_mappedObject3 3
-#define OD_160e_4_RPDOMappingParameter_mappedObject4 4
-#define OD_160e_5_RPDOMappingParameter_mappedObject5 5
-#define OD_160e_6_RPDOMappingParameter_mappedObject6 6
-#define OD_160e_7_RPDOMappingParameter_mappedObject7 7
-#define OD_160e_8_RPDOMappingParameter_mappedObject8 8
-
-/*160f */
-#define OD_160f_RPDOMappingParameter 0x160f
-
-#define OD_160f_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_160f_1_RPDOMappingParameter_mappedObject1 1
-#define OD_160f_2_RPDOMappingParameter_mappedObject2 2
-#define OD_160f_3_RPDOMappingParameter_mappedObject3 3
-#define OD_160f_4_RPDOMappingParameter_mappedObject4 4
-#define OD_160f_5_RPDOMappingParameter_mappedObject5 5
-#define OD_160f_6_RPDOMappingParameter_mappedObject6 6
-#define OD_160f_7_RPDOMappingParameter_mappedObject7 7
-#define OD_160f_8_RPDOMappingParameter_mappedObject8 8
-
-/*1610 */
-#define OD_1610_RPDOMappingParameter 0x1610
-
-#define OD_1610_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_1610_1_RPDOMappingParameter_mappedObject1 1
-#define OD_1610_2_RPDOMappingParameter_mappedObject2 2
-#define OD_1610_3_RPDOMappingParameter_mappedObject3 3
-#define OD_1610_4_RPDOMappingParameter_mappedObject4 4
-#define OD_1610_5_RPDOMappingParameter_mappedObject5 5
-#define OD_1610_6_RPDOMappingParameter_mappedObject6 6
-#define OD_1610_7_RPDOMappingParameter_mappedObject7 7
-#define OD_1610_8_RPDOMappingParameter_mappedObject8 8
-
-/*1611 */
-#define OD_1611_RPDOMappingParameter 0x1611
-
-#define OD_1611_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_1611_1_RPDOMappingParameter_mappedObject1 1
-#define OD_1611_2_RPDOMappingParameter_mappedObject2 2
-#define OD_1611_3_RPDOMappingParameter_mappedObject3 3
-#define OD_1611_4_RPDOMappingParameter_mappedObject4 4
-#define OD_1611_5_RPDOMappingParameter_mappedObject5 5
-#define OD_1611_6_RPDOMappingParameter_mappedObject6 6
-#define OD_1611_7_RPDOMappingParameter_mappedObject7 7
-#define OD_1611_8_RPDOMappingParameter_mappedObject8 8
-
-/*1612 */
-#define OD_1612_RPDOMappingParameter 0x1612
-
-#define OD_1612_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_1612_1_RPDOMappingParameter_mappedObject1 1
-#define OD_1612_2_RPDOMappingParameter_mappedObject2 2
-#define OD_1612_3_RPDOMappingParameter_mappedObject3 3
-#define OD_1612_4_RPDOMappingParameter_mappedObject4 4
-#define OD_1612_5_RPDOMappingParameter_mappedObject5 5
-#define OD_1612_6_RPDOMappingParameter_mappedObject6 6
-#define OD_1612_7_RPDOMappingParameter_mappedObject7 7
-#define OD_1612_8_RPDOMappingParameter_mappedObject8 8
-
-/*1613 */
-#define OD_1613_RPDOMappingParameter 0x1613
-
-#define OD_1613_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_1613_1_RPDOMappingParameter_mappedObject1 1
-#define OD_1613_2_RPDOMappingParameter_mappedObject2 2
-#define OD_1613_3_RPDOMappingParameter_mappedObject3 3
-#define OD_1613_4_RPDOMappingParameter_mappedObject4 4
-#define OD_1613_5_RPDOMappingParameter_mappedObject5 5
-#define OD_1613_6_RPDOMappingParameter_mappedObject6 6
-#define OD_1613_7_RPDOMappingParameter_mappedObject7 7
-#define OD_1613_8_RPDOMappingParameter_mappedObject8 8
-
-/*1614 */
-#define OD_1614_RPDOMappingParameter 0x1614
-
-#define OD_1614_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_1614_1_RPDOMappingParameter_mappedObject1 1
-#define OD_1614_2_RPDOMappingParameter_mappedObject2 2
-#define OD_1614_3_RPDOMappingParameter_mappedObject3 3
-#define OD_1614_4_RPDOMappingParameter_mappedObject4 4
-#define OD_1614_5_RPDOMappingParameter_mappedObject5 5
-#define OD_1614_6_RPDOMappingParameter_mappedObject6 6
-#define OD_1614_7_RPDOMappingParameter_mappedObject7 7
-#define OD_1614_8_RPDOMappingParameter_mappedObject8 8
-
-/*1615 */
-#define OD_1615_RPDOMappingParameter 0x1615
-
-#define OD_1615_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_1615_1_RPDOMappingParameter_mappedObject1 1
-#define OD_1615_2_RPDOMappingParameter_mappedObject2 2
-#define OD_1615_3_RPDOMappingParameter_mappedObject3 3
-#define OD_1615_4_RPDOMappingParameter_mappedObject4 4
-#define OD_1615_5_RPDOMappingParameter_mappedObject5 5
-#define OD_1615_6_RPDOMappingParameter_mappedObject6 6
-#define OD_1615_7_RPDOMappingParameter_mappedObject7 7
-#define OD_1615_8_RPDOMappingParameter_mappedObject8 8
-
-/*1616 */
-#define OD_1616_RPDOMappingParameter 0x1616
-
-#define OD_1616_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_1616_1_RPDOMappingParameter_mappedObject1 1
-#define OD_1616_2_RPDOMappingParameter_mappedObject2 2
-#define OD_1616_3_RPDOMappingParameter_mappedObject3 3
-#define OD_1616_4_RPDOMappingParameter_mappedObject4 4
-#define OD_1616_5_RPDOMappingParameter_mappedObject5 5
-#define OD_1616_6_RPDOMappingParameter_mappedObject6 6
-#define OD_1616_7_RPDOMappingParameter_mappedObject7 7
-#define OD_1616_8_RPDOMappingParameter_mappedObject8 8
-
-/*1617 */
-#define OD_1617_RPDOMappingParameter 0x1617
-
-#define OD_1617_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_1617_1_RPDOMappingParameter_mappedObject1 1
-#define OD_1617_2_RPDOMappingParameter_mappedObject2 2
-#define OD_1617_3_RPDOMappingParameter_mappedObject3 3
-#define OD_1617_4_RPDOMappingParameter_mappedObject4 4
-#define OD_1617_5_RPDOMappingParameter_mappedObject5 5
-#define OD_1617_6_RPDOMappingParameter_mappedObject6 6
-#define OD_1617_7_RPDOMappingParameter_mappedObject7 7
-#define OD_1617_8_RPDOMappingParameter_mappedObject8 8
-
-/*1618 */
-#define OD_1618_RPDOMappingParameter 0x1618
-
-#define OD_1618_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_1618_1_RPDOMappingParameter_mappedObject1 1
-#define OD_1618_2_RPDOMappingParameter_mappedObject2 2
-#define OD_1618_3_RPDOMappingParameter_mappedObject3 3
-#define OD_1618_4_RPDOMappingParameter_mappedObject4 4
-#define OD_1618_5_RPDOMappingParameter_mappedObject5 5
-#define OD_1618_6_RPDOMappingParameter_mappedObject6 6
-#define OD_1618_7_RPDOMappingParameter_mappedObject7 7
-#define OD_1618_8_RPDOMappingParameter_mappedObject8 8
-
-/*1619 */
-#define OD_1619_RPDOMappingParameter 0x1619
-
-#define OD_1619_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_1619_1_RPDOMappingParameter_mappedObject1 1
-#define OD_1619_2_RPDOMappingParameter_mappedObject2 2
-#define OD_1619_3_RPDOMappingParameter_mappedObject3 3
-#define OD_1619_4_RPDOMappingParameter_mappedObject4 4
-#define OD_1619_5_RPDOMappingParameter_mappedObject5 5
-#define OD_1619_6_RPDOMappingParameter_mappedObject6 6
-#define OD_1619_7_RPDOMappingParameter_mappedObject7 7
-#define OD_1619_8_RPDOMappingParameter_mappedObject8 8
-
-/*161a */
-#define OD_161a_RPDOMappingParameter 0x161a
-
-#define OD_161a_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_161a_1_RPDOMappingParameter_mappedObject1 1
-#define OD_161a_2_RPDOMappingParameter_mappedObject2 2
-#define OD_161a_3_RPDOMappingParameter_mappedObject3 3
-#define OD_161a_4_RPDOMappingParameter_mappedObject4 4
-#define OD_161a_5_RPDOMappingParameter_mappedObject5 5
-#define OD_161a_6_RPDOMappingParameter_mappedObject6 6
-#define OD_161a_7_RPDOMappingParameter_mappedObject7 7
-#define OD_161a_8_RPDOMappingParameter_mappedObject8 8
-
-/*161b */
-#define OD_161b_RPDOMappingParameter 0x161b
-
-#define OD_161b_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_161b_1_RPDOMappingParameter_mappedObject1 1
-#define OD_161b_2_RPDOMappingParameter_mappedObject2 2
-#define OD_161b_3_RPDOMappingParameter_mappedObject3 3
-#define OD_161b_4_RPDOMappingParameter_mappedObject4 4
-#define OD_161b_5_RPDOMappingParameter_mappedObject5 5
-#define OD_161b_6_RPDOMappingParameter_mappedObject6 6
-#define OD_161b_7_RPDOMappingParameter_mappedObject7 7
-#define OD_161b_8_RPDOMappingParameter_mappedObject8 8
-
-/*161c */
-#define OD_161c_RPDOMappingParameter 0x161c
-
-#define OD_161c_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_161c_1_RPDOMappingParameter_mappedObject1 1
-#define OD_161c_2_RPDOMappingParameter_mappedObject2 2
-#define OD_161c_3_RPDOMappingParameter_mappedObject3 3
-#define OD_161c_4_RPDOMappingParameter_mappedObject4 4
-#define OD_161c_5_RPDOMappingParameter_mappedObject5 5
-#define OD_161c_6_RPDOMappingParameter_mappedObject6 6
-#define OD_161c_7_RPDOMappingParameter_mappedObject7 7
-#define OD_161c_8_RPDOMappingParameter_mappedObject8 8
-
-/*161d */
-#define OD_161d_RPDOMappingParameter 0x161d
-
-#define OD_161d_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_161d_1_RPDOMappingParameter_mappedObject1 1
-#define OD_161d_2_RPDOMappingParameter_mappedObject2 2
-#define OD_161d_3_RPDOMappingParameter_mappedObject3 3
-#define OD_161d_4_RPDOMappingParameter_mappedObject4 4
-#define OD_161d_5_RPDOMappingParameter_mappedObject5 5
-#define OD_161d_6_RPDOMappingParameter_mappedObject6 6
-#define OD_161d_7_RPDOMappingParameter_mappedObject7 7
-#define OD_161d_8_RPDOMappingParameter_mappedObject8 8
-
-/*161e */
-#define OD_161e_RPDOMappingParameter 0x161e
-
-#define OD_161e_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_161e_1_RPDOMappingParameter_mappedObject1 1
-#define OD_161e_2_RPDOMappingParameter_mappedObject2 2
-#define OD_161e_3_RPDOMappingParameter_mappedObject3 3
-#define OD_161e_4_RPDOMappingParameter_mappedObject4 4
-#define OD_161e_5_RPDOMappingParameter_mappedObject5 5
-#define OD_161e_6_RPDOMappingParameter_mappedObject6 6
-#define OD_161e_7_RPDOMappingParameter_mappedObject7 7
-#define OD_161e_8_RPDOMappingParameter_mappedObject8 8
-
-/*161f */
-#define OD_161f_RPDOMappingParameter 0x161f
-
-#define OD_161f_0_RPDOMappingParameter_maxSubIndex 0
-#define OD_161f_1_RPDOMappingParameter_mappedObject1 1
-#define OD_161f_2_RPDOMappingParameter_mappedObject2 2
-#define OD_161f_3_RPDOMappingParameter_mappedObject3 3
-#define OD_161f_4_RPDOMappingParameter_mappedObject4 4
-#define OD_161f_5_RPDOMappingParameter_mappedObject5 5
-#define OD_161f_6_RPDOMappingParameter_mappedObject6 6
-#define OD_161f_7_RPDOMappingParameter_mappedObject7 7
-#define OD_161f_8_RPDOMappingParameter_mappedObject8 8
-
-/*1800 */
-#define OD_1800_TPDOCommunicationParameter 0x1800
-
-#define OD_1800_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_1800_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_1800_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_1800_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_1800_4_TPDOCommunicationParameter_compatibilityEntry 4
-#define OD_1800_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_1800_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1801 */
-#define OD_1801_TPDOCommunicationParameter 0x1801
-
-#define OD_1801_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_1801_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_1801_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_1801_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_1801_4_TPDOCommunicationParameter_compatibilityEntry 4
-#define OD_1801_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_1801_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1802 */
-#define OD_1802_TPDOCommunicationParameter 0x1802
-
-#define OD_1802_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_1802_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_1802_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_1802_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_1802_4_TPDOCommunicationParameter_compatibilityEntry 4
-#define OD_1802_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_1802_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1803 */
-#define OD_1803_TPDOCommunicationParameter 0x1803
-
-#define OD_1803_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_1803_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_1803_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_1803_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_1803_4_TPDOCommunicationParameter_compatibilityEntry 4
-#define OD_1803_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_1803_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1804 */
-#define OD_1804_TPDOCommunicationParameter 0x1804
-
-#define OD_1804_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_1804_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_1804_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_1804_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_1804_4_TPDOCommunicationParameter_compatibilityEntry 4
-#define OD_1804_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_1804_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1805 */
-#define OD_1805_TPDOCommunicationParameter 0x1805
-
-#define OD_1805_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_1805_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_1805_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_1805_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_1805_4_TPDOCommunicationParameter_compatibilityEntry 4
-#define OD_1805_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_1805_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1806 */
-#define OD_1806_TPDOCommunicationParameter 0x1806
-
-#define OD_1806_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_1806_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_1806_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_1806_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_1806_4_TPDOCommunicationParameter_compatibilityEntry 4
-#define OD_1806_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_1806_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1807 */
-#define OD_1807_TPDOCommunicationParameter 0x1807
-
-#define OD_1807_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_1807_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_1807_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_1807_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_1807_4_TPDOCommunicationParameter_compatibilityEntry 4
-#define OD_1807_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_1807_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1808 */
-#define OD_1808_TPDOCommunicationParameter 0x1808
-
-#define OD_1808_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_1808_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_1808_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_1808_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_1808_4_TPDOCommunicationParameter_compatibilityEntry 4
-#define OD_1808_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_1808_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1809 */
-#define OD_1809_TPDOCommunicationParameter 0x1809
-
-#define OD_1809_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_1809_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_1809_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_1809_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_1809_4_TPDOCommunicationParameter_compatibilityEntry 4
-#define OD_1809_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_1809_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*180a */
-#define OD_180a_TPDOCommunicationParameter 0x180a
-
-#define OD_180a_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_180a_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_180a_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_180a_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_180a_4_TPDOCommunicationParameter_compatibilityEntry 4
-#define OD_180a_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_180a_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*180b */
-#define OD_180b_TPDOCommunicationParameter 0x180b
-
-#define OD_180b_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_180b_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_180b_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_180b_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_180b_4_TPDOCommunicationParameter_compatibilityEntry 4
-#define OD_180b_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_180b_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*180c */
-#define OD_180c_TPDOCommunicationParameter 0x180c
-
-#define OD_180c_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_180c_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_180c_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_180c_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_180c_4_TPDOCommunicationParameter_compatibilityEntry 4
-#define OD_180c_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_180c_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*180d */
-#define OD_180d_TPDOCommunicationParameter 0x180d
-
-#define OD_180d_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_180d_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_180d_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_180d_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_180d_4_TPDOCommunicationParameter_compatibilityEntry 4
-#define OD_180d_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_180d_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*180e */
-#define OD_180e_TPDOCommunicationParameter 0x180e
-
-#define OD_180e_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_180e_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_180e_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_180e_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_180e_4_TPDOCommunicationParameter_compatibilityEntry 4
-#define OD_180e_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_180e_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*180f */
-#define OD_180f_TPDOCommunicationParameter 0x180f
-
-#define OD_180f_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_180f_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_180f_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_180f_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_180f_4_TPDOCommunicationParameter_compatibilityEntry 4
-#define OD_180f_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_180f_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1810 */
-#define OD_1810_TPDOCommunicationParameter 0x1810
-
-#define OD_1810_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_1810_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_1810_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_1810_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_1810_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_1810_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1811 */
-#define OD_1811_TPDOCommunicationParameter 0x1811
-
-#define OD_1811_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_1811_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_1811_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_1811_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_1811_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_1811_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1812 */
-#define OD_1812_TPDOCommunicationParameter 0x1812
-
-#define OD_1812_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_1812_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_1812_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_1812_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_1812_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_1812_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1813 */
-#define OD_1813_TPDOCommunicationParameter 0x1813
-
-#define OD_1813_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_1813_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_1813_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_1813_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_1813_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_1813_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1814 */
-#define OD_1814_TPDOCommunicationParameter 0x1814
-
-#define OD_1814_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_1814_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_1814_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_1814_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_1814_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_1814_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1815 */
-#define OD_1815_TPDOCommunicationParameter 0x1815
-
-#define OD_1815_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_1815_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_1815_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_1815_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_1815_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_1815_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1816 */
-#define OD_1816_TPDOCommunicationParameter 0x1816
-
-#define OD_1816_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_1816_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_1816_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_1816_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_1816_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_1816_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1817 */
-#define OD_1817_TPDOCommunicationParameter 0x1817
-
-#define OD_1817_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_1817_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_1817_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_1817_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_1817_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_1817_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1818 */
-#define OD_1818_TPDOCommunicationParameter 0x1818
-
-#define OD_1818_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_1818_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_1818_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_1818_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_1818_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_1818_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1819 */
-#define OD_1819_TPDOCommunicationParameter 0x1819
-
-#define OD_1819_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_1819_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_1819_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_1819_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_1819_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_1819_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*181a */
-#define OD_181a_TPDOCommunicationParameter 0x181a
-
-#define OD_181a_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_181a_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_181a_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_181a_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_181a_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_181a_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*181b */
-#define OD_181b_TPDOCommunicationParameter 0x181b
-
-#define OD_181b_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_181b_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_181b_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_181b_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_181b_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_181b_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*181c */
-#define OD_181c_TPDOCommunicationParameter 0x181c
-
-#define OD_181c_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_181c_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_181c_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_181c_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_181c_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_181c_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*181d */
-#define OD_181d_TPDOCommunicationParameter 0x181d
-
-#define OD_181d_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_181d_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_181d_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_181d_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_181d_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_181d_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*181e */
-#define OD_181e_TPDOCommunicationParameter 0x181e
-
-#define OD_181e_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_181e_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_181e_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_181e_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_181e_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_181e_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*181f */
-#define OD_181f_TPDOCommunicationParameter 0x181f
-
-#define OD_181f_0_TPDOCommunicationParameter_maxSubIndex 0
-#define OD_181f_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-#define OD_181f_2_TPDOCommunicationParameter_transmissionType 2
-#define OD_181f_3_TPDOCommunicationParameter_inhibitTime 3
-#define OD_181f_5_TPDOCommunicationParameter_eventTimer 5
-#define OD_181f_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1a00 */
-#define OD_1a00_TPDOMappingParameter 0x1a00
-
-#define OD_1a00_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a00_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a00_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a00_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a00_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a00_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a00_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a00_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a00_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a01 */
-#define OD_1a01_TPDOMappingParameter 0x1a01
-
-#define OD_1a01_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a01_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a01_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a01_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a01_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a01_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a01_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a01_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a01_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a02 */
-#define OD_1a02_TPDOMappingParameter 0x1a02
-
-#define OD_1a02_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a02_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a02_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a02_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a02_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a02_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a02_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a02_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a02_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a03 */
-#define OD_1a03_TPDOMappingParameter 0x1a03
-
-#define OD_1a03_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a03_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a03_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a03_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a03_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a03_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a03_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a03_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a03_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a04 */
-#define OD_1a04_TPDOMappingParameter 0x1a04
-
-#define OD_1a04_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a04_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a04_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a04_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a04_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a04_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a04_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a04_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a04_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a05 */
-#define OD_1a05_TPDOMappingParameter 0x1a05
-
-#define OD_1a05_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a05_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a05_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a05_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a05_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a05_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a05_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a05_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a05_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a06 */
-#define OD_1a06_TPDOMappingParameter 0x1a06
-
-#define OD_1a06_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a06_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a06_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a06_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a06_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a06_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a06_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a06_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a06_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a07 */
-#define OD_1a07_TPDOMappingParameter 0x1a07
-
-#define OD_1a07_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a07_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a07_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a07_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a07_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a07_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a07_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a07_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a07_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a08 */
-#define OD_1a08_TPDOMappingParameter 0x1a08
-
-#define OD_1a08_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a08_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a08_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a08_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a08_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a08_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a08_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a08_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a08_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a09 */
-#define OD_1a09_TPDOMappingParameter 0x1a09
-
-#define OD_1a09_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a09_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a09_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a09_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a09_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a09_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a09_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a09_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a09_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a0a */
-#define OD_1a0a_TPDOMappingParameter 0x1a0a
-
-#define OD_1a0a_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a0a_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a0a_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a0a_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a0a_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a0a_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a0a_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a0a_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a0a_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a0b */
-#define OD_1a0b_TPDOMappingParameter 0x1a0b
-
-#define OD_1a0b_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a0b_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a0b_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a0b_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a0b_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a0b_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a0b_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a0b_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a0b_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a0c */
-#define OD_1a0c_TPDOMappingParameter 0x1a0c
-
-#define OD_1a0c_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a0c_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a0c_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a0c_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a0c_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a0c_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a0c_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a0c_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a0c_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a0d */
-#define OD_1a0d_TPDOMappingParameter 0x1a0d
-
-#define OD_1a0d_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a0d_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a0d_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a0d_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a0d_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a0d_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a0d_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a0d_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a0d_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a0e */
-#define OD_1a0e_TPDOMappingParameter 0x1a0e
-
-#define OD_1a0e_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a0e_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a0e_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a0e_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a0e_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a0e_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a0e_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a0e_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a0e_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a0f */
-#define OD_1a0f_TPDOMappingParameter 0x1a0f
-
-#define OD_1a0f_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a0f_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a0f_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a0f_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a0f_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a0f_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a0f_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a0f_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a0f_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a10 */
-#define OD_1a10_TPDOMappingParameter 0x1a10
-
-#define OD_1a10_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a10_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a10_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a10_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a10_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a10_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a10_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a10_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a10_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a11 */
-#define OD_1a11_TPDOMappingParameter 0x1a11
-
-#define OD_1a11_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a11_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a11_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a11_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a11_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a11_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a11_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a11_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a11_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a12 */
-#define OD_1a12_TPDOMappingParameter 0x1a12
-
-#define OD_1a12_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a12_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a12_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a12_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a12_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a12_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a12_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a12_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a12_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a13 */
-#define OD_1a13_TPDOMappingParameter 0x1a13
-
-#define OD_1a13_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a13_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a13_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a13_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a13_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a13_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a13_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a13_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a13_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a14 */
-#define OD_1a14_TPDOMappingParameter 0x1a14
-
-#define OD_1a14_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a14_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a14_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a14_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a14_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a14_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a14_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a14_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a14_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a15 */
-#define OD_1a15_TPDOMappingParameter 0x1a15
-
-#define OD_1a15_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a15_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a15_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a15_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a15_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a15_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a15_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a15_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a15_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a16 */
-#define OD_1a16_TPDOMappingParameter 0x1a16
-
-#define OD_1a16_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a16_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a16_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a16_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a16_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a16_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a16_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a16_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a16_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a17 */
-#define OD_1a17_TPDOMappingParameter 0x1a17
-
-#define OD_1a17_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a17_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a17_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a17_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a17_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a17_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a17_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a17_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a17_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a18 */
-#define OD_1a18_TPDOMappingParameter 0x1a18
-
-#define OD_1a18_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a18_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a18_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a18_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a18_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a18_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a18_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a18_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a18_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a19 */
-#define OD_1a19_TPDOMappingParameter 0x1a19
-
-#define OD_1a19_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a19_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a19_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a19_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a19_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a19_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a19_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a19_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a19_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a1a */
-#define OD_1a1a_TPDOMappingParameter 0x1a1a
-
-#define OD_1a1a_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a1a_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a1a_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a1a_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a1a_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a1a_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a1a_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a1a_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a1a_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a1b */
-#define OD_1a1b_TPDOMappingParameter 0x1a1b
-
-#define OD_1a1b_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a1b_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a1b_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a1b_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a1b_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a1b_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a1b_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a1b_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a1b_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a1c */
-#define OD_1a1c_TPDOMappingParameter 0x1a1c
-
-#define OD_1a1c_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a1c_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a1c_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a1c_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a1c_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a1c_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a1c_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a1c_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a1c_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a1d */
-#define OD_1a1d_TPDOMappingParameter 0x1a1d
-
-#define OD_1a1d_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a1d_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a1d_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a1d_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a1d_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a1d_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a1d_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a1d_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a1d_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a1e */
-#define OD_1a1e_TPDOMappingParameter 0x1a1e
-
-#define OD_1a1e_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a1e_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a1e_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a1e_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a1e_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a1e_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a1e_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a1e_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a1e_8_TPDOMappingParameter_mappedObject8 8
-
-/*1a1f */
-#define OD_1a1f_TPDOMappingParameter 0x1a1f
-
-#define OD_1a1f_0_TPDOMappingParameter_maxSubIndex 0
-#define OD_1a1f_1_TPDOMappingParameter_mappedObject1 1
-#define OD_1a1f_2_TPDOMappingParameter_mappedObject2 2
-#define OD_1a1f_3_TPDOMappingParameter_mappedObject3 3
-#define OD_1a1f_4_TPDOMappingParameter_mappedObject4 4
-#define OD_1a1f_5_TPDOMappingParameter_mappedObject5 5
-#define OD_1a1f_6_TPDOMappingParameter_mappedObject6 6
-#define OD_1a1f_7_TPDOMappingParameter_mappedObject7 7
-#define OD_1a1f_8_TPDOMappingParameter_mappedObject8 8
-
-/*1f80 */
-#define OD_1f80_NMTStartup 0x1f80
-
-/*1f81 */
-#define OD_1f81_slaveAssignment 0x1f81
-
-#define OD_1f81_0_slaveAssignment_maxSubIndex 0
-#define OD_1f81_1_slaveAssignment_ 1
-#define OD_1f81_2_slaveAssignment_ 2
-#define OD_1f81_3_slaveAssignment_ 3
-#define OD_1f81_4_slaveAssignment_ 4
-#define OD_1f81_5_slaveAssignment_ 5
-#define OD_1f81_6_slaveAssignment_ 6
-#define OD_1f81_7_slaveAssignment_ 7
-#define OD_1f81_8_slaveAssignment_ 8
-#define OD_1f81_9_slaveAssignment_ 9
-#define OD_1f81_10_slaveAssignment_ 10
-#define OD_1f81_11_slaveAssignment_ 11
-#define OD_1f81_12_slaveAssignment_ 12
-#define OD_1f81_13_slaveAssignment_ 13
-#define OD_1f81_14_slaveAssignment_ 14
-#define OD_1f81_15_slaveAssignment_ 15
-#define OD_1f81_16_slaveAssignment_ 16
-#define OD_1f81_17_slaveAssignment_ 17
-#define OD_1f81_18_slaveAssignment_ 18
-#define OD_1f81_19_slaveAssignment_ 19
-#define OD_1f81_20_slaveAssignment_ 20
-#define OD_1f81_21_slaveAssignment_ 21
-#define OD_1f81_22_slaveAssignment_ 22
-#define OD_1f81_23_slaveAssignment_ 23
-#define OD_1f81_24_slaveAssignment_ 24
-#define OD_1f81_25_slaveAssignment_ 25
-#define OD_1f81_26_slaveAssignment_ 26
-#define OD_1f81_27_slaveAssignment_ 27
-#define OD_1f81_28_slaveAssignment_ 28
-#define OD_1f81_29_slaveAssignment_ 29
-#define OD_1f81_30_slaveAssignment_ 30
-#define OD_1f81_31_slaveAssignment_ 31
-#define OD_1f81_32_slaveAssignment_ 32
-#define OD_1f81_33_slaveAssignment_ 33
-#define OD_1f81_34_slaveAssignment_ 34
-#define OD_1f81_35_slaveAssignment_ 35
-#define OD_1f81_36_slaveAssignment_ 36
-#define OD_1f81_37_slaveAssignment_ 37
-#define OD_1f81_38_slaveAssignment_ 38
-#define OD_1f81_39_slaveAssignment_ 39
-#define OD_1f81_40_slaveAssignment_ 40
-#define OD_1f81_41_slaveAssignment_ 41
-#define OD_1f81_42_slaveAssignment_ 42
-#define OD_1f81_43_slaveAssignment_ 43
-#define OD_1f81_44_slaveAssignment_ 44
-#define OD_1f81_45_slaveAssignment_ 45
-#define OD_1f81_46_slaveAssignment_ 46
-#define OD_1f81_47_slaveAssignment_ 47
-#define OD_1f81_48_slaveAssignment_ 48
-#define OD_1f81_49_slaveAssignment_ 49
-#define OD_1f81_50_slaveAssignment_ 50
-#define OD_1f81_51_slaveAssignment_ 51
-#define OD_1f81_52_slaveAssignment_ 52
-#define OD_1f81_53_slaveAssignment_ 53
-#define OD_1f81_54_slaveAssignment_ 54
-#define OD_1f81_55_slaveAssignment_ 55
-#define OD_1f81_56_slaveAssignment_ 56
-#define OD_1f81_57_slaveAssignment_ 57
-#define OD_1f81_58_slaveAssignment_ 58
-#define OD_1f81_59_slaveAssignment_ 59
-#define OD_1f81_60_slaveAssignment_ 60
-#define OD_1f81_61_slaveAssignment_ 61
-#define OD_1f81_62_slaveAssignment_ 62
-#define OD_1f81_63_slaveAssignment_ 63
-#define OD_1f81_64_slaveAssignment_ 64
-#define OD_1f81_65_slaveAssignment_ 65
-#define OD_1f81_66_slaveAssignment_ 66
-#define OD_1f81_67_slaveAssignment_ 67
-#define OD_1f81_68_slaveAssignment_ 68
-#define OD_1f81_69_slaveAssignment_ 69
-#define OD_1f81_70_slaveAssignment_ 70
-#define OD_1f81_71_slaveAssignment_ 71
-#define OD_1f81_72_slaveAssignment_ 72
-#define OD_1f81_73_slaveAssignment_ 73
-#define OD_1f81_74_slaveAssignment_ 74
-#define OD_1f81_75_slaveAssignment_ 75
-#define OD_1f81_76_slaveAssignment_ 76
-#define OD_1f81_77_slaveAssignment_ 77
-#define OD_1f81_78_slaveAssignment_ 78
-#define OD_1f81_79_slaveAssignment_ 79
-#define OD_1f81_80_slaveAssignment_ 80
-#define OD_1f81_81_slaveAssignment_ 81
-#define OD_1f81_82_slaveAssignment_ 82
-#define OD_1f81_83_slaveAssignment_ 83
-#define OD_1f81_84_slaveAssignment_ 84
-#define OD_1f81_85_slaveAssignment_ 85
-#define OD_1f81_86_slaveAssignment_ 86
-#define OD_1f81_87_slaveAssignment_ 87
-#define OD_1f81_88_slaveAssignment_ 88
-#define OD_1f81_89_slaveAssignment_ 89
-#define OD_1f81_90_slaveAssignment_ 90
-#define OD_1f81_91_slaveAssignment_ 91
-#define OD_1f81_92_slaveAssignment_ 92
-#define OD_1f81_93_slaveAssignment_ 93
-#define OD_1f81_94_slaveAssignment_ 94
-#define OD_1f81_95_slaveAssignment_ 95
-#define OD_1f81_96_slaveAssignment_ 96
-#define OD_1f81_97_slaveAssignment_ 97
-#define OD_1f81_98_slaveAssignment_ 98
-#define OD_1f81_99_slaveAssignment_ 99
-#define OD_1f81_100_slaveAssignment_ 100
-#define OD_1f81_101_slaveAssignment_ 101
-#define OD_1f81_102_slaveAssignment_ 102
-#define OD_1f81_103_slaveAssignment_ 103
-#define OD_1f81_104_slaveAssignment_ 104
-#define OD_1f81_105_slaveAssignment_ 105
-#define OD_1f81_106_slaveAssignment_ 106
-#define OD_1f81_107_slaveAssignment_ 107
-#define OD_1f81_108_slaveAssignment_ 108
-#define OD_1f81_109_slaveAssignment_ 109
-#define OD_1f81_110_slaveAssignment_ 110
-#define OD_1f81_111_slaveAssignment_ 111
-#define OD_1f81_112_slaveAssignment_ 112
-#define OD_1f81_113_slaveAssignment_ 113
-#define OD_1f81_114_slaveAssignment_ 114
-#define OD_1f81_115_slaveAssignment_ 115
-#define OD_1f81_116_slaveAssignment_ 116
-#define OD_1f81_117_slaveAssignment_ 117
-#define OD_1f81_118_slaveAssignment_ 118
-#define OD_1f81_119_slaveAssignment_ 119
-#define OD_1f81_120_slaveAssignment_ 120
-#define OD_1f81_121_slaveAssignment_ 121
-#define OD_1f81_122_slaveAssignment_ 122
-#define OD_1f81_123_slaveAssignment_ 123
-#define OD_1f81_124_slaveAssignment_ 124
-#define OD_1f81_125_slaveAssignment_ 125
-#define OD_1f81_126_slaveAssignment_ 126
-#define OD_1f81_127_slaveAssignment_ 127
-
-/*1f82 */
-#define OD_1f82_requestNMT 0x1f82
-
-#define OD_1f82_0_requestNMT_maxSubIndex 0
-#define OD_1f82_1_requestNMT_ 1
-#define OD_1f82_2_requestNMT_ 2
-#define OD_1f82_3_requestNMT_ 3
-#define OD_1f82_4_requestNMT_ 4
-#define OD_1f82_5_requestNMT_ 5
-#define OD_1f82_6_requestNMT_ 6
-#define OD_1f82_7_requestNMT_ 7
-#define OD_1f82_8_requestNMT_ 8
-#define OD_1f82_9_requestNMT_ 9
-#define OD_1f82_10_requestNMT_ 10
-#define OD_1f82_11_requestNMT_ 11
-#define OD_1f82_12_requestNMT_ 12
-#define OD_1f82_13_requestNMT_ 13
-#define OD_1f82_14_requestNMT_ 14
-#define OD_1f82_15_requestNMT_ 15
-#define OD_1f82_16_requestNMT_ 16
-#define OD_1f82_17_requestNMT_ 17
-#define OD_1f82_18_requestNMT_ 18
-#define OD_1f82_19_requestNMT_ 19
-#define OD_1f82_20_requestNMT_ 20
-#define OD_1f82_21_requestNMT_ 21
-#define OD_1f82_22_requestNMT_ 22
-#define OD_1f82_23_requestNMT_ 23
-#define OD_1f82_24_requestNMT_ 24
-#define OD_1f82_25_requestNMT_ 25
-#define OD_1f82_26_requestNMT_ 26
-#define OD_1f82_27_requestNMT_ 27
-#define OD_1f82_28_requestNMT_ 28
-#define OD_1f82_29_requestNMT_ 29
-#define OD_1f82_30_requestNMT_ 30
-#define OD_1f82_31_requestNMT_ 31
-#define OD_1f82_32_requestNMT_ 32
-#define OD_1f82_33_requestNMT_ 33
-#define OD_1f82_34_requestNMT_ 34
-#define OD_1f82_35_requestNMT_ 35
-#define OD_1f82_36_requestNMT_ 36
-#define OD_1f82_37_requestNMT_ 37
-#define OD_1f82_38_requestNMT_ 38
-#define OD_1f82_39_requestNMT_ 39
-#define OD_1f82_40_requestNMT_ 40
-#define OD_1f82_41_requestNMT_ 41
-#define OD_1f82_42_requestNMT_ 42
-#define OD_1f82_43_requestNMT_ 43
-#define OD_1f82_44_requestNMT_ 44
-#define OD_1f82_45_requestNMT_ 45
-#define OD_1f82_46_requestNMT_ 46
-#define OD_1f82_47_requestNMT_ 47
-#define OD_1f82_48_requestNMT_ 48
-#define OD_1f82_49_requestNMT_ 49
-#define OD_1f82_50_requestNMT_ 50
-#define OD_1f82_51_requestNMT_ 51
-#define OD_1f82_52_requestNMT_ 52
-#define OD_1f82_53_requestNMT_ 53
-#define OD_1f82_54_requestNMT_ 54
-#define OD_1f82_55_requestNMT_ 55
-#define OD_1f82_56_requestNMT_ 56
-#define OD_1f82_57_requestNMT_ 57
-#define OD_1f82_58_requestNMT_ 58
-#define OD_1f82_59_requestNMT_ 59
-#define OD_1f82_60_requestNMT_ 60
-#define OD_1f82_61_requestNMT_ 61
-#define OD_1f82_62_requestNMT_ 62
-#define OD_1f82_63_requestNMT_ 63
-#define OD_1f82_64_requestNMT_ 64
-#define OD_1f82_65_requestNMT_ 65
-#define OD_1f82_66_requestNMT_ 66
-#define OD_1f82_67_requestNMT_ 67
-#define OD_1f82_68_requestNMT_ 68
-#define OD_1f82_69_requestNMT_ 69
-#define OD_1f82_70_requestNMT_ 70
-#define OD_1f82_71_requestNMT_ 71
-#define OD_1f82_72_requestNMT_ 72
-#define OD_1f82_73_requestNMT_ 73
-#define OD_1f82_74_requestNMT_ 74
-#define OD_1f82_75_requestNMT_ 75
-#define OD_1f82_76_requestNMT_ 76
-#define OD_1f82_77_requestNMT_ 77
-#define OD_1f82_78_requestNMT_ 78
-#define OD_1f82_79_requestNMT_ 79
-#define OD_1f82_80_requestNMT_ 80
-#define OD_1f82_81_requestNMT_ 81
-#define OD_1f82_82_requestNMT_ 82
-#define OD_1f82_83_requestNMT_ 83
-#define OD_1f82_84_requestNMT_ 84
-#define OD_1f82_85_requestNMT_ 85
-#define OD_1f82_86_requestNMT_ 86
-#define OD_1f82_87_requestNMT_ 87
-#define OD_1f82_88_requestNMT_ 88
-#define OD_1f82_89_requestNMT_ 89
-#define OD_1f82_90_requestNMT_ 90
-#define OD_1f82_91_requestNMT_ 91
-#define OD_1f82_92_requestNMT_ 92
-#define OD_1f82_93_requestNMT_ 93
-#define OD_1f82_94_requestNMT_ 94
-#define OD_1f82_95_requestNMT_ 95
-#define OD_1f82_96_requestNMT_ 96
-#define OD_1f82_97_requestNMT_ 97
-#define OD_1f82_98_requestNMT_ 98
-#define OD_1f82_99_requestNMT_ 99
-#define OD_1f82_100_requestNMT_ 100
-#define OD_1f82_101_requestNMT_ 101
-#define OD_1f82_102_requestNMT_ 102
-#define OD_1f82_103_requestNMT_ 103
-#define OD_1f82_104_requestNMT_ 104
-#define OD_1f82_105_requestNMT_ 105
-#define OD_1f82_106_requestNMT_ 106
-#define OD_1f82_107_requestNMT_ 107
-#define OD_1f82_108_requestNMT_ 108
-#define OD_1f82_109_requestNMT_ 109
-#define OD_1f82_110_requestNMT_ 110
-#define OD_1f82_111_requestNMT_ 111
-#define OD_1f82_112_requestNMT_ 112
-#define OD_1f82_113_requestNMT_ 113
-#define OD_1f82_114_requestNMT_ 114
-#define OD_1f82_115_requestNMT_ 115
-#define OD_1f82_116_requestNMT_ 116
-#define OD_1f82_117_requestNMT_ 117
-#define OD_1f82_118_requestNMT_ 118
-#define OD_1f82_119_requestNMT_ 119
-#define OD_1f82_120_requestNMT_ 120
-#define OD_1f82_121_requestNMT_ 121
-#define OD_1f82_122_requestNMT_ 122
-#define OD_1f82_123_requestNMT_ 123
-#define OD_1f82_124_requestNMT_ 124
-#define OD_1f82_125_requestNMT_ 125
-#define OD_1f82_126_requestNMT_ 126
-#define OD_1f82_127_requestNMT_ 127
-
-/*1f89 */
-#define OD_1f89_bootTime 0x1f89
-
-/*2100 */
-#define OD_2100_errorStatusBits 0x2100
-
-/*2101 */
-#define OD_2101_CANNodeID 0x2101
-
-/*2102 */
-#define OD_2102_CANBitRate 0x2102
-
-/*2103 */
-#define OD_2103_SYNCCounter 0x2103
-
-/*2104 */
-#define OD_2104_SYNCTime 0x2104
-
-/*2106 */
-#define OD_2106_powerOnCounter 0x2106
-
-/*2107 */
-#define OD_2107_performance 0x2107
-
-#define OD_2107_0_performance_maxSubIndex 0
-#define OD_2107_1_performance_cyclesPerSecond 1
-#define OD_2107_2_performance_timerCycleTime 2
-#define OD_2107_3_performance_timerCycleMaxTime 3
-#define OD_2107_4_performance_mainCycleTime 4
-#define OD_2107_5_performance_mainCycleMaxTime 5
-
-/*2108 */
-#define OD_2108_temperature 0x2108
-
-#define OD_2108_0_temperature_maxSubIndex 0
-#define OD_2108_1_temperature_mainPCB 1
-
-/*2109 */
-#define OD_2109_voltage 0x2109
-
-#define OD_2109_0_voltage_maxSubIndex 0
-#define OD_2109_1_voltage_mainPCBSupply 1
-
-/*2110 */
-#define OD_2110_variableInt32 0x2110
-
-#define OD_2110_0_variableInt32_maxSubIndex 0
-#define OD_2110_1_variableInt32_int32 1
-#define OD_2110_2_variableInt32_int32 2
-#define OD_2110_3_variableInt32_int32 3
-#define OD_2110_4_variableInt32_int32 4
-#define OD_2110_5_variableInt32_int32 5
-#define OD_2110_6_variableInt32_int32 6
-#define OD_2110_7_variableInt32_int32 7
-#define OD_2110_8_variableInt32_int32 8
-#define OD_2110_9_variableInt32_int32 9
-#define OD_2110_10_variableInt32_int32 10
-#define OD_2110_11_variableInt32_int32 11
-#define OD_2110_12_variableInt32_int32 12
-#define OD_2110_13_variableInt32_int32 13
-#define OD_2110_14_variableInt32_int32 14
-#define OD_2110_15_variableInt32_int32 15
-#define OD_2110_16_variableInt32_int32 16
-#define OD_2110_17_variableInt32_int32 17
-#define OD_2110_18_variableInt32_int32 18
-#define OD_2110_19_variableInt32_int32 19
-#define OD_2110_20_variableInt32_int32 20
-#define OD_2110_21_variableInt32_int32 21
-#define OD_2110_22_variableInt32_int32 22
-#define OD_2110_23_variableInt32_int32 23
-#define OD_2110_24_variableInt32_int32 24
-#define OD_2110_25_variableInt32_int32 25
-#define OD_2110_26_variableInt32_int32 26
-#define OD_2110_27_variableInt32_int32 27
-#define OD_2110_28_variableInt32_int32 28
-#define OD_2110_29_variableInt32_int32 29
-#define OD_2110_30_variableInt32_int32 30
-#define OD_2110_31_variableInt32_int32 31
-#define OD_2110_32_variableInt32_int32 32
-
-/*2111 */
-#define OD_2111_variableROM_Int32 0x2111
-
-#define OD_2111_0_variableROM_Int32_maxSubIndex 0
-#define OD_2111_1_variableROM_Int32_int32 1
-#define OD_2111_2_variableROM_Int32_int32 2
-#define OD_2111_3_variableROM_Int32_int32 3
-#define OD_2111_4_variableROM_Int32_int32 4
-#define OD_2111_5_variableROM_Int32_int32 5
-#define OD_2111_6_variableROM_Int32_int32 6
-#define OD_2111_7_variableROM_Int32_int32 7
-#define OD_2111_8_variableROM_Int32_int32 8
-#define OD_2111_9_variableROM_Int32_int32 9
-#define OD_2111_10_variableROM_Int32_int32 10
-#define OD_2111_11_variableROM_Int32_int32 11
-#define OD_2111_12_variableROM_Int32_int32 12
-#define OD_2111_13_variableROM_Int32_int32 13
-#define OD_2111_14_variableROM_Int32_int32 14
-#define OD_2111_15_variableROM_Int32_int32 15
-#define OD_2111_16_variableROM_Int32_int32 16
-
-/*2112 */
-#define OD_2112_variableNV_Int32 0x2112
-
-#define OD_2112_0_variableNV_Int32_maxSubIndex 0
-#define OD_2112_1_variableNV_Int32_int32 1
-#define OD_2112_2_variableNV_Int32_int32 2
-#define OD_2112_3_variableNV_Int32_int32 3
-#define OD_2112_4_variableNV_Int32_int32 4
-#define OD_2112_5_variableNV_Int32_int32 5
-#define OD_2112_6_variableNV_Int32_int32 6
-#define OD_2112_7_variableNV_Int32_int32 7
-#define OD_2112_8_variableNV_Int32_int32 8
-#define OD_2112_9_variableNV_Int32_int32 9
-#define OD_2112_10_variableNV_Int32_int32 10
-#define OD_2112_11_variableNV_Int32_int32 11
-#define OD_2112_12_variableNV_Int32_int32 12
-#define OD_2112_13_variableNV_Int32_int32 13
-#define OD_2112_14_variableNV_Int32_int32 14
-#define OD_2112_15_variableNV_Int32_int32 15
-#define OD_2112_16_variableNV_Int32_int32 16
-
-/*2120 */
-#define OD_2120_testVar 0x2120
-
-#define OD_2120_0_testVar_maxSubIndex 0
-#define OD_2120_1_testVar_I64 1
-#define OD_2120_2_testVar_U64 2
-#define OD_2120_3_testVar_R32 3
-#define OD_2120_4_testVar_R64 4
-#define OD_2120_5_testVar_domain 5
-
-/*2130 */
-#define OD_2130_time 0x2130
-
-#define OD_2130_0_time_maxSubIndex 0
-#define OD_2130_1_time_string 1
-#define OD_2130_2_time_epochTimeBaseMs 2
-#define OD_2130_3_time_epochTimeOffsetMs 3
-
-/*2301 */
-#define OD_2301_traceConfig 0x2301
-
-#define OD_2301_0_traceConfig_maxSubIndex 0
-#define OD_2301_1_traceConfig_size 1
-#define OD_2301_2_traceConfig_axisNo 2
-#define OD_2301_3_traceConfig_name 3
-#define OD_2301_4_traceConfig_color 4
-#define OD_2301_5_traceConfig_map 5
-#define OD_2301_6_traceConfig_format 6
-#define OD_2301_7_traceConfig_trigger 7
-#define OD_2301_8_traceConfig_threshold 8
-
-/*2302 */
-#define OD_2302_traceConfig 0x2302
-
-#define OD_2302_0_traceConfig_maxSubIndex 0
-#define OD_2302_1_traceConfig_size 1
-#define OD_2302_2_traceConfig_axisNo 2
-#define OD_2302_3_traceConfig_name 3
-#define OD_2302_4_traceConfig_color 4
-#define OD_2302_5_traceConfig_map 5
-#define OD_2302_6_traceConfig_format 6
-#define OD_2302_7_traceConfig_trigger 7
-#define OD_2302_8_traceConfig_threshold 8
-
-/*2303 */
-#define OD_2303_traceConfig 0x2303
-
-#define OD_2303_0_traceConfig_maxSubIndex 0
-#define OD_2303_1_traceConfig_size 1
-#define OD_2303_2_traceConfig_axisNo 2
-#define OD_2303_3_traceConfig_name 3
-#define OD_2303_4_traceConfig_color 4
-#define OD_2303_5_traceConfig_map 5
-#define OD_2303_6_traceConfig_format 6
-#define OD_2303_7_traceConfig_trigger 7
-#define OD_2303_8_traceConfig_threshold 8
-
-/*2304 */
-#define OD_2304_traceConfig 0x2304
-
-#define OD_2304_0_traceConfig_maxSubIndex 0
-#define OD_2304_1_traceConfig_size 1
-#define OD_2304_2_traceConfig_axisNo 2
-#define OD_2304_3_traceConfig_name 3
-#define OD_2304_4_traceConfig_color 4
-#define OD_2304_5_traceConfig_map 5
-#define OD_2304_6_traceConfig_format 6
-#define OD_2304_7_traceConfig_trigger 7
-#define OD_2304_8_traceConfig_threshold 8
-
-/*2305 */
-#define OD_2305_traceConfig 0x2305
-
-#define OD_2305_0_traceConfig_maxSubIndex 0
-#define OD_2305_1_traceConfig_size 1
-#define OD_2305_2_traceConfig_axisNo 2
-#define OD_2305_3_traceConfig_name 3
-#define OD_2305_4_traceConfig_color 4
-#define OD_2305_5_traceConfig_map 5
-#define OD_2305_6_traceConfig_format 6
-#define OD_2305_7_traceConfig_trigger 7
-#define OD_2305_8_traceConfig_threshold 8
-
-/*2306 */
-#define OD_2306_traceConfig 0x2306
-
-#define OD_2306_0_traceConfig_maxSubIndex 0
-#define OD_2306_1_traceConfig_size 1
-#define OD_2306_2_traceConfig_axisNo 2
-#define OD_2306_3_traceConfig_name 3
-#define OD_2306_4_traceConfig_color 4
-#define OD_2306_5_traceConfig_map 5
-#define OD_2306_6_traceConfig_format 6
-#define OD_2306_7_traceConfig_trigger 7
-#define OD_2306_8_traceConfig_threshold 8
-
-/*2307 */
-#define OD_2307_traceConfig 0x2307
-
-#define OD_2307_0_traceConfig_maxSubIndex 0
-#define OD_2307_1_traceConfig_size 1
-#define OD_2307_2_traceConfig_axisNo 2
-#define OD_2307_3_traceConfig_name 3
-#define OD_2307_4_traceConfig_color 4
-#define OD_2307_5_traceConfig_map 5
-#define OD_2307_6_traceConfig_format 6
-#define OD_2307_7_traceConfig_trigger 7
-#define OD_2307_8_traceConfig_threshold 8
-
-/*2308 */
-#define OD_2308_traceConfig 0x2308
-
-#define OD_2308_0_traceConfig_maxSubIndex 0
-#define OD_2308_1_traceConfig_size 1
-#define OD_2308_2_traceConfig_axisNo 2
-#define OD_2308_3_traceConfig_name 3
-#define OD_2308_4_traceConfig_color 4
-#define OD_2308_5_traceConfig_map 5
-#define OD_2308_6_traceConfig_format 6
-#define OD_2308_7_traceConfig_trigger 7
-#define OD_2308_8_traceConfig_threshold 8
-
-/*2309 */
-#define OD_2309_traceConfig 0x2309
-
-#define OD_2309_0_traceConfig_maxSubIndex 0
-#define OD_2309_1_traceConfig_size 1
-#define OD_2309_2_traceConfig_axisNo 2
-#define OD_2309_3_traceConfig_name 3
-#define OD_2309_4_traceConfig_color 4
-#define OD_2309_5_traceConfig_map 5
-#define OD_2309_6_traceConfig_format 6
-#define OD_2309_7_traceConfig_trigger 7
-#define OD_2309_8_traceConfig_threshold 8
-
-/*230a */
-#define OD_230a_traceConfig 0x230a
-
-#define OD_230a_0_traceConfig_maxSubIndex 0
-#define OD_230a_1_traceConfig_size 1
-#define OD_230a_2_traceConfig_axisNo 2
-#define OD_230a_3_traceConfig_name 3
-#define OD_230a_4_traceConfig_color 4
-#define OD_230a_5_traceConfig_map 5
-#define OD_230a_6_traceConfig_format 6
-#define OD_230a_7_traceConfig_trigger 7
-#define OD_230a_8_traceConfig_threshold 8
-
-/*230b */
-#define OD_230b_traceConfig 0x230b
-
-#define OD_230b_0_traceConfig_maxSubIndex 0
-#define OD_230b_1_traceConfig_size 1
-#define OD_230b_2_traceConfig_axisNo 2
-#define OD_230b_3_traceConfig_name 3
-#define OD_230b_4_traceConfig_color 4
-#define OD_230b_5_traceConfig_map 5
-#define OD_230b_6_traceConfig_format 6
-#define OD_230b_7_traceConfig_trigger 7
-#define OD_230b_8_traceConfig_threshold 8
-
-/*230c */
-#define OD_230c_traceConfig 0x230c
-
-#define OD_230c_0_traceConfig_maxSubIndex 0
-#define OD_230c_1_traceConfig_size 1
-#define OD_230c_2_traceConfig_axisNo 2
-#define OD_230c_3_traceConfig_name 3
-#define OD_230c_4_traceConfig_color 4
-#define OD_230c_5_traceConfig_map 5
-#define OD_230c_6_traceConfig_format 6
-#define OD_230c_7_traceConfig_trigger 7
-#define OD_230c_8_traceConfig_threshold 8
-
-/*230d */
-#define OD_230d_traceConfig 0x230d
-
-#define OD_230d_0_traceConfig_maxSubIndex 0
-#define OD_230d_1_traceConfig_size 1
-#define OD_230d_2_traceConfig_axisNo 2
-#define OD_230d_3_traceConfig_name 3
-#define OD_230d_4_traceConfig_color 4
-#define OD_230d_5_traceConfig_map 5
-#define OD_230d_6_traceConfig_format 6
-#define OD_230d_7_traceConfig_trigger 7
-#define OD_230d_8_traceConfig_threshold 8
-
-/*230e */
-#define OD_230e_traceConfig 0x230e
-
-#define OD_230e_0_traceConfig_maxSubIndex 0
-#define OD_230e_1_traceConfig_size 1
-#define OD_230e_2_traceConfig_axisNo 2
-#define OD_230e_3_traceConfig_name 3
-#define OD_230e_4_traceConfig_color 4
-#define OD_230e_5_traceConfig_map 5
-#define OD_230e_6_traceConfig_format 6
-#define OD_230e_7_traceConfig_trigger 7
-#define OD_230e_8_traceConfig_threshold 8
-
-/*230f */
-#define OD_230f_traceConfig 0x230f
-
-#define OD_230f_0_traceConfig_maxSubIndex 0
-#define OD_230f_1_traceConfig_size 1
-#define OD_230f_2_traceConfig_axisNo 2
-#define OD_230f_3_traceConfig_name 3
-#define OD_230f_4_traceConfig_color 4
-#define OD_230f_5_traceConfig_map 5
-#define OD_230f_6_traceConfig_format 6
-#define OD_230f_7_traceConfig_trigger 7
-#define OD_230f_8_traceConfig_threshold 8
-
-/*2310 */
-#define OD_2310_traceConfig 0x2310
-
-#define OD_2310_0_traceConfig_maxSubIndex 0
-#define OD_2310_1_traceConfig_size 1
-#define OD_2310_2_traceConfig_axisNo 2
-#define OD_2310_3_traceConfig_name 3
-#define OD_2310_4_traceConfig_color 4
-#define OD_2310_5_traceConfig_map 5
-#define OD_2310_6_traceConfig_format 6
-#define OD_2310_7_traceConfig_trigger 7
-#define OD_2310_8_traceConfig_threshold 8
-
-/*2311 */
-#define OD_2311_traceConfig 0x2311
-
-#define OD_2311_0_traceConfig_maxSubIndex 0
-#define OD_2311_1_traceConfig_size 1
-#define OD_2311_2_traceConfig_axisNo 2
-#define OD_2311_3_traceConfig_name 3
-#define OD_2311_4_traceConfig_color 4
-#define OD_2311_5_traceConfig_map 5
-#define OD_2311_6_traceConfig_format 6
-#define OD_2311_7_traceConfig_trigger 7
-#define OD_2311_8_traceConfig_threshold 8
-
-/*2312 */
-#define OD_2312_traceConfig 0x2312
-
-#define OD_2312_0_traceConfig_maxSubIndex 0
-#define OD_2312_1_traceConfig_size 1
-#define OD_2312_2_traceConfig_axisNo 2
-#define OD_2312_3_traceConfig_name 3
-#define OD_2312_4_traceConfig_color 4
-#define OD_2312_5_traceConfig_map 5
-#define OD_2312_6_traceConfig_format 6
-#define OD_2312_7_traceConfig_trigger 7
-#define OD_2312_8_traceConfig_threshold 8
-
-/*2313 */
-#define OD_2313_traceConfig 0x2313
-
-#define OD_2313_0_traceConfig_maxSubIndex 0
-#define OD_2313_1_traceConfig_size 1
-#define OD_2313_2_traceConfig_axisNo 2
-#define OD_2313_3_traceConfig_name 3
-#define OD_2313_4_traceConfig_color 4
-#define OD_2313_5_traceConfig_map 5
-#define OD_2313_6_traceConfig_format 6
-#define OD_2313_7_traceConfig_trigger 7
-#define OD_2313_8_traceConfig_threshold 8
-
-/*2314 */
-#define OD_2314_traceConfig 0x2314
-
-#define OD_2314_0_traceConfig_maxSubIndex 0
-#define OD_2314_1_traceConfig_size 1
-#define OD_2314_2_traceConfig_axisNo 2
-#define OD_2314_3_traceConfig_name 3
-#define OD_2314_4_traceConfig_color 4
-#define OD_2314_5_traceConfig_map 5
-#define OD_2314_6_traceConfig_format 6
-#define OD_2314_7_traceConfig_trigger 7
-#define OD_2314_8_traceConfig_threshold 8
-
-/*2315 */
-#define OD_2315_traceConfig 0x2315
-
-#define OD_2315_0_traceConfig_maxSubIndex 0
-#define OD_2315_1_traceConfig_size 1
-#define OD_2315_2_traceConfig_axisNo 2
-#define OD_2315_3_traceConfig_name 3
-#define OD_2315_4_traceConfig_color 4
-#define OD_2315_5_traceConfig_map 5
-#define OD_2315_6_traceConfig_format 6
-#define OD_2315_7_traceConfig_trigger 7
-#define OD_2315_8_traceConfig_threshold 8
-
-/*2316 */
-#define OD_2316_traceConfig 0x2316
-
-#define OD_2316_0_traceConfig_maxSubIndex 0
-#define OD_2316_1_traceConfig_size 1
-#define OD_2316_2_traceConfig_axisNo 2
-#define OD_2316_3_traceConfig_name 3
-#define OD_2316_4_traceConfig_color 4
-#define OD_2316_5_traceConfig_map 5
-#define OD_2316_6_traceConfig_format 6
-#define OD_2316_7_traceConfig_trigger 7
-#define OD_2316_8_traceConfig_threshold 8
-
-/*2317 */
-#define OD_2317_traceConfig 0x2317
-
-#define OD_2317_0_traceConfig_maxSubIndex 0
-#define OD_2317_1_traceConfig_size 1
-#define OD_2317_2_traceConfig_axisNo 2
-#define OD_2317_3_traceConfig_name 3
-#define OD_2317_4_traceConfig_color 4
-#define OD_2317_5_traceConfig_map 5
-#define OD_2317_6_traceConfig_format 6
-#define OD_2317_7_traceConfig_trigger 7
-#define OD_2317_8_traceConfig_threshold 8
-
-/*2318 */
-#define OD_2318_traceConfig 0x2318
-
-#define OD_2318_0_traceConfig_maxSubIndex 0
-#define OD_2318_1_traceConfig_size 1
-#define OD_2318_2_traceConfig_axisNo 2
-#define OD_2318_3_traceConfig_name 3
-#define OD_2318_4_traceConfig_color 4
-#define OD_2318_5_traceConfig_map 5
-#define OD_2318_6_traceConfig_format 6
-#define OD_2318_7_traceConfig_trigger 7
-#define OD_2318_8_traceConfig_threshold 8
-
-/*2319 */
-#define OD_2319_traceConfig 0x2319
-
-#define OD_2319_0_traceConfig_maxSubIndex 0
-#define OD_2319_1_traceConfig_size 1
-#define OD_2319_2_traceConfig_axisNo 2
-#define OD_2319_3_traceConfig_name 3
-#define OD_2319_4_traceConfig_color 4
-#define OD_2319_5_traceConfig_map 5
-#define OD_2319_6_traceConfig_format 6
-#define OD_2319_7_traceConfig_trigger 7
-#define OD_2319_8_traceConfig_threshold 8
-
-/*231a */
-#define OD_231a_traceConfig 0x231a
-
-#define OD_231a_0_traceConfig_maxSubIndex 0
-#define OD_231a_1_traceConfig_size 1
-#define OD_231a_2_traceConfig_axisNo 2
-#define OD_231a_3_traceConfig_name 3
-#define OD_231a_4_traceConfig_color 4
-#define OD_231a_5_traceConfig_map 5
-#define OD_231a_6_traceConfig_format 6
-#define OD_231a_7_traceConfig_trigger 7
-#define OD_231a_8_traceConfig_threshold 8
-
-/*231b */
-#define OD_231b_traceConfig 0x231b
-
-#define OD_231b_0_traceConfig_maxSubIndex 0
-#define OD_231b_1_traceConfig_size 1
-#define OD_231b_2_traceConfig_axisNo 2
-#define OD_231b_3_traceConfig_name 3
-#define OD_231b_4_traceConfig_color 4
-#define OD_231b_5_traceConfig_map 5
-#define OD_231b_6_traceConfig_format 6
-#define OD_231b_7_traceConfig_trigger 7
-#define OD_231b_8_traceConfig_threshold 8
-
-/*231c */
-#define OD_231c_traceConfig 0x231c
-
-#define OD_231c_0_traceConfig_maxSubIndex 0
-#define OD_231c_1_traceConfig_size 1
-#define OD_231c_2_traceConfig_axisNo 2
-#define OD_231c_3_traceConfig_name 3
-#define OD_231c_4_traceConfig_color 4
-#define OD_231c_5_traceConfig_map 5
-#define OD_231c_6_traceConfig_format 6
-#define OD_231c_7_traceConfig_trigger 7
-#define OD_231c_8_traceConfig_threshold 8
-
-/*231d */
-#define OD_231d_traceConfig 0x231d
-
-#define OD_231d_0_traceConfig_maxSubIndex 0
-#define OD_231d_1_traceConfig_size 1
-#define OD_231d_2_traceConfig_axisNo 2
-#define OD_231d_3_traceConfig_name 3
-#define OD_231d_4_traceConfig_color 4
-#define OD_231d_5_traceConfig_map 5
-#define OD_231d_6_traceConfig_format 6
-#define OD_231d_7_traceConfig_trigger 7
-#define OD_231d_8_traceConfig_threshold 8
-
-/*231e */
-#define OD_231e_traceConfig 0x231e
-
-#define OD_231e_0_traceConfig_maxSubIndex 0
-#define OD_231e_1_traceConfig_size 1
-#define OD_231e_2_traceConfig_axisNo 2
-#define OD_231e_3_traceConfig_name 3
-#define OD_231e_4_traceConfig_color 4
-#define OD_231e_5_traceConfig_map 5
-#define OD_231e_6_traceConfig_format 6
-#define OD_231e_7_traceConfig_trigger 7
-#define OD_231e_8_traceConfig_threshold 8
-
-/*231f */
-#define OD_231f_traceConfig 0x231f
-
-#define OD_231f_0_traceConfig_maxSubIndex 0
-#define OD_231f_1_traceConfig_size 1
-#define OD_231f_2_traceConfig_axisNo 2
-#define OD_231f_3_traceConfig_name 3
-#define OD_231f_4_traceConfig_color 4
-#define OD_231f_5_traceConfig_map 5
-#define OD_231f_6_traceConfig_format 6
-#define OD_231f_7_traceConfig_trigger 7
-#define OD_231f_8_traceConfig_threshold 8
-
-/*2320 */
-#define OD_2320_traceConfig 0x2320
-
-#define OD_2320_0_traceConfig_maxSubIndex 0
-#define OD_2320_1_traceConfig_size 1
-#define OD_2320_2_traceConfig_axisNo 2
-#define OD_2320_3_traceConfig_name 3
-#define OD_2320_4_traceConfig_color 4
-#define OD_2320_5_traceConfig_map 5
-#define OD_2320_6_traceConfig_format 6
-#define OD_2320_7_traceConfig_trigger 7
-#define OD_2320_8_traceConfig_threshold 8
-
-/*2400 */
-#define OD_2400_traceEnable 0x2400
-
-/*2401 */
-#define OD_2401_trace 0x2401
-
-#define OD_2401_0_trace_maxSubIndex 0
-#define OD_2401_1_trace_size 1
-#define OD_2401_2_trace_value 2
-#define OD_2401_3_trace_min 3
-#define OD_2401_4_trace_max 4
-#define OD_2401_5_trace_plot 5
-#define OD_2401_6_trace_triggerTime 6
-
-/*2402 */
-#define OD_2402_trace 0x2402
-
-#define OD_2402_0_trace_maxSubIndex 0
-#define OD_2402_1_trace_size 1
-#define OD_2402_2_trace_value 2
-#define OD_2402_3_trace_min 3
-#define OD_2402_4_trace_max 4
-#define OD_2402_5_trace_plot 5
-#define OD_2402_6_trace_triggerTime 6
-
-/*2403 */
-#define OD_2403_trace 0x2403
-
-#define OD_2403_0_trace_maxSubIndex 0
-#define OD_2403_1_trace_size 1
-#define OD_2403_2_trace_value 2
-#define OD_2403_3_trace_min 3
-#define OD_2403_4_trace_max 4
-#define OD_2403_5_trace_plot 5
-#define OD_2403_6_trace_triggerTime 6
-
-/*2404 */
-#define OD_2404_trace 0x2404
-
-#define OD_2404_0_trace_maxSubIndex 0
-#define OD_2404_1_trace_size 1
-#define OD_2404_2_trace_value 2
-#define OD_2404_3_trace_min 3
-#define OD_2404_4_trace_max 4
-#define OD_2404_5_trace_plot 5
-#define OD_2404_6_trace_triggerTime 6
-
-/*2405 */
-#define OD_2405_trace 0x2405
-
-#define OD_2405_0_trace_maxSubIndex 0
-#define OD_2405_1_trace_size 1
-#define OD_2405_2_trace_value 2
-#define OD_2405_3_trace_min 3
-#define OD_2405_4_trace_max 4
-#define OD_2405_5_trace_plot 5
-#define OD_2405_6_trace_triggerTime 6
-
-/*2406 */
-#define OD_2406_trace 0x2406
-
-#define OD_2406_0_trace_maxSubIndex 0
-#define OD_2406_1_trace_size 1
-#define OD_2406_2_trace_value 2
-#define OD_2406_3_trace_min 3
-#define OD_2406_4_trace_max 4
-#define OD_2406_5_trace_plot 5
-#define OD_2406_6_trace_triggerTime 6
-
-/*2407 */
-#define OD_2407_trace 0x2407
-
-#define OD_2407_0_trace_maxSubIndex 0
-#define OD_2407_1_trace_size 1
-#define OD_2407_2_trace_value 2
-#define OD_2407_3_trace_min 3
-#define OD_2407_4_trace_max 4
-#define OD_2407_5_trace_plot 5
-#define OD_2407_6_trace_triggerTime 6
-
-/*2408 */
-#define OD_2408_trace 0x2408
-
-#define OD_2408_0_trace_maxSubIndex 0
-#define OD_2408_1_trace_size 1
-#define OD_2408_2_trace_value 2
-#define OD_2408_3_trace_min 3
-#define OD_2408_4_trace_max 4
-#define OD_2408_5_trace_plot 5
-#define OD_2408_6_trace_triggerTime 6
-
-/*2409 */
-#define OD_2409_trace 0x2409
-
-#define OD_2409_0_trace_maxSubIndex 0
-#define OD_2409_1_trace_size 1
-#define OD_2409_2_trace_value 2
-#define OD_2409_3_trace_min 3
-#define OD_2409_4_trace_max 4
-#define OD_2409_5_trace_plot 5
-#define OD_2409_6_trace_triggerTime 6
-
-/*240a */
-#define OD_240a_trace 0x240a
-
-#define OD_240a_0_trace_maxSubIndex 0
-#define OD_240a_1_trace_size 1
-#define OD_240a_2_trace_value 2
-#define OD_240a_3_trace_min 3
-#define OD_240a_4_trace_max 4
-#define OD_240a_5_trace_plot 5
-#define OD_240a_6_trace_triggerTime 6
-
-/*240b */
-#define OD_240b_trace 0x240b
-
-#define OD_240b_0_trace_maxSubIndex 0
-#define OD_240b_1_trace_size 1
-#define OD_240b_2_trace_value 2
-#define OD_240b_3_trace_min 3
-#define OD_240b_4_trace_max 4
-#define OD_240b_5_trace_plot 5
-#define OD_240b_6_trace_triggerTime 6
-
-/*240c */
-#define OD_240c_trace 0x240c
-
-#define OD_240c_0_trace_maxSubIndex 0
-#define OD_240c_1_trace_size 1
-#define OD_240c_2_trace_value 2
-#define OD_240c_3_trace_min 3
-#define OD_240c_4_trace_max 4
-#define OD_240c_5_trace_plot 5
-#define OD_240c_6_trace_triggerTime 6
-
-/*240d */
-#define OD_240d_trace 0x240d
-
-#define OD_240d_0_trace_maxSubIndex 0
-#define OD_240d_1_trace_size 1
-#define OD_240d_2_trace_value 2
-#define OD_240d_3_trace_min 3
-#define OD_240d_4_trace_max 4
-#define OD_240d_5_trace_plot 5
-#define OD_240d_6_trace_triggerTime 6
-
-/*240e */
-#define OD_240e_trace 0x240e
-
-#define OD_240e_0_trace_maxSubIndex 0
-#define OD_240e_1_trace_size 1
-#define OD_240e_2_trace_value 2
-#define OD_240e_3_trace_min 3
-#define OD_240e_4_trace_max 4
-#define OD_240e_5_trace_plot 5
-#define OD_240e_6_trace_triggerTime 6
-
-/*240f */
-#define OD_240f_trace 0x240f
-
-#define OD_240f_0_trace_maxSubIndex 0
-#define OD_240f_1_trace_size 1
-#define OD_240f_2_trace_value 2
-#define OD_240f_3_trace_min 3
-#define OD_240f_4_trace_max 4
-#define OD_240f_5_trace_plot 5
-#define OD_240f_6_trace_triggerTime 6
-
-/*2410 */
-#define OD_2410_trace 0x2410
-
-#define OD_2410_0_trace_maxSubIndex 0
-#define OD_2410_1_trace_size 1
-#define OD_2410_2_trace_value 2
-#define OD_2410_3_trace_min 3
-#define OD_2410_4_trace_max 4
-#define OD_2410_5_trace_plot 5
-#define OD_2410_6_trace_triggerTime 6
-
-/*2411 */
-#define OD_2411_trace 0x2411
-
-#define OD_2411_0_trace_maxSubIndex 0
-#define OD_2411_1_trace_size 1
-#define OD_2411_2_trace_value 2
-#define OD_2411_3_trace_min 3
-#define OD_2411_4_trace_max 4
-#define OD_2411_5_trace_plot 5
-#define OD_2411_6_trace_triggerTime 6
-
-/*2412 */
-#define OD_2412_trace 0x2412
-
-#define OD_2412_0_trace_maxSubIndex 0
-#define OD_2412_1_trace_size 1
-#define OD_2412_2_trace_value 2
-#define OD_2412_3_trace_min 3
-#define OD_2412_4_trace_max 4
-#define OD_2412_5_trace_plot 5
-#define OD_2412_6_trace_triggerTime 6
-
-/*2413 */
-#define OD_2413_trace 0x2413
-
-#define OD_2413_0_trace_maxSubIndex 0
-#define OD_2413_1_trace_size 1
-#define OD_2413_2_trace_value 2
-#define OD_2413_3_trace_min 3
-#define OD_2413_4_trace_max 4
-#define OD_2413_5_trace_plot 5
-#define OD_2413_6_trace_triggerTime 6
-
-/*2414 */
-#define OD_2414_trace 0x2414
-
-#define OD_2414_0_trace_maxSubIndex 0
-#define OD_2414_1_trace_size 1
-#define OD_2414_2_trace_value 2
-#define OD_2414_3_trace_min 3
-#define OD_2414_4_trace_max 4
-#define OD_2414_5_trace_plot 5
-#define OD_2414_6_trace_triggerTime 6
-
-/*2415 */
-#define OD_2415_trace 0x2415
-
-#define OD_2415_0_trace_maxSubIndex 0
-#define OD_2415_1_trace_size 1
-#define OD_2415_2_trace_value 2
-#define OD_2415_3_trace_min 3
-#define OD_2415_4_trace_max 4
-#define OD_2415_5_trace_plot 5
-#define OD_2415_6_trace_triggerTime 6
-
-/*2416 */
-#define OD_2416_trace 0x2416
-
-#define OD_2416_0_trace_maxSubIndex 0
-#define OD_2416_1_trace_size 1
-#define OD_2416_2_trace_value 2
-#define OD_2416_3_trace_min 3
-#define OD_2416_4_trace_max 4
-#define OD_2416_5_trace_plot 5
-#define OD_2416_6_trace_triggerTime 6
-
-/*2417 */
-#define OD_2417_trace 0x2417
-
-#define OD_2417_0_trace_maxSubIndex 0
-#define OD_2417_1_trace_size 1
-#define OD_2417_2_trace_value 2
-#define OD_2417_3_trace_min 3
-#define OD_2417_4_trace_max 4
-#define OD_2417_5_trace_plot 5
-#define OD_2417_6_trace_triggerTime 6
-
-/*2418 */
-#define OD_2418_trace 0x2418
-
-#define OD_2418_0_trace_maxSubIndex 0
-#define OD_2418_1_trace_size 1
-#define OD_2418_2_trace_value 2
-#define OD_2418_3_trace_min 3
-#define OD_2418_4_trace_max 4
-#define OD_2418_5_trace_plot 5
-#define OD_2418_6_trace_triggerTime 6
-
-/*2419 */
-#define OD_2419_trace 0x2419
-
-#define OD_2419_0_trace_maxSubIndex 0
-#define OD_2419_1_trace_size 1
-#define OD_2419_2_trace_value 2
-#define OD_2419_3_trace_min 3
-#define OD_2419_4_trace_max 4
-#define OD_2419_5_trace_plot 5
-#define OD_2419_6_trace_triggerTime 6
-
-/*241a */
-#define OD_241a_trace 0x241a
-
-#define OD_241a_0_trace_maxSubIndex 0
-#define OD_241a_1_trace_size 1
-#define OD_241a_2_trace_value 2
-#define OD_241a_3_trace_min 3
-#define OD_241a_4_trace_max 4
-#define OD_241a_5_trace_plot 5
-#define OD_241a_6_trace_triggerTime 6
-
-/*241b */
-#define OD_241b_trace 0x241b
-
-#define OD_241b_0_trace_maxSubIndex 0
-#define OD_241b_1_trace_size 1
-#define OD_241b_2_trace_value 2
-#define OD_241b_3_trace_min 3
-#define OD_241b_4_trace_max 4
-#define OD_241b_5_trace_plot 5
-#define OD_241b_6_trace_triggerTime 6
-
-/*241c */
-#define OD_241c_trace 0x241c
-
-#define OD_241c_0_trace_maxSubIndex 0
-#define OD_241c_1_trace_size 1
-#define OD_241c_2_trace_value 2
-#define OD_241c_3_trace_min 3
-#define OD_241c_4_trace_max 4
-#define OD_241c_5_trace_plot 5
-#define OD_241c_6_trace_triggerTime 6
-
-/*241d */
-#define OD_241d_trace 0x241d
-
-#define OD_241d_0_trace_maxSubIndex 0
-#define OD_241d_1_trace_size 1
-#define OD_241d_2_trace_value 2
-#define OD_241d_3_trace_min 3
-#define OD_241d_4_trace_max 4
-#define OD_241d_5_trace_plot 5
-#define OD_241d_6_trace_triggerTime 6
-
-/*241e */
-#define OD_241e_trace 0x241e
-
-#define OD_241e_0_trace_maxSubIndex 0
-#define OD_241e_1_trace_size 1
-#define OD_241e_2_trace_value 2
-#define OD_241e_3_trace_min 3
-#define OD_241e_4_trace_max 4
-#define OD_241e_5_trace_plot 5
-#define OD_241e_6_trace_triggerTime 6
-
-/*241f */
-#define OD_241f_trace 0x241f
-
-#define OD_241f_0_trace_maxSubIndex 0
-#define OD_241f_1_trace_size 1
-#define OD_241f_2_trace_value 2
-#define OD_241f_3_trace_min 3
-#define OD_241f_4_trace_max 4
-#define OD_241f_5_trace_plot 5
-#define OD_241f_6_trace_triggerTime 6
-
-/*2420 */
-#define OD_2420_trace 0x2420
-
-#define OD_2420_0_trace_maxSubIndex 0
-#define OD_2420_1_trace_size 1
-#define OD_2420_2_trace_value 2
-#define OD_2420_3_trace_min 3
-#define OD_2420_4_trace_max 4
-#define OD_2420_5_trace_plot 5
-#define OD_2420_6_trace_triggerTime 6
-
-/*6000 */
-#define OD_6000_readInput8Bit 0x6000
-
-#define OD_6000_0_readInput8Bit_maxSubIndex 0
-#define OD_6000_1_readInput8Bit_input 1
-#define OD_6000_2_readInput8Bit_input 2
-#define OD_6000_3_readInput8Bit_input 3
-#define OD_6000_4_readInput8Bit_input 4
-#define OD_6000_5_readInput8Bit_input 5
-#define OD_6000_6_readInput8Bit_input 6
-#define OD_6000_7_readInput8Bit_input 7
-#define OD_6000_8_readInput8Bit_input 8
-
-/*6040 */
-#define OD_6040_controlWords 0x6040
-
-#define OD_6040_0_controlWords_maxSubIndex 0
-#define OD_6040_1_controlWords_motor1 1
-#define OD_6040_2_controlWords_motor2 2
-#define OD_6040_3_controlWords_motor3 3
-#define OD_6040_4_controlWords_motor4 4
-#define OD_6040_5_controlWords_motor5 5
-#define OD_6040_6_controlWords_motor6 6
-
-/*6041 */
-#define OD_6041_statusWords 0x6041
-
-#define OD_6041_0_statusWords_maxSubIndex 0
-#define OD_6041_1_statusWords_motor1 1
-#define OD_6041_2_statusWords_motor2 2
-#define OD_6041_3_statusWords_motor3 3
-#define OD_6041_4_statusWords_motor4 4
-#define OD_6041_5_statusWords_motor5 5
-#define OD_6041_6_statusWords_motor6 6
-
-/*6064 */
-#define OD_6064_actualMotorPositions 0x6064
-
-#define OD_6064_0_actualMotorPositions_maxSubIndex 0
-#define OD_6064_1_actualMotorPositions_motor1 1
-#define OD_6064_2_actualMotorPositions_motor2 2
-#define OD_6064_3_actualMotorPositions_motor3 3
-#define OD_6064_4_actualMotorPositions_motor4 4
-#define OD_6064_5_actualMotorPositions_motor5 5
-#define OD_6064_6_actualMotorPositions_motor6 6
-
-/*606c */
-#define OD_606c_actualMotorVelocities 0x606c
-
-#define OD_606c_0_actualMotorVelocities_maxSubIndex 0
-#define OD_606c_1_actualMotorVelocities_motor1 1
-#define OD_606c_2_actualMotorVelocities_motor2 2
-#define OD_606c_3_actualMotorVelocities_motor3 3
-#define OD_606c_4_actualMotorVelocities_motor4 4
-#define OD_606c_5_actualMotorVelocities_motor5 5
-#define OD_606c_6_actualMotorVelocities_motor6 6
-
-/*6077 */
-#define OD_6077_actualMotorTorques 0x6077
-
-#define OD_6077_0_actualMotorTorques_maxSubIndex 0
-#define OD_6077_1_actualMotorTorques_motor1 1
-#define OD_6077_2_actualMotorTorques_motor2 2
-#define OD_6077_3_actualMotorTorques_motor3 3
-#define OD_6077_4_actualMotorTorques_motor4 4
-
-/*607a */
-#define OD_607a_targetMotorPositions 0x607a
-
-#define OD_607a_0_targetMotorPositions_maxSubIndex 0
-#define OD_607a_1_targetMotorPositions_motor1 1
-#define OD_607a_2_targetMotorPositions_motor2 2
-#define OD_607a_3_targetMotorPositions_motor3 3
-#define OD_607a_4_targetMotorPositions_motor4 4
-#define OD_607a_5_targetMotorPositions_motor5 5
-#define OD_607a_6_targetMotorPositions_motor6 6
-
-/*60ff */
-#define OD_60ff_targetMotorVelocities 0x60ff
-
-#define OD_60ff_0_targetMotorVelocities_maxSubIndex 0
-#define OD_60ff_1_targetMotorVelocities_motor1 1
-#define OD_60ff_2_targetMotorVelocities_motor2 2
-#define OD_60ff_3_targetMotorVelocities_motor3 3
-#define OD_60ff_4_targetMotorVelocities_motor4 4
-#define OD_60ff_5_targetMotorVelocities_motor5 5
-#define OD_60ff_6_targetMotorVelocities_motor6 6
-
-/*6200 */
-#define OD_6200_writeOutput8Bit 0x6200
-
-#define OD_6200_0_writeOutput8Bit_maxSubIndex 0
-#define OD_6200_1_writeOutput8Bit_output 1
-#define OD_6200_2_writeOutput8Bit_output 2
-#define OD_6200_3_writeOutput8Bit_output 3
-#define OD_6200_4_writeOutput8Bit_output 4
-#define OD_6200_5_writeOutput8Bit_output 5
-#define OD_6200_6_writeOutput8Bit_output 6
-#define OD_6200_7_writeOutput8Bit_output 7
-#define OD_6200_8_writeOutput8Bit_output 8
-
-/*6401 */
-#define OD_6401_readAnalogueInput16Bit 0x6401
-
-#define OD_6401_0_readAnalogueInput16Bit_maxSubIndex 0
-#define OD_6401_1_readAnalogueInput16Bit_input 1
-#define OD_6401_2_readAnalogueInput16Bit_input 2
-#define OD_6401_3_readAnalogueInput16Bit_input 3
-#define OD_6401_4_readAnalogueInput16Bit_input 4
-#define OD_6401_5_readAnalogueInput16Bit_input 5
-#define OD_6401_6_readAnalogueInput16Bit_input 6
-#define OD_6401_7_readAnalogueInput16Bit_input 7
-#define OD_6401_8_readAnalogueInput16Bit_input 8
-#define OD_6401_9_readAnalogueInput16Bit_input 9
-#define OD_6401_10_readAnalogueInput16Bit_input 10
-#define OD_6401_11_readAnalogueInput16Bit_input 11
-#define OD_6401_12_readAnalogueInput16Bit_input 12
-
-/*6411 */
-#define OD_6411_writeAnalogueOutput16Bit 0x6411
-
-#define OD_6411_0_writeAnalogueOutput16Bit_maxSubIndex 0
-#define OD_6411_1_writeAnalogueOutput16Bit_output 1
-#define OD_6411_2_writeAnalogueOutput16Bit_output 2
-#define OD_6411_3_writeAnalogueOutput16Bit_output 3
-#define OD_6411_4_writeAnalogueOutput16Bit_output 4
-#define OD_6411_5_writeAnalogueOutput16Bit_output 5
-#define OD_6411_6_writeAnalogueOutput16Bit_output 6
-#define OD_6411_7_writeAnalogueOutput16Bit_output 7
-#define OD_6411_8_writeAnalogueOutput16Bit_output 8
 
 /*******************************************************************************
    STRUCTURES FOR VARIABLES IN DIFFERENT MEMORY LOCATIONS
 *******************************************************************************/
-#define CO_OD_FIRST_LAST_WORD 0x55 //Any value from 0x01 to 0xFE. If changed, EEPROM will be reinitialized.
+#define  CO_OD_FIRST_LAST_WORD     0x55 //Any value from 0x01 to 0xFE. If changed, EEPROM will be reinitialized.
 
-/***** Structure for ROM variables ********************************************/
-struct sCO_OD_ROM
-{
-        UNSIGNED32 FirstWord;
+/***** Structure for RAM variables ********************************************/
+struct sCO_OD_RAM{
+               UNSIGNED32     FirstWord;
+
+/*1001      */ UNSIGNED8      errorRegister;
+/*1002      */ UNSIGNED32     manufacturerStatusRegister;
+/*1003      */ UNSIGNED32     preDefinedErrorField[8];
+/*1010      */ UNSIGNED32     storeParameters[1];
+/*1011      */ UNSIGNED32     restoreDefaultParameters[1];
+/*1280[1]   */ OD_SDOClientParameter_t SDOClientParameter[1];
+/*2100      */ OCTET_STRING   errorStatusBits[10];
+/*2103      */ UNSIGNED16     SYNCCounter;
+/*2104      */ UNSIGNED16     SYNCTime;
+/*2107      */ UNSIGNED16     performance[5];
+/*2108      */ INTEGER16      temperature[1];
+/*2109      */ INTEGER16      voltage[1];
+/*2110      */ INTEGER32      variableInt32[32];
+/*2120      */ OD_testVar_t   testVar;
+/*2130      */ OD_time_t      time;
+/*2400      */ UNSIGNED8      traceEnable;
+/*2401[32]  */ OD_trace_t     trace[32];
+/*6000      */ UNSIGNED8      readInput8Bit[8];
+/*6200      */ UNSIGNED8      writeOutput8Bit[8];
+/*6401      */ INTEGER16      readAnalogueInput16Bit[12];
+/*6411      */ INTEGER16      writeAnalogueOutput16Bit[8];
+
+               UNSIGNED32     LastWord;
+};
 
-        /*100c      */ UNSIGNED16 guardTime;
-        /*1012      */ UNSIGNED32 COB_ID_TIME;
+/***** Structure for EEPROM variables *****************************************/
+struct sCO_OD_EEPROM{
+               UNSIGNED32     FirstWord;
 
-        UNSIGNED32 LastWord;
-};
+/*2106      */ UNSIGNED32     powerOnCounter;
+/*2112      */ INTEGER32      variableNVInt32[16];
 
-/***** Structure for RAM variables ********************************************/
-struct sCO_OD_RAM
-{
-        UNSIGNED32 FirstWord;
-
-        /*1000      */ UNSIGNED32 deviceType;
-        /*1001      */ UNSIGNED8 errorRegister;
-        /*1002      */ UNSIGNED32 manufacturerStatusRegister;
-        /*1003      */ UNSIGNED32 preDefinedErrorField[8];
-        /*1005      */ UNSIGNED32 COB_ID_SYNCMessage;
-        /*1006      */ UNSIGNED32 communicationCyclePeriod;
-        /*1007      */ UNSIGNED32 synchronousWindowLength;
-        /*1008      */ VISIBLE_STRING manufacturerDeviceName[11];
-        /*1009      */ VISIBLE_STRING manufacturerHardwareVersion[4];
-        /*100a      */ VISIBLE_STRING manufacturerSoftwareVersion[4];
-        /*100d      */ UNSIGNED8 lifeTimeFactor;
-        /*1010      */ UNSIGNED32 storeParameters[1];
-        /*1011      */ UNSIGNED32 restoreDefaultParameters[1];
-        /*1013      */ UNSIGNED32 highResolutionTimeStamp;
-        /*1014      */ UNSIGNED32 COB_ID_EMCY;
-        /*1015      */ UNSIGNED16 inhibitTimeEMCY;
-        /*1016      */ UNSIGNED32 consumerHeartbeatTime[4];
-        /*1017      */ UNSIGNED16 producerHeartbeatTime;
-        /*1018      */ OD_identity_t identity;
-        /*1019      */ UNSIGNED8 synchronousCounterOverflowValue;
-        /*1029      */ UNSIGNED8 errorBehavior[6];
-        /*1200      */ OD_SDOServerParameter_t SDOServerParameter[1];
-        /*1280      */ OD_SDOClientParameter_t SDOClientParameter[1];
-        /*1400      */ OD_RPDOCommunicationParameter_t RPDOCommunicationParameter[32];
-        /*1600      */ OD_RPDOMappingParameter_t RPDOMappingParameter[32];
-        /*1800      */ OD_TPDOCommunicationParameter_t TPDOCommunicationParameter[32];
-        /*1a00      */ OD_TPDOMappingParameter_t TPDOMappingParameter[32];
-        /*1f80      */ UNSIGNED32 NMTStartup;
-        /*1f81      */ UNSIGNED32 slaveAssignment[127];
-        /*1f82      */ UNSIGNED8 requestNMT[127];
-        /*1f89      */ UNSIGNED32 bootTime;
-        /*2100      */ OCTET_STRING errorStatusBits[10];
-        /*2101      */ UNSIGNED8 CANNodeID;
-        /*2102      */ UNSIGNED16 CANBitRate;
-        /*2103      */ UNSIGNED16 SYNCCounter;
-        /*2104      */ UNSIGNED16 SYNCTime;
-        /*2106      */ UNSIGNED32 powerOnCounter;
-        /*2107      */ UNSIGNED16 performance[5];
-        /*2108      */ INTEGER16 temperature[1];
-        /*2109      */ INTEGER16 voltage[1];
-        /*2110      */ INTEGER32 variableInt32[32];
-        /*2111      */ INTEGER32 variableROM_Int32[16];
-        /*2112      */ INTEGER32 variableNV_Int32[16];
-        /*2120      */ OD_testVar_t testVar;
-        /*2130      */ OD_time_t time;
-        /*2301      */ OD_traceConfig_t traceConfig[32];
-        /*2400      */ UNSIGNED8 traceEnable;
-        /*2401      */ OD_trace_t trace[32];
-        /*6000      */ UNSIGNED8 readInput8Bit[8];
-        /*6040      */ OD_controlWords_t controlWords;
-        /*6041      */ OD_statusWords_t statusWords;
-        /*6064      */ OD_actualMotorPositions_t actualMotorPositions;
-        /*606c      */ OD_actualMotorVelocities_t actualMotorVelocities;
-        /*6077      */ OD_actualMotorTorques_t actualMotorTorques;
-        /*607a      */ OD_targetMotorPositions_t targetMotorPositions;
-        /*60ff      */ OD_targetMotorVelocities_t targetMotorVelocities;
-        /*6200      */ UNSIGNED8 writeOutput8Bit[8];
-        /*6401      */ INTEGER16 readAnalogueInput16Bit[12];
-        /*6411      */ INTEGER16 writeAnalogueOutput16Bit[8];
-
-        UNSIGNED32 LastWord;
+               UNSIGNED32     LastWord;
 };
 
-/***** Structure for EEPROM variables ********************************************/
-struct sCO_OD_EEPROM
-{
-        UNSIGNED32 FirstWord;
 
-        UNSIGNED32 LastWord;
+/***** Structure for ROM variables ********************************************/
+struct sCO_OD_ROM{
+               UNSIGNED32     FirstWord;
+
+/*1000      */ UNSIGNED32     deviceType;
+/*1005      */ UNSIGNED32     COB_ID_SYNCMessage;
+/*1006      */ UNSIGNED32     communicationCyclePeriod;
+/*1007      */ UNSIGNED32     synchronousWindowLength;
+/*1008      */ VISIBLE_STRING manufacturerDeviceName[11];
+/*1009      */ VISIBLE_STRING manufacturerHardwareVersion[4];
+/*100A      */ VISIBLE_STRING manufacturerSoftwareVersion[4];
+/*1014      */ UNSIGNED32     COB_ID_EMCY;
+/*1015      */ UNSIGNED16     inhibitTimeEMCY;
+/*1016      */ UNSIGNED32     consumerHeartbeatTime[4];
+/*1017      */ UNSIGNED16     producerHeartbeatTime;
+/*1018      */ OD_identity_t  identity;
+/*1019      */ UNSIGNED8      synchronousCounterOverflowValue;
+/*1029      */ UNSIGNED8      errorBehavior[6];
+/*1200[1]   */ OD_SDOServerParameter_t SDOServerParameter[1];
+/*1400[16]  */ OD_RPDOCommunicationParameter_t RPDOCommunicationParameter[16];
+/*1600[16]  */ OD_RPDOMappingParameter_t RPDOMappingParameter[16];
+/*1800[16]  */ OD_TPDOCommunicationParameter_t TPDOCommunicationParameter[16];
+/*1A00[16]  */ OD_TPDOMappingParameter_t TPDOMappingParameter[16];
+/*1F80      */ UNSIGNED32     NMTStartup;
+/*2101      */ UNSIGNED8      CANNodeID;
+/*2102      */ UNSIGNED16     CANBitRate;
+/*2111      */ INTEGER32      variableROMInt32[16];
+/*2301[32]  */ OD_traceConfig_t traceConfig[32];
+
+               UNSIGNED32     LastWord;
 };
 
-/***** Declaration of Object Dictionary variables *****************************/
-extern struct sCO_OD_ROM CO_OD_ROM;
 
+/***** Declaration of Object Dictionary variables *****************************/
 extern struct sCO_OD_RAM CO_OD_RAM;
 
 extern struct sCO_OD_EEPROM CO_OD_EEPROM;
 
+extern struct sCO_OD_ROM CO_OD_ROM;
+
+
 /*******************************************************************************
    ALIASES FOR OBJECT DICTIONARY VARIABLES
 *******************************************************************************/
 /*1000, Data Type: UNSIGNED32 */
-#define OD_deviceType CO_OD_RAM.deviceType
+      #define OD_deviceType                              CO_OD_ROM.deviceType
 
 /*1001, Data Type: UNSIGNED8 */
-#define OD_errorRegister CO_OD_RAM.errorRegister
+      #define OD_errorRegister                           CO_OD_RAM.errorRegister
 
 /*1002, Data Type: UNSIGNED32 */
-#define OD_manufacturerStatusRegister CO_OD_RAM.manufacturerStatusRegister
+      #define OD_manufacturerStatusRegister              CO_OD_RAM.manufacturerStatusRegister
 
 /*1003, Data Type: UNSIGNED32, Array[8] */
-#define OD_preDefinedErrorField CO_OD_RAM.preDefinedErrorField
-#define ODL_preDefinedErrorField_arrayLength 8
-#define ODA_preDefinedErrorField_standardErrorField 0
+      #define OD_preDefinedErrorField                    CO_OD_RAM.preDefinedErrorField
+      #define ODL_preDefinedErrorField_arrayLength       8
 
 /*1005, Data Type: UNSIGNED32 */
-#define OD_COB_ID_SYNCMessage CO_OD_RAM.COB_ID_SYNCMessage
+      #define OD_COB_ID_SYNCMessage                      CO_OD_ROM.COB_ID_SYNCMessage
 
 /*1006, Data Type: UNSIGNED32 */
-#define OD_communicationCyclePeriod CO_OD_RAM.communicationCyclePeriod
+      #define OD_communicationCyclePeriod                CO_OD_ROM.communicationCyclePeriod
 
 /*1007, Data Type: UNSIGNED32 */
-#define OD_synchronousWindowLength CO_OD_RAM.synchronousWindowLength
-
-/*1008, Data Type: VISIBLE_STRING */
-#define OD_manufacturerDeviceName CO_OD_RAM.manufacturerDeviceName
-#define ODL_manufacturerDeviceName_stringLength 11
-
-/*1009, Data Type: VISIBLE_STRING */
-#define OD_manufacturerHardwareVersion CO_OD_RAM.manufacturerHardwareVersion
-#define ODL_manufacturerHardwareVersion_stringLength 4
+      #define OD_synchronousWindowLength                 CO_OD_ROM.synchronousWindowLength
 
-/*100a, Data Type: VISIBLE_STRING */
-#define OD_manufacturerSoftwareVersion CO_OD_RAM.manufacturerSoftwareVersion
-#define ODL_manufacturerSoftwareVersion_stringLength 4
+/*1008, Data Type: VISIBLE_STRING, Array[11] */
+      #define OD_manufacturerDeviceName                  CO_OD_ROM.manufacturerDeviceName
+      #define ODL_manufacturerDeviceName_stringLength    11
 
-/*100c, Data Type: UNSIGNED16 */
-#define OD_guardTime CO_OD_ROM.guardTime
+/*1009, Data Type: VISIBLE_STRING, Array[4] */
+      #define OD_manufacturerHardwareVersion             CO_OD_ROM.manufacturerHardwareVersion
+      #define ODL_manufacturerHardwareVersion_stringLength 4
 
-/*100d, Data Type: UNSIGNED8 */
-#define OD_lifeTimeFactor CO_OD_RAM.lifeTimeFactor
+/*100A, Data Type: VISIBLE_STRING, Array[4] */
+      #define OD_manufacturerSoftwareVersion             CO_OD_ROM.manufacturerSoftwareVersion
+      #define ODL_manufacturerSoftwareVersion_stringLength 4
 
 /*1010, Data Type: UNSIGNED32, Array[1] */
-#define OD_storeParameters CO_OD_RAM.storeParameters
-#define ODL_storeParameters_arrayLength 1
-#define ODA_storeParameters_saveAllParameters 0
+      #define OD_storeParameters                         CO_OD_RAM.storeParameters
+      #define ODL_storeParameters_arrayLength            1
+      #define ODA_storeParameters_saveAllParameters      0
 
 /*1011, Data Type: UNSIGNED32, Array[1] */
-#define OD_restoreDefaultParameters CO_OD_RAM.restoreDefaultParameters
-#define ODL_restoreDefaultParameters_arrayLength 1
-#define ODA_restoreDefaultParameters_restoreAllDefaultParameters 0
-
-/*1012, Data Type: UNSIGNED32 */
-#define OD_COB_ID_TIME CO_OD_ROM.COB_ID_TIME
-
-/*1013, Data Type: UNSIGNED32 */
-#define OD_highResolutionTimeStamp CO_OD_RAM.highResolutionTimeStamp
+      #define OD_restoreDefaultParameters                CO_OD_RAM.restoreDefaultParameters
+      #define ODL_restoreDefaultParameters_arrayLength   1
+      #define ODA_restoreDefaultParameters_restoreAllDefaultParameters 0
 
 /*1014, Data Type: UNSIGNED32 */
-#define OD_COB_ID_EMCY CO_OD_RAM.COB_ID_EMCY
+      #define OD_COB_ID_EMCY                             CO_OD_ROM.COB_ID_EMCY
 
 /*1015, Data Type: UNSIGNED16 */
-#define OD_inhibitTimeEMCY CO_OD_RAM.inhibitTimeEMCY
+      #define OD_inhibitTimeEMCY                         CO_OD_ROM.inhibitTimeEMCY
 
 /*1016, Data Type: UNSIGNED32, Array[4] */
-#define OD_consumerHeartbeatTime CO_OD_RAM.consumerHeartbeatTime
-#define ODL_consumerHeartbeatTime_arrayLength 4
-#define ODA_consumerHeartbeatTime_consumerHeartbeatTime 0
+      #define OD_consumerHeartbeatTime                   CO_OD_ROM.consumerHeartbeatTime
+      #define ODL_consumerHeartbeatTime_arrayLength      4
 
 /*1017, Data Type: UNSIGNED16 */
-#define OD_producerHeartbeatTime CO_OD_RAM.producerHeartbeatTime
+      #define OD_producerHeartbeatTime                   CO_OD_ROM.producerHeartbeatTime
 
-/*1018, Data Type: identity_t */
-#define OD_identity CO_OD_RAM.identity
+/*1018, Data Type: OD_identity_t */
+      #define OD_identity                                CO_OD_ROM.identity
 
 /*1019, Data Type: UNSIGNED8 */
-#define OD_synchronousCounterOverflowValue CO_OD_RAM.synchronousCounterOverflowValue
+      #define OD_synchronousCounterOverflowValue         CO_OD_ROM.synchronousCounterOverflowValue
 
 /*1029, Data Type: UNSIGNED8, Array[6] */
-#define OD_errorBehavior CO_OD_RAM.errorBehavior
-#define ODL_errorBehavior_arrayLength 6
-#define ODA_errorBehavior_communication 0
-#define ODA_errorBehavior_communicationOther 1
-#define ODA_errorBehavior_communicationPassive 2
-#define ODA_errorBehavior_generic 3
-#define ODA_errorBehavior_deviceProfile 4
-#define ODA_errorBehavior_manufacturerSpecific 5
-
-/*1200, Data Type: SDOServerParameter_t */
-#define OD_SDOServerParameter CO_OD_RAM.SDOServerParameter
-
-/*1280, Data Type: SDOClientParameter_t */
-#define OD_SDOClientParameter CO_OD_RAM.SDOClientParameter
+      #define OD_errorBehavior                           CO_OD_ROM.errorBehavior
+      #define ODL_errorBehavior_arrayLength              6
+      #define ODA_errorBehavior_communication            0
+      #define ODA_errorBehavior_communicationOther       1
+      #define ODA_errorBehavior_communicationPassive     2
+      #define ODA_errorBehavior_generic                  3
+      #define ODA_errorBehavior_deviceProfile            4
+      #define ODA_errorBehavior_manufacturerSpecific     5
 
-/*1400, Data Type: RPDOCommunicationParameter_t */
-#define OD_RPDOCommunicationParameter CO_OD_RAM.RPDOCommunicationParameter
+/*1200[1], Data Type: OD_SDOServerParameter_t, Array[1] */
+      #define OD_SDOServerParameter                      CO_OD_ROM.SDOServerParameter
 
-/*1600, Data Type: RPDOMappingParameter_t */
-#define OD_RPDOMappingParameter CO_OD_RAM.RPDOMappingParameter
+/*1280[1], Data Type: OD_SDOClientParameter_t, Array[1] */
+      #define OD_SDOClientParameter                      CO_OD_RAM.SDOClientParameter
 
-/*1800, Data Type: TPDOCommunicationParameter_t */
-#define OD_TPDOCommunicationParameter CO_OD_RAM.TPDOCommunicationParameter
+/*1400[16], Data Type: OD_RPDOCommunicationParameter_t, Array[16] */
+      #define OD_RPDOCommunicationParameter              CO_OD_ROM.RPDOCommunicationParameter
 
-/*1a00, Data Type: TPDOMappingParameter_t */
-#define OD_TPDOMappingParameter CO_OD_RAM.TPDOMappingParameter
+/*1600[16], Data Type: OD_RPDOMappingParameter_t, Array[16] */
+      #define OD_RPDOMappingParameter                    CO_OD_ROM.RPDOMappingParameter
 
-/*1f80, Data Type: UNSIGNED32 */
-#define OD_NMTStartup CO_OD_RAM.NMTStartup
+/*1800[16], Data Type: OD_TPDOCommunicationParameter_t, Array[16] */
+      #define OD_TPDOCommunicationParameter              CO_OD_ROM.TPDOCommunicationParameter
 
-/*1f81, Data Type: UNSIGNED32, Array[127] */
-#define OD_slaveAssignment CO_OD_RAM.slaveAssignment
-#define ODL_slaveAssignment_arrayLength 127
-#define ODA_slaveAssignment_ 0
+/*1A00[16], Data Type: OD_TPDOMappingParameter_t, Array[16] */
+      #define OD_TPDOMappingParameter                    CO_OD_ROM.TPDOMappingParameter
 
-/*1f82, Data Type: UNSIGNED8, Array[127] */
-#define OD_requestNMT CO_OD_RAM.requestNMT
-#define ODL_requestNMT_arrayLength 127
-#define ODA_requestNMT_ 0
+/*1F80, Data Type: UNSIGNED32 */
+      #define OD_NMTStartup                              CO_OD_ROM.NMTStartup
 
-/*1f89, Data Type: UNSIGNED32 */
-#define OD_bootTime CO_OD_RAM.bootTime
-
-/*2100, Data Type: OCTET_STRING */
-#define OD_errorStatusBits CO_OD_RAM.errorStatusBits
-#define ODL_errorStatusBits_stringLength 10
+/*2100, Data Type: OCTET_STRING, Array[10] */
+      #define OD_errorStatusBits                         CO_OD_RAM.errorStatusBits
+      #define ODL_errorStatusBits_stringLength           10
 
 /*2101, Data Type: UNSIGNED8 */
-#define OD_CANNodeID CO_OD_RAM.CANNodeID
+      #define OD_CANNodeID                               CO_OD_ROM.CANNodeID
 
 /*2102, Data Type: UNSIGNED16 */
-#define OD_CANBitRate CO_OD_RAM.CANBitRate
+      #define OD_CANBitRate                              CO_OD_ROM.CANBitRate
 
 /*2103, Data Type: UNSIGNED16 */
-#define OD_SYNCCounter CO_OD_RAM.SYNCCounter
+      #define OD_SYNCCounter                             CO_OD_RAM.SYNCCounter
 
 /*2104, Data Type: UNSIGNED16 */
-#define OD_SYNCTime CO_OD_RAM.SYNCTime
+      #define OD_SYNCTime                                CO_OD_RAM.SYNCTime
 
 /*2106, Data Type: UNSIGNED32 */
-#define OD_powerOnCounter CO_OD_RAM.powerOnCounter
+      #define OD_powerOnCounter                          CO_OD_EEPROM.powerOnCounter
 
 /*2107, Data Type: UNSIGNED16, Array[5] */
-#define OD_performance CO_OD_RAM.performance
-#define ODL_performance_arrayLength 5
-#define ODA_performance_cyclesPerSecond 0
-#define ODA_performance_timerCycleTime 1
-#define ODA_performance_timerCycleMaxTime 2
-#define ODA_performance_mainCycleTime 3
-#define ODA_performance_mainCycleMaxTime 4
+      #define OD_performance                             CO_OD_RAM.performance
+      #define ODL_performance_arrayLength                5
+      #define ODA_performance_cyclesPerSecond            0
+      #define ODA_performance_timerCycleTime             1
+      #define ODA_performance_timerCycleMaxTime          2
+      #define ODA_performance_mainCycleTime              3
+      #define ODA_performance_mainCycleMaxTime           4
 
 /*2108, Data Type: INTEGER16, Array[1] */
-#define OD_temperature CO_OD_RAM.temperature
-#define ODL_temperature_arrayLength 1
-#define ODA_temperature_mainPCB 0
+      #define OD_temperature                             CO_OD_RAM.temperature
+      #define ODL_temperature_arrayLength                1
+      #define ODA_temperature_mainPCB                    0
 
 /*2109, Data Type: INTEGER16, Array[1] */
-#define OD_voltage CO_OD_RAM.voltage
-#define ODL_voltage_arrayLength 1
-#define ODA_voltage_mainPCBSupply 0
+      #define OD_voltage                                 CO_OD_RAM.voltage
+      #define ODL_voltage_arrayLength                    1
+      #define ODA_voltage_mainPCBSupply                  0
 
 /*2110, Data Type: INTEGER32, Array[32] */
-#define OD_variableInt32 CO_OD_RAM.variableInt32
-#define ODL_variableInt32_arrayLength 32
-#define ODA_variableInt32_int32 0
+      #define OD_variableInt32                           CO_OD_RAM.variableInt32
+      #define ODL_variableInt32_arrayLength              32
 
 /*2111, Data Type: INTEGER32, Array[16] */
-#define OD_variableROM_Int32 CO_OD_RAM.variableROM_Int32
-#define ODL_variableROM_Int32_arrayLength 16
-#define ODA_variableROM_Int32_int32 0
+      #define OD_variableROMInt32                        CO_OD_ROM.variableROMInt32
+      #define ODL_variableROMInt32_arrayLength           16
 
 /*2112, Data Type: INTEGER32, Array[16] */
-#define OD_variableNV_Int32 CO_OD_RAM.variableNV_Int32
-#define ODL_variableNV_Int32_arrayLength 16
-#define ODA_variableNV_Int32_int32 0
+      #define OD_variableNVInt32                         CO_OD_EEPROM.variableNVInt32
+      #define ODL_variableNVInt32_arrayLength            16
 
-/*2120, Data Type: testVar_t */
-#define OD_testVar CO_OD_RAM.testVar
+/*2120, Data Type: OD_testVar_t */
+      #define OD_testVar                                 CO_OD_RAM.testVar
 
-/*2130, Data Type: time_t */
-#define OD_time CO_OD_RAM.time
+/*2130, Data Type: OD_time_t */
+      #define OD_time                                    CO_OD_RAM.time
 
-/*2301, Data Type: traceConfig_t */
-#define OD_traceConfig CO_OD_RAM.traceConfig
+/*2301[32], Data Type: OD_traceConfig_t, Array[32] */
+      #define OD_traceConfig                             CO_OD_ROM.traceConfig
 
 /*2400, Data Type: UNSIGNED8 */
-#define OD_traceEnable CO_OD_RAM.traceEnable
+      #define OD_traceEnable                             CO_OD_RAM.traceEnable
 
-/*2401, Data Type: trace_t */
-#define OD_trace CO_OD_RAM.trace
+/*2401[32], Data Type: OD_trace_t, Array[32] */
+      #define OD_trace                                   CO_OD_RAM.trace
 
 /*6000, Data Type: UNSIGNED8, Array[8] */
-#define OD_readInput8Bit CO_OD_RAM.readInput8Bit
-#define ODL_readInput8Bit_arrayLength 8
-#define ODA_readInput8Bit_input 0
-
-/*6040, Data Type: controlWords_t */
-#define OD_controlWords CO_OD_RAM.controlWords
-
-/*6041, Data Type: statusWords_t */
-#define OD_statusWords CO_OD_RAM.statusWords
-
-/*6064, Data Type: actualMotorPositions_t */
-#define OD_actualMotorPositions CO_OD_RAM.actualMotorPositions
-
-/*606c, Data Type: actualMotorVelocities_t */
-#define OD_actualMotorVelocities CO_OD_RAM.actualMotorVelocities
-
-/*6077, Data Type: actualMotorTorques_t */
-#define OD_actualMotorTorques CO_OD_RAM.actualMotorTorques
-
-/*607a, Data Type: targetMotorPositions_t */
-#define OD_targetMotorPositions CO_OD_RAM.targetMotorPositions
-
-/*60ff, Data Type: targetMotorVelocities_t */
-#define OD_targetMotorVelocities CO_OD_RAM.targetMotorVelocities
+      #define OD_readInput8Bit                           CO_OD_RAM.readInput8Bit
+      #define ODL_readInput8Bit_arrayLength              8
 
 /*6200, Data Type: UNSIGNED8, Array[8] */
-#define OD_writeOutput8Bit CO_OD_RAM.writeOutput8Bit
-#define ODL_writeOutput8Bit_arrayLength 8
-#define ODA_writeOutput8Bit_output 0
+      #define OD_writeOutput8Bit                         CO_OD_RAM.writeOutput8Bit
+      #define ODL_writeOutput8Bit_arrayLength            8
 
 /*6401, Data Type: INTEGER16, Array[12] */
-#define OD_readAnalogueInput16Bit CO_OD_RAM.readAnalogueInput16Bit
-#define ODL_readAnalogueInput16Bit_arrayLength 12
-#define ODA_readAnalogueInput16Bit_input 0
+      #define OD_readAnalogueInput16Bit                  CO_OD_RAM.readAnalogueInput16Bit
+      #define ODL_readAnalogueInput16Bit_arrayLength     12
 
 /*6411, Data Type: INTEGER16, Array[8] */
-#define OD_writeAnalogueOutput16Bit CO_OD_RAM.writeAnalogueOutput16Bit
-#define ODL_writeAnalogueOutput16Bit_arrayLength 8
-#define ODA_writeAnalogueOutput16Bit_output 0
+      #define OD_writeAnalogueOutput16Bit                CO_OD_RAM.writeAnalogueOutput16Bit
+      #define ODL_writeAnalogueOutput16Bit_arrayLength   8
+
+
+#endif
+
diff --git a/canopend/objDict/CO_ODorig.c b/canopend/objDict/CO_ODorig.c
deleted file mode 100644
index 6c970f0..0000000
--- a/canopend/objDict/CO_ODorig.c
+++ /dev/null
@@ -1,1533 +0,0 @@
-/*
- * CANopen Object Dictionary.
- *
- * This file was automatically generated with CANopenNode Object
- * Dictionary Editor. DON'T EDIT THIS FILE MANUALLY !!!!
- * Object Dictionary Editor is currently an older, but functional web
- * application. For more info see See 'Object_Dictionary_Editor/about.html' in
- * <http://sourceforge.net/p/canopennode/code_complete/ci/master/tree/>
- * For more information on CANopen Object Dictionary see <CO_SDO.h>.
- *
- * @file        CO_OD.c
- * @author      Janez Paternoster
- * @copyright   2010 - 2016 Janez Paternoster
- *
- * This file is part of CANopenNode, an opensource CANopen Stack.
- * Project home page is <https://github.com/CANopenNode/CANopenNode>.
- * For more information on CANopen see <http://www.can-cia.org/>.
- *
- * CANopenNode is free and open source software: you can redistribute
- * it and/or modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation, either version 2 of the
- * License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program. If not, see <http://www.gnu.org/licenses/>.
- */
-
-
-#include "CO_driver.h"
-#include "CO_OD.h"
-#include "CO_SDO.h"
-
-
-/*******************************************************************************
-   DEFINITION AND INITIALIZATION OF OBJECT DICTIONARY VARIABLES
-*******************************************************************************/
-
-/***** Definition for RAM variables *******************************************/
-struct sCO_OD_RAM CO_OD_RAM = {
-           CO_OD_FIRST_LAST_WORD,
-
-/*1001*/ 0x0,
-/*1002*/ 0x0L,
-/*1003*/ {0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1010*/ {0x3L},
-/*1011*/ {0x1L},
-/*1280*/{{0x3, 0x0L, 0x0L, 0x0}},
-/*2100*/ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
-/*2103*/ 0x0,
-/*2104*/ 0x0,
-/*2107*/ {0x3E8, 0x0, 0x0, 0x0, 0x0},
-/*2108*/ {0},
-/*2109*/ {0},
-/*2110*/ {0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L},
-/*2120*/ {0x5, 0x1234567890ABCDEFLL, 0x234567890ABCDEF1LL, 12.345, 456.789, 0},
-/*2130*/ {0x3, {'-', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0, 0x0L},
-/*2400*/ 0x0,
-/*2401*/{{0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*2402*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*2403*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*2404*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*2405*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*2406*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*2407*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*2408*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*2409*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*240A*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*240B*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*240C*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*240D*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*240E*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*240F*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*2410*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*2411*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*2412*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*2413*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*2414*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*2415*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*2416*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*2417*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*2418*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*2419*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*241A*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*241B*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*241C*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*241D*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*241E*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*241F*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L},
-/*2420*/ {0x6, 0x0L, 0L, 0L, 0L, 0, 0x0L}},
-/*6000*/ {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
-/*6200*/ {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
-/*6401*/ {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
-/*6411*/ {0, 0, 0, 0, 0, 0, 0, 0},
-
-           CO_OD_FIRST_LAST_WORD,
-};
-
-
-/***** Definition for EEPROM variables ****************************************/
-struct sCO_OD_EEPROM CO_OD_EEPROM = {
-           CO_OD_FIRST_LAST_WORD,
-
-/*2106*/ 0x0L,
-/*2112*/ {1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L},
-
-           CO_OD_FIRST_LAST_WORD,
-};
-
-
-/***** Definition for ROM variables *******************************************/
-   struct sCO_OD_ROM CO_OD_ROM = {    //constant variables, stored in flash
-           CO_OD_FIRST_LAST_WORD,
-
-/*1000*/ 0x0L,
-/*1005*/ 0x80L,
-/*1006*/ 0x0L,
-/*1007*/ 0x0L,
-/*1008*/ {'C', 'A', 'N', 'o', 'p', 'e', 'n', 'N', 'o', 'd', 'e'},
-/*1009*/ {'3', '.', '0', '0'},
-/*100A*/ {'3', '.', '0', '0'},
-/*1014*/ 0x80L,
-/*1015*/ 0x64,
-/*1016*/ {0x0L, 0x0L, 0x0L, 0x0L},
-/*1017*/ 0x3E8,
-/*1018*/ {0x4, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1019*/ 0x0,
-/*1029*/ {0x0, 0x0, 0x1, 0x0, 0x0, 0x0},
-/*1200*/{{0x2, 0x600L, 0x580L}},
-/*1400*/{{0x2, 0x200L, 0xFF},
-/*1401*/ {0x2, 0x300L, 0xFE},
-/*1402*/ {0x2, 0x400L, 0xFE},
-/*1403*/ {0x2, 0x500L, 0xFE},
-/*1404*/ {0x2, 0x80000000L, 0xFE},
-/*1405*/ {0x2, 0x80000000L, 0xFE},
-/*1406*/ {0x2, 0x80000000L, 0xFE},
-/*1407*/ {0x2, 0x80000000L, 0xFE},
-/*1408*/ {0x2, 0x80000000L, 0xFE},
-/*1409*/ {0x2, 0x80000000L, 0xFE},
-/*140A*/ {0x2, 0x80000000L, 0xFE},
-/*140B*/ {0x2, 0x80000000L, 0xFE},
-/*140C*/ {0x2, 0x80000000L, 0xFE},
-/*140D*/ {0x2, 0x80000000L, 0xFE},
-/*140E*/ {0x2, 0x80000000L, 0xFE},
-/*140F*/ {0x2, 0x80000000L, 0xFE}},
-/*1600*/{{0x2, 0x62000108L, 0x62000208L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1601*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1602*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1603*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1604*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1605*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1606*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1607*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1608*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1609*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*160A*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*160B*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*160C*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*160D*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*160E*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*160F*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L}},
-/*1800*/{{0x6, 0x180L, 0xFF, 0x64, 0x0, 0x0, 0x0},
-/*1801*/ {0x6, 0x280L, 0xFE, 0x0, 0x0, 0x0, 0x0},
-/*1802*/ {0x6, 0x380L, 0xFE, 0x0, 0x0, 0x0, 0x0},
-/*1803*/ {0x6, 0x480L, 0xFE, 0x0, 0x0, 0x0, 0x0},
-/*1804*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
-/*1805*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
-/*1806*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
-/*1807*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
-/*1808*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
-/*1809*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
-/*180A*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
-/*180B*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
-/*180C*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
-/*180D*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
-/*180E*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0},
-/*180F*/ {0x6, 0x80000000L, 0xFE, 0x0, 0x0, 0x0, 0x0}},
-/*1A00*/{{0x2, 0x60000108L, 0x60000208L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1A01*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1A02*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1A03*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1A04*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1A05*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1A06*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1A07*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1A08*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1A09*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1A0A*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1A0B*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1A0C*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1A0D*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1A0E*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*1A0F*/ {0x0, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L}},
-/*1F80*/ 0x0L,
-/*2101*/ 0x20,
-/*2102*/ 0xFA,
-/*2111*/ {1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L},
-/*2301*/{{0x8, 0x3E8L, 0x0, {'T', 'r', 'a', 'c', 'e', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*2302*/ {0x8, 0x3E8L, 0x0, {'T', 'r', 'a', 'c', 'e', '2', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'g', 'r', 'e', 'e', 'n', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*2303*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*2304*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*2305*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*2306*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*2307*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*2308*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*2309*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*230A*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*230B*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*230C*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*230D*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*230E*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*230F*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*2310*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*2311*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*2312*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*2313*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*2314*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*2315*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*2316*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*2317*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*2318*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*2319*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*231A*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*231B*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*231C*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*231D*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*231E*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*231F*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L},
-/*2320*/ {0x8, 0x3E8L, 0x0, {'n', 'a', 'm', 'e', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, {'r', 'e', 'd', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, 0x0L, 0x0, 0x0, 0L}},
-
-           CO_OD_FIRST_LAST_WORD
-};
-
-
-/*******************************************************************************
-   STRUCTURES FOR RECORD TYPE OBJECTS
-*******************************************************************************/
-/*0x1018*/ const CO_OD_entryRecord_t OD_record1018[5] = {
-           {(void*)&CO_OD_ROM.identity.maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.identity.vendorID, 0x85,  4},
-           {(void*)&CO_OD_ROM.identity.productCode, 0x85,  4},
-           {(void*)&CO_OD_ROM.identity.revisionNumber, 0x85,  4},
-           {(void*)&CO_OD_ROM.identity.serialNumber, 0x85,  4}};
-/*0x1200*/ const CO_OD_entryRecord_t OD_record1200[3] = {
-           {(void*)&CO_OD_ROM.SDOServerParameter[0].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.SDOServerParameter[0].COB_IDClientToServer, 0x85,  4},
-           {(void*)&CO_OD_ROM.SDOServerParameter[0].COB_IDServerToClient, 0x85,  4}};
-/*0x1280*/ const CO_OD_entryRecord_t OD_record1280[4] = {
-           {(void*)&CO_OD_RAM.SDOClientParameter[0].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.SDOClientParameter[0].COB_IDClientToServer, 0xBE,  4},
-           {(void*)&CO_OD_RAM.SDOClientParameter[0].COB_IDServerToClient, 0xBE,  4},
-           {(void*)&CO_OD_RAM.SDOClientParameter[0].nodeIDOfTheSDOServer, 0x0E,  1}};
-/*0x1400*/ const CO_OD_entryRecord_t OD_record1400[3] = {
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[0].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[0].COB_IDUsedByRPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[0].transmissionType, 0x0D,  1}};
-/*0x1401*/ const CO_OD_entryRecord_t OD_record1401[3] = {
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[1].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[1].COB_IDUsedByRPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[1].transmissionType, 0x0D,  1}};
-/*0x1402*/ const CO_OD_entryRecord_t OD_record1402[3] = {
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[2].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[2].COB_IDUsedByRPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[2].transmissionType, 0x0D,  1}};
-/*0x1403*/ const CO_OD_entryRecord_t OD_record1403[3] = {
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[3].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[3].COB_IDUsedByRPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[3].transmissionType, 0x0D,  1}};
-/*0x1404*/ const CO_OD_entryRecord_t OD_record1404[3] = {
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[4].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[4].COB_IDUsedByRPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[4].transmissionType, 0x0D,  1}};
-/*0x1405*/ const CO_OD_entryRecord_t OD_record1405[3] = {
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[5].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[5].COB_IDUsedByRPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[5].transmissionType, 0x0D,  1}};
-/*0x1406*/ const CO_OD_entryRecord_t OD_record1406[3] = {
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[6].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[6].COB_IDUsedByRPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[6].transmissionType, 0x0D,  1}};
-/*0x1407*/ const CO_OD_entryRecord_t OD_record1407[3] = {
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[7].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[7].COB_IDUsedByRPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[7].transmissionType, 0x0D,  1}};
-/*0x1408*/ const CO_OD_entryRecord_t OD_record1408[3] = {
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[8].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[8].COB_IDUsedByRPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[8].transmissionType, 0x0D,  1}};
-/*0x1409*/ const CO_OD_entryRecord_t OD_record1409[3] = {
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[9].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[9].COB_IDUsedByRPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[9].transmissionType, 0x0D,  1}};
-/*0x140A*/ const CO_OD_entryRecord_t OD_record140A[3] = {
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[10].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[10].COB_IDUsedByRPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[10].transmissionType, 0x0D,  1}};
-/*0x140B*/ const CO_OD_entryRecord_t OD_record140B[3] = {
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[11].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[11].COB_IDUsedByRPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[11].transmissionType, 0x0D,  1}};
-/*0x140C*/ const CO_OD_entryRecord_t OD_record140C[3] = {
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[12].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[12].COB_IDUsedByRPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[12].transmissionType, 0x0D,  1}};
-/*0x140D*/ const CO_OD_entryRecord_t OD_record140D[3] = {
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[13].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[13].COB_IDUsedByRPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[13].transmissionType, 0x0D,  1}};
-/*0x140E*/ const CO_OD_entryRecord_t OD_record140E[3] = {
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[14].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[14].COB_IDUsedByRPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[14].transmissionType, 0x0D,  1}};
-/*0x140F*/ const CO_OD_entryRecord_t OD_record140F[3] = {
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[15].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[15].COB_IDUsedByRPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOCommunicationParameter[15].transmissionType, 0x0D,  1}};
-/*0x1600*/ const CO_OD_entryRecord_t OD_record1600[9] = {
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[0].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[0].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[0].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[0].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[0].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[0].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[0].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[0].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[0].mappedObject8, 0x8D,  4}};
-/*0x1601*/ const CO_OD_entryRecord_t OD_record1601[9] = {
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[1].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[1].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[1].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[1].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[1].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[1].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[1].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[1].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[1].mappedObject8, 0x8D,  4}};
-/*0x1602*/ const CO_OD_entryRecord_t OD_record1602[9] = {
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[2].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[2].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[2].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[2].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[2].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[2].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[2].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[2].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[2].mappedObject8, 0x8D,  4}};
-/*0x1603*/ const CO_OD_entryRecord_t OD_record1603[9] = {
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[3].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[3].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[3].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[3].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[3].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[3].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[3].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[3].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[3].mappedObject8, 0x8D,  4}};
-/*0x1604*/ const CO_OD_entryRecord_t OD_record1604[9] = {
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[4].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[4].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[4].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[4].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[4].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[4].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[4].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[4].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[4].mappedObject8, 0x8D,  4}};
-/*0x1605*/ const CO_OD_entryRecord_t OD_record1605[9] = {
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[5].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[5].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[5].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[5].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[5].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[5].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[5].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[5].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[5].mappedObject8, 0x8D,  4}};
-/*0x1606*/ const CO_OD_entryRecord_t OD_record1606[9] = {
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[6].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[6].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[6].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[6].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[6].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[6].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[6].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[6].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[6].mappedObject8, 0x8D,  4}};
-/*0x1607*/ const CO_OD_entryRecord_t OD_record1607[9] = {
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[7].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[7].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[7].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[7].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[7].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[7].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[7].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[7].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[7].mappedObject8, 0x8D,  4}};
-/*0x1608*/ const CO_OD_entryRecord_t OD_record1608[9] = {
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[8].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[8].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[8].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[8].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[8].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[8].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[8].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[8].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[8].mappedObject8, 0x8D,  4}};
-/*0x1609*/ const CO_OD_entryRecord_t OD_record1609[9] = {
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[9].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[9].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[9].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[9].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[9].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[9].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[9].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[9].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[9].mappedObject8, 0x8D,  4}};
-/*0x160A*/ const CO_OD_entryRecord_t OD_record160A[9] = {
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[10].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[10].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[10].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[10].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[10].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[10].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[10].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[10].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[10].mappedObject8, 0x8D,  4}};
-/*0x160B*/ const CO_OD_entryRecord_t OD_record160B[9] = {
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[11].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[11].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[11].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[11].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[11].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[11].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[11].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[11].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[11].mappedObject8, 0x8D,  4}};
-/*0x160C*/ const CO_OD_entryRecord_t OD_record160C[9] = {
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[12].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[12].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[12].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[12].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[12].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[12].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[12].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[12].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[12].mappedObject8, 0x8D,  4}};
-/*0x160D*/ const CO_OD_entryRecord_t OD_record160D[9] = {
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[13].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[13].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[13].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[13].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[13].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[13].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[13].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[13].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[13].mappedObject8, 0x8D,  4}};
-/*0x160E*/ const CO_OD_entryRecord_t OD_record160E[9] = {
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[14].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[14].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[14].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[14].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[14].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[14].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[14].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[14].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[14].mappedObject8, 0x8D,  4}};
-/*0x160F*/ const CO_OD_entryRecord_t OD_record160F[9] = {
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[15].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[15].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[15].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[15].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[15].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[15].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[15].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[15].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.RPDOMappingParameter[15].mappedObject8, 0x8D,  4}};
-/*0x1800*/ const CO_OD_entryRecord_t OD_record1800[7] = {
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[0].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[0].COB_IDUsedByTPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[0].transmissionType, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[0].inhibitTime, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[0].compatibilityEntry, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[0].eventTimer, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[0].SYNCStartValue, 0x0D,  1}};
-/*0x1801*/ const CO_OD_entryRecord_t OD_record1801[7] = {
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[1].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[1].COB_IDUsedByTPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[1].transmissionType, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[1].inhibitTime, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[1].compatibilityEntry, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[1].eventTimer, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[1].SYNCStartValue, 0x0D,  1}};
-/*0x1802*/ const CO_OD_entryRecord_t OD_record1802[7] = {
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[2].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[2].COB_IDUsedByTPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[2].transmissionType, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[2].inhibitTime, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[2].compatibilityEntry, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[2].eventTimer, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[2].SYNCStartValue, 0x0D,  1}};
-/*0x1803*/ const CO_OD_entryRecord_t OD_record1803[7] = {
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[3].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[3].COB_IDUsedByTPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[3].transmissionType, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[3].inhibitTime, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[3].compatibilityEntry, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[3].eventTimer, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[3].SYNCStartValue, 0x0D,  1}};
-/*0x1804*/ const CO_OD_entryRecord_t OD_record1804[7] = {
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[4].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[4].COB_IDUsedByTPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[4].transmissionType, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[4].inhibitTime, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[4].compatibilityEntry, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[4].eventTimer, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[4].SYNCStartValue, 0x0D,  1}};
-/*0x1805*/ const CO_OD_entryRecord_t OD_record1805[7] = {
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[5].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[5].COB_IDUsedByTPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[5].transmissionType, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[5].inhibitTime, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[5].compatibilityEntry, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[5].eventTimer, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[5].SYNCStartValue, 0x0D,  1}};
-/*0x1806*/ const CO_OD_entryRecord_t OD_record1806[7] = {
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[6].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[6].COB_IDUsedByTPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[6].transmissionType, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[6].inhibitTime, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[6].compatibilityEntry, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[6].eventTimer, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[6].SYNCStartValue, 0x0D,  1}};
-/*0x1807*/ const CO_OD_entryRecord_t OD_record1807[7] = {
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[7].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[7].COB_IDUsedByTPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[7].transmissionType, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[7].inhibitTime, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[7].compatibilityEntry, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[7].eventTimer, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[7].SYNCStartValue, 0x0D,  1}};
-/*0x1808*/ const CO_OD_entryRecord_t OD_record1808[7] = {
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[8].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[8].COB_IDUsedByTPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[8].transmissionType, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[8].inhibitTime, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[8].compatibilityEntry, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[8].eventTimer, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[8].SYNCStartValue, 0x0D,  1}};
-/*0x1809*/ const CO_OD_entryRecord_t OD_record1809[7] = {
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[9].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[9].COB_IDUsedByTPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[9].transmissionType, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[9].inhibitTime, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[9].compatibilityEntry, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[9].eventTimer, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[9].SYNCStartValue, 0x0D,  1}};
-/*0x180A*/ const CO_OD_entryRecord_t OD_record180A[7] = {
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[10].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[10].COB_IDUsedByTPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[10].transmissionType, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[10].inhibitTime, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[10].compatibilityEntry, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[10].eventTimer, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[10].SYNCStartValue, 0x0D,  1}};
-/*0x180B*/ const CO_OD_entryRecord_t OD_record180B[7] = {
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[11].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[11].COB_IDUsedByTPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[11].transmissionType, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[11].inhibitTime, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[11].compatibilityEntry, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[11].eventTimer, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[11].SYNCStartValue, 0x0D,  1}};
-/*0x180C*/ const CO_OD_entryRecord_t OD_record180C[7] = {
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[12].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[12].COB_IDUsedByTPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[12].transmissionType, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[12].inhibitTime, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[12].compatibilityEntry, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[12].eventTimer, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[12].SYNCStartValue, 0x0D,  1}};
-/*0x180D*/ const CO_OD_entryRecord_t OD_record180D[7] = {
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[13].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[13].COB_IDUsedByTPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[13].transmissionType, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[13].inhibitTime, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[13].compatibilityEntry, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[13].eventTimer, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[13].SYNCStartValue, 0x0D,  1}};
-/*0x180E*/ const CO_OD_entryRecord_t OD_record180E[7] = {
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[14].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[14].COB_IDUsedByTPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[14].transmissionType, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[14].inhibitTime, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[14].compatibilityEntry, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[14].eventTimer, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[14].SYNCStartValue, 0x0D,  1}};
-/*0x180F*/ const CO_OD_entryRecord_t OD_record180F[7] = {
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[15].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[15].COB_IDUsedByTPDO, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[15].transmissionType, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[15].inhibitTime, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[15].compatibilityEntry, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[15].eventTimer, 0x8D,  2},
-           {(void*)&CO_OD_ROM.TPDOCommunicationParameter[15].SYNCStartValue, 0x0D,  1}};
-/*0x1A00*/ const CO_OD_entryRecord_t OD_record1A00[9] = {
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[0].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[0].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[0].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[0].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[0].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[0].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[0].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[0].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[0].mappedObject8, 0x8D,  4}};
-/*0x1A01*/ const CO_OD_entryRecord_t OD_record1A01[9] = {
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[1].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[1].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[1].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[1].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[1].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[1].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[1].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[1].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[1].mappedObject8, 0x8D,  4}};
-/*0x1A02*/ const CO_OD_entryRecord_t OD_record1A02[9] = {
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[2].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[2].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[2].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[2].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[2].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[2].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[2].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[2].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[2].mappedObject8, 0x8D,  4}};
-/*0x1A03*/ const CO_OD_entryRecord_t OD_record1A03[9] = {
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[3].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[3].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[3].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[3].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[3].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[3].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[3].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[3].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[3].mappedObject8, 0x8D,  4}};
-/*0x1A04*/ const CO_OD_entryRecord_t OD_record1A04[9] = {
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[4].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[4].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[4].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[4].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[4].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[4].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[4].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[4].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[4].mappedObject8, 0x8D,  4}};
-/*0x1A05*/ const CO_OD_entryRecord_t OD_record1A05[9] = {
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[5].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[5].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[5].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[5].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[5].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[5].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[5].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[5].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[5].mappedObject8, 0x8D,  4}};
-/*0x1A06*/ const CO_OD_entryRecord_t OD_record1A06[9] = {
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[6].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[6].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[6].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[6].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[6].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[6].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[6].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[6].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[6].mappedObject8, 0x8D,  4}};
-/*0x1A07*/ const CO_OD_entryRecord_t OD_record1A07[9] = {
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[7].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[7].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[7].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[7].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[7].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[7].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[7].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[7].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[7].mappedObject8, 0x8D,  4}};
-/*0x1A08*/ const CO_OD_entryRecord_t OD_record1A08[9] = {
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[8].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[8].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[8].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[8].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[8].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[8].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[8].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[8].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[8].mappedObject8, 0x8D,  4}};
-/*0x1A09*/ const CO_OD_entryRecord_t OD_record1A09[9] = {
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[9].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[9].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[9].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[9].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[9].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[9].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[9].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[9].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[9].mappedObject8, 0x8D,  4}};
-/*0x1A0A*/ const CO_OD_entryRecord_t OD_record1A0A[9] = {
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[10].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[10].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[10].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[10].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[10].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[10].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[10].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[10].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[10].mappedObject8, 0x8D,  4}};
-/*0x1A0B*/ const CO_OD_entryRecord_t OD_record1A0B[9] = {
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[11].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[11].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[11].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[11].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[11].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[11].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[11].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[11].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[11].mappedObject8, 0x8D,  4}};
-/*0x1A0C*/ const CO_OD_entryRecord_t OD_record1A0C[9] = {
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[12].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[12].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[12].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[12].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[12].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[12].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[12].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[12].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[12].mappedObject8, 0x8D,  4}};
-/*0x1A0D*/ const CO_OD_entryRecord_t OD_record1A0D[9] = {
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[13].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[13].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[13].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[13].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[13].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[13].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[13].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[13].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[13].mappedObject8, 0x8D,  4}};
-/*0x1A0E*/ const CO_OD_entryRecord_t OD_record1A0E[9] = {
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[14].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[14].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[14].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[14].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[14].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[14].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[14].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[14].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[14].mappedObject8, 0x8D,  4}};
-/*0x1A0F*/ const CO_OD_entryRecord_t OD_record1A0F[9] = {
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[15].numberOfMappedObjects, 0x0D,  1},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[15].mappedObject1, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[15].mappedObject2, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[15].mappedObject3, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[15].mappedObject4, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[15].mappedObject5, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[15].mappedObject6, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[15].mappedObject7, 0x8D,  4},
-           {(void*)&CO_OD_ROM.TPDOMappingParameter[15].mappedObject8, 0x8D,  4}};
-/*0x2120*/ const CO_OD_entryRecord_t OD_record2120[6] = {
-           {(void*)&CO_OD_RAM.testVar.maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.testVar.I64, 0xBE,  8},
-           {(void*)&CO_OD_RAM.testVar.U64, 0xBE,  8},
-           {(void*)&CO_OD_RAM.testVar.R32, 0xBE,  4},
-           {(void*)&CO_OD_RAM.testVar.R64, 0xBE,  8},
-           {0, 0x0E,  0}};
-/*0x2130*/ const CO_OD_entryRecord_t OD_record2130[4] = {
-           {(void*)&CO_OD_RAM.time.maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.time.string[0], 0x06, 30},
-           {(void*)&CO_OD_RAM.time.epochTimeBaseMs, 0x86,  8},
-           {(void*)&CO_OD_RAM.time.epochTimeOffsetMs, 0xBE,  4}};
-/*0x2301*/ const CO_OD_entryRecord_t OD_record2301[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[0].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[0].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[0].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[0].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[0].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[0].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[0].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[0].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[0].threshold, 0x8D,  4}};
-/*0x2302*/ const CO_OD_entryRecord_t OD_record2302[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[1].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[1].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[1].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[1].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[1].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[1].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[1].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[1].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[1].threshold, 0x8D,  4}};
-/*0x2303*/ const CO_OD_entryRecord_t OD_record2303[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[2].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[2].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[2].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[2].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[2].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[2].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[2].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[2].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[2].threshold, 0x8D,  4}};
-/*0x2304*/ const CO_OD_entryRecord_t OD_record2304[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[3].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[3].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[3].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[3].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[3].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[3].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[3].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[3].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[3].threshold, 0x8D,  4}};
-/*0x2305*/ const CO_OD_entryRecord_t OD_record2305[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[4].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[4].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[4].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[4].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[4].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[4].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[4].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[4].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[4].threshold, 0x8D,  4}};
-/*0x2306*/ const CO_OD_entryRecord_t OD_record2306[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[5].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[5].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[5].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[5].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[5].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[5].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[5].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[5].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[5].threshold, 0x8D,  4}};
-/*0x2307*/ const CO_OD_entryRecord_t OD_record2307[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[6].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[6].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[6].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[6].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[6].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[6].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[6].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[6].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[6].threshold, 0x8D,  4}};
-/*0x2308*/ const CO_OD_entryRecord_t OD_record2308[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[7].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[7].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[7].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[7].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[7].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[7].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[7].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[7].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[7].threshold, 0x8D,  4}};
-/*0x2309*/ const CO_OD_entryRecord_t OD_record2309[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[8].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[8].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[8].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[8].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[8].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[8].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[8].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[8].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[8].threshold, 0x8D,  4}};
-/*0x230A*/ const CO_OD_entryRecord_t OD_record230A[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[9].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[9].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[9].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[9].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[9].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[9].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[9].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[9].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[9].threshold, 0x8D,  4}};
-/*0x230B*/ const CO_OD_entryRecord_t OD_record230B[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[10].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[10].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[10].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[10].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[10].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[10].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[10].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[10].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[10].threshold, 0x8D,  4}};
-/*0x230C*/ const CO_OD_entryRecord_t OD_record230C[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[11].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[11].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[11].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[11].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[11].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[11].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[11].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[11].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[11].threshold, 0x8D,  4}};
-/*0x230D*/ const CO_OD_entryRecord_t OD_record230D[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[12].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[12].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[12].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[12].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[12].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[12].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[12].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[12].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[12].threshold, 0x8D,  4}};
-/*0x230E*/ const CO_OD_entryRecord_t OD_record230E[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[13].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[13].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[13].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[13].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[13].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[13].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[13].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[13].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[13].threshold, 0x8D,  4}};
-/*0x230F*/ const CO_OD_entryRecord_t OD_record230F[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[14].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[14].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[14].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[14].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[14].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[14].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[14].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[14].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[14].threshold, 0x8D,  4}};
-/*0x2310*/ const CO_OD_entryRecord_t OD_record2310[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[15].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[15].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[15].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[15].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[15].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[15].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[15].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[15].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[15].threshold, 0x8D,  4}};
-/*0x2311*/ const CO_OD_entryRecord_t OD_record2311[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[16].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[16].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[16].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[16].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[16].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[16].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[16].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[16].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[16].threshold, 0x8D,  4}};
-/*0x2312*/ const CO_OD_entryRecord_t OD_record2312[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[17].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[17].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[17].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[17].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[17].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[17].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[17].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[17].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[17].threshold, 0x8D,  4}};
-/*0x2313*/ const CO_OD_entryRecord_t OD_record2313[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[18].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[18].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[18].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[18].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[18].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[18].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[18].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[18].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[18].threshold, 0x8D,  4}};
-/*0x2314*/ const CO_OD_entryRecord_t OD_record2314[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[19].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[19].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[19].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[19].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[19].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[19].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[19].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[19].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[19].threshold, 0x8D,  4}};
-/*0x2315*/ const CO_OD_entryRecord_t OD_record2315[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[20].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[20].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[20].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[20].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[20].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[20].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[20].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[20].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[20].threshold, 0x8D,  4}};
-/*0x2316*/ const CO_OD_entryRecord_t OD_record2316[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[21].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[21].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[21].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[21].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[21].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[21].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[21].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[21].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[21].threshold, 0x8D,  4}};
-/*0x2317*/ const CO_OD_entryRecord_t OD_record2317[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[22].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[22].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[22].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[22].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[22].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[22].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[22].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[22].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[22].threshold, 0x8D,  4}};
-/*0x2318*/ const CO_OD_entryRecord_t OD_record2318[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[23].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[23].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[23].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[23].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[23].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[23].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[23].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[23].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[23].threshold, 0x8D,  4}};
-/*0x2319*/ const CO_OD_entryRecord_t OD_record2319[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[24].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[24].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[24].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[24].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[24].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[24].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[24].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[24].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[24].threshold, 0x8D,  4}};
-/*0x231A*/ const CO_OD_entryRecord_t OD_record231A[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[25].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[25].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[25].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[25].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[25].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[25].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[25].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[25].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[25].threshold, 0x8D,  4}};
-/*0x231B*/ const CO_OD_entryRecord_t OD_record231B[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[26].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[26].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[26].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[26].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[26].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[26].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[26].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[26].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[26].threshold, 0x8D,  4}};
-/*0x231C*/ const CO_OD_entryRecord_t OD_record231C[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[27].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[27].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[27].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[27].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[27].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[27].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[27].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[27].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[27].threshold, 0x8D,  4}};
-/*0x231D*/ const CO_OD_entryRecord_t OD_record231D[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[28].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[28].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[28].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[28].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[28].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[28].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[28].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[28].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[28].threshold, 0x8D,  4}};
-/*0x231E*/ const CO_OD_entryRecord_t OD_record231E[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[29].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[29].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[29].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[29].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[29].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[29].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[29].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[29].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[29].threshold, 0x8D,  4}};
-/*0x231F*/ const CO_OD_entryRecord_t OD_record231F[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[30].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[30].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[30].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[30].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[30].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[30].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[30].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[30].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[30].threshold, 0x8D,  4}};
-/*0x2320*/ const CO_OD_entryRecord_t OD_record2320[9] = {
-           {(void*)&CO_OD_ROM.traceConfig[31].maxSubIndex, 0x05,  1},
-           {(void*)&CO_OD_ROM.traceConfig[31].size, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[31].axisNo, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[31].name[0], 0x0D, 30},
-           {(void*)&CO_OD_ROM.traceConfig[31].color[0], 0x0D, 20},
-           {(void*)&CO_OD_ROM.traceConfig[31].map, 0x8D,  4},
-           {(void*)&CO_OD_ROM.traceConfig[31].format, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[31].trigger, 0x0D,  1},
-           {(void*)&CO_OD_ROM.traceConfig[31].threshold, 0x8D,  4}};
-/*0x2401*/ const CO_OD_entryRecord_t OD_record2401[7] = {
-           {(void*)&CO_OD_RAM.trace[0].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[0].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[0].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[0].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[0].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[0].triggerTime, 0xBE,  4}};
-/*0x2402*/ const CO_OD_entryRecord_t OD_record2402[7] = {
-           {(void*)&CO_OD_RAM.trace[1].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[1].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[1].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[1].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[1].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[1].triggerTime, 0xBE,  4}};
-/*0x2403*/ const CO_OD_entryRecord_t OD_record2403[7] = {
-           {(void*)&CO_OD_RAM.trace[2].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[2].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[2].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[2].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[2].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[2].triggerTime, 0xBE,  4}};
-/*0x2404*/ const CO_OD_entryRecord_t OD_record2404[7] = {
-           {(void*)&CO_OD_RAM.trace[3].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[3].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[3].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[3].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[3].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[3].triggerTime, 0xBE,  4}};
-/*0x2405*/ const CO_OD_entryRecord_t OD_record2405[7] = {
-           {(void*)&CO_OD_RAM.trace[4].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[4].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[4].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[4].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[4].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[4].triggerTime, 0xBE,  4}};
-/*0x2406*/ const CO_OD_entryRecord_t OD_record2406[7] = {
-           {(void*)&CO_OD_RAM.trace[5].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[5].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[5].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[5].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[5].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[5].triggerTime, 0xBE,  4}};
-/*0x2407*/ const CO_OD_entryRecord_t OD_record2407[7] = {
-           {(void*)&CO_OD_RAM.trace[6].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[6].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[6].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[6].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[6].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[6].triggerTime, 0xBE,  4}};
-/*0x2408*/ const CO_OD_entryRecord_t OD_record2408[7] = {
-           {(void*)&CO_OD_RAM.trace[7].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[7].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[7].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[7].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[7].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[7].triggerTime, 0xBE,  4}};
-/*0x2409*/ const CO_OD_entryRecord_t OD_record2409[7] = {
-           {(void*)&CO_OD_RAM.trace[8].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[8].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[8].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[8].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[8].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[8].triggerTime, 0xBE,  4}};
-/*0x240A*/ const CO_OD_entryRecord_t OD_record240A[7] = {
-           {(void*)&CO_OD_RAM.trace[9].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[9].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[9].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[9].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[9].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[9].triggerTime, 0xBE,  4}};
-/*0x240B*/ const CO_OD_entryRecord_t OD_record240B[7] = {
-           {(void*)&CO_OD_RAM.trace[10].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[10].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[10].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[10].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[10].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[10].triggerTime, 0xBE,  4}};
-/*0x240C*/ const CO_OD_entryRecord_t OD_record240C[7] = {
-           {(void*)&CO_OD_RAM.trace[11].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[11].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[11].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[11].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[11].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[11].triggerTime, 0xBE,  4}};
-/*0x240D*/ const CO_OD_entryRecord_t OD_record240D[7] = {
-           {(void*)&CO_OD_RAM.trace[12].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[12].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[12].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[12].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[12].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[12].triggerTime, 0xBE,  4}};
-/*0x240E*/ const CO_OD_entryRecord_t OD_record240E[7] = {
-           {(void*)&CO_OD_RAM.trace[13].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[13].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[13].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[13].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[13].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[13].triggerTime, 0xBE,  4}};
-/*0x240F*/ const CO_OD_entryRecord_t OD_record240F[7] = {
-           {(void*)&CO_OD_RAM.trace[14].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[14].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[14].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[14].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[14].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[14].triggerTime, 0xBE,  4}};
-/*0x2410*/ const CO_OD_entryRecord_t OD_record2410[7] = {
-           {(void*)&CO_OD_RAM.trace[15].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[15].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[15].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[15].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[15].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[15].triggerTime, 0xBE,  4}};
-/*0x2411*/ const CO_OD_entryRecord_t OD_record2411[7] = {
-           {(void*)&CO_OD_RAM.trace[16].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[16].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[16].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[16].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[16].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[16].triggerTime, 0xBE,  4}};
-/*0x2412*/ const CO_OD_entryRecord_t OD_record2412[7] = {
-           {(void*)&CO_OD_RAM.trace[17].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[17].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[17].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[17].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[17].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[17].triggerTime, 0xBE,  4}};
-/*0x2413*/ const CO_OD_entryRecord_t OD_record2413[7] = {
-           {(void*)&CO_OD_RAM.trace[18].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[18].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[18].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[18].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[18].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[18].triggerTime, 0xBE,  4}};
-/*0x2414*/ const CO_OD_entryRecord_t OD_record2414[7] = {
-           {(void*)&CO_OD_RAM.trace[19].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[19].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[19].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[19].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[19].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[19].triggerTime, 0xBE,  4}};
-/*0x2415*/ const CO_OD_entryRecord_t OD_record2415[7] = {
-           {(void*)&CO_OD_RAM.trace[20].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[20].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[20].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[20].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[20].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[20].triggerTime, 0xBE,  4}};
-/*0x2416*/ const CO_OD_entryRecord_t OD_record2416[7] = {
-           {(void*)&CO_OD_RAM.trace[21].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[21].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[21].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[21].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[21].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[21].triggerTime, 0xBE,  4}};
-/*0x2417*/ const CO_OD_entryRecord_t OD_record2417[7] = {
-           {(void*)&CO_OD_RAM.trace[22].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[22].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[22].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[22].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[22].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[22].triggerTime, 0xBE,  4}};
-/*0x2418*/ const CO_OD_entryRecord_t OD_record2418[7] = {
-           {(void*)&CO_OD_RAM.trace[23].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[23].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[23].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[23].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[23].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[23].triggerTime, 0xBE,  4}};
-/*0x2419*/ const CO_OD_entryRecord_t OD_record2419[7] = {
-           {(void*)&CO_OD_RAM.trace[24].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[24].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[24].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[24].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[24].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[24].triggerTime, 0xBE,  4}};
-/*0x241A*/ const CO_OD_entryRecord_t OD_record241A[7] = {
-           {(void*)&CO_OD_RAM.trace[25].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[25].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[25].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[25].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[25].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[25].triggerTime, 0xBE,  4}};
-/*0x241B*/ const CO_OD_entryRecord_t OD_record241B[7] = {
-           {(void*)&CO_OD_RAM.trace[26].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[26].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[26].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[26].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[26].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[26].triggerTime, 0xBE,  4}};
-/*0x241C*/ const CO_OD_entryRecord_t OD_record241C[7] = {
-           {(void*)&CO_OD_RAM.trace[27].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[27].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[27].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[27].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[27].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[27].triggerTime, 0xBE,  4}};
-/*0x241D*/ const CO_OD_entryRecord_t OD_record241D[7] = {
-           {(void*)&CO_OD_RAM.trace[28].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[28].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[28].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[28].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[28].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[28].triggerTime, 0xBE,  4}};
-/*0x241E*/ const CO_OD_entryRecord_t OD_record241E[7] = {
-           {(void*)&CO_OD_RAM.trace[29].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[29].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[29].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[29].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[29].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[29].triggerTime, 0xBE,  4}};
-/*0x241F*/ const CO_OD_entryRecord_t OD_record241F[7] = {
-           {(void*)&CO_OD_RAM.trace[30].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[30].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[30].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[30].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[30].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[30].triggerTime, 0xBE,  4}};
-/*0x2420*/ const CO_OD_entryRecord_t OD_record2420[7] = {
-           {(void*)&CO_OD_RAM.trace[31].maxSubIndex, 0x06,  1},
-           {(void*)&CO_OD_RAM.trace[31].size, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[31].value, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[31].min, 0xBE,  4},
-           {(void*)&CO_OD_RAM.trace[31].max, 0xBE,  4},
-           {0, 0x06,  0},
-           {(void*)&CO_OD_RAM.trace[31].triggerTime, 0xBE,  4}};
-
-
-/*******************************************************************************
-   OBJECT DICTIONARY
-*******************************************************************************/
-const CO_OD_entry_t CO_OD[CO_OD_NoOfElements] = {
-{0x1000, 0x00, 0x85,  4, (void*)&CO_OD_ROM.deviceType},
-{0x1001, 0x00, 0x36,  1, (void*)&CO_OD_RAM.errorRegister},
-{0x1002, 0x00, 0xB6,  4, (void*)&CO_OD_RAM.manufacturerStatusRegister},
-{0x1003, 0x08, 0x8E,  4, (void*)&CO_OD_RAM.preDefinedErrorField[0]},
-{0x1005, 0x00, 0x8D,  4, (void*)&CO_OD_ROM.COB_ID_SYNCMessage},
-{0x1006, 0x00, 0x8D,  4, (void*)&CO_OD_ROM.communicationCyclePeriod},
-{0x1007, 0x00, 0x8D,  4, (void*)&CO_OD_ROM.synchronousWindowLength},
-{0x1008, 0x00, 0x05, 11, (void*)&CO_OD_ROM.manufacturerDeviceName[0]},
-{0x1009, 0x00, 0x05,  4, (void*)&CO_OD_ROM.manufacturerHardwareVersion[0]},
-{0x100A, 0x00, 0x05,  4, (void*)&CO_OD_ROM.manufacturerSoftwareVersion[0]},
-{0x1010, 0x01, 0x8E,  4, (void*)&CO_OD_RAM.storeParameters[0]},
-{0x1011, 0x01, 0x8E,  4, (void*)&CO_OD_RAM.restoreDefaultParameters[0]},
-{0x1014, 0x00, 0x85,  4, (void*)&CO_OD_ROM.COB_ID_EMCY},
-{0x1015, 0x00, 0x8D,  2, (void*)&CO_OD_ROM.inhibitTimeEMCY},
-{0x1016, 0x04, 0x8D,  4, (void*)&CO_OD_ROM.consumerHeartbeatTime[0]},
-{0x1017, 0x00, 0x8D,  2, (void*)&CO_OD_ROM.producerHeartbeatTime},
-{0x1018, 0x04, 0x00,  0, (void*)&OD_record1018},
-{0x1019, 0x00, 0x0D,  1, (void*)&CO_OD_ROM.synchronousCounterOverflowValue},
-{0x1029, 0x06, 0x0D,  1, (void*)&CO_OD_ROM.errorBehavior[0]},
-{0x1200, 0x02, 0x00,  0, (void*)&OD_record1200},
-{0x1280, 0x03, 0x00,  0, (void*)&OD_record1280},
-{0x1400, 0x02, 0x00,  0, (void*)&OD_record1400},
-{0x1401, 0x02, 0x00,  0, (void*)&OD_record1401},
-{0x1402, 0x02, 0x00,  0, (void*)&OD_record1402},
-{0x1403, 0x02, 0x00,  0, (void*)&OD_record1403},
-{0x1404, 0x02, 0x00,  0, (void*)&OD_record1404},
-{0x1405, 0x02, 0x00,  0, (void*)&OD_record1405},
-{0x1406, 0x02, 0x00,  0, (void*)&OD_record1406},
-{0x1407, 0x02, 0x00,  0, (void*)&OD_record1407},
-{0x1408, 0x02, 0x00,  0, (void*)&OD_record1408},
-{0x1409, 0x02, 0x00,  0, (void*)&OD_record1409},
-{0x140A, 0x02, 0x00,  0, (void*)&OD_record140A},
-{0x140B, 0x02, 0x00,  0, (void*)&OD_record140B},
-{0x140C, 0x02, 0x00,  0, (void*)&OD_record140C},
-{0x140D, 0x02, 0x00,  0, (void*)&OD_record140D},
-{0x140E, 0x02, 0x00,  0, (void*)&OD_record140E},
-{0x140F, 0x02, 0x00,  0, (void*)&OD_record140F},
-{0x1600, 0x08, 0x00,  0, (void*)&OD_record1600},
-{0x1601, 0x08, 0x00,  0, (void*)&OD_record1601},
-{0x1602, 0x08, 0x00,  0, (void*)&OD_record1602},
-{0x1603, 0x08, 0x00,  0, (void*)&OD_record1603},
-{0x1604, 0x08, 0x00,  0, (void*)&OD_record1604},
-{0x1605, 0x08, 0x00,  0, (void*)&OD_record1605},
-{0x1606, 0x08, 0x00,  0, (void*)&OD_record1606},
-{0x1607, 0x08, 0x00,  0, (void*)&OD_record1607},
-{0x1608, 0x08, 0x00,  0, (void*)&OD_record1608},
-{0x1609, 0x08, 0x00,  0, (void*)&OD_record1609},
-{0x160A, 0x08, 0x00,  0, (void*)&OD_record160A},
-{0x160B, 0x08, 0x00,  0, (void*)&OD_record160B},
-{0x160C, 0x08, 0x00,  0, (void*)&OD_record160C},
-{0x160D, 0x08, 0x00,  0, (void*)&OD_record160D},
-{0x160E, 0x08, 0x00,  0, (void*)&OD_record160E},
-{0x160F, 0x08, 0x00,  0, (void*)&OD_record160F},
-{0x1800, 0x06, 0x00,  0, (void*)&OD_record1800},
-{0x1801, 0x06, 0x00,  0, (void*)&OD_record1801},
-{0x1802, 0x06, 0x00,  0, (void*)&OD_record1802},
-{0x1803, 0x06, 0x00,  0, (void*)&OD_record1803},
-{0x1804, 0x06, 0x00,  0, (void*)&OD_record1804},
-{0x1805, 0x06, 0x00,  0, (void*)&OD_record1805},
-{0x1806, 0x06, 0x00,  0, (void*)&OD_record1806},
-{0x1807, 0x06, 0x00,  0, (void*)&OD_record1807},
-{0x1808, 0x06, 0x00,  0, (void*)&OD_record1808},
-{0x1809, 0x06, 0x00,  0, (void*)&OD_record1809},
-{0x180A, 0x06, 0x00,  0, (void*)&OD_record180A},
-{0x180B, 0x06, 0x00,  0, (void*)&OD_record180B},
-{0x180C, 0x06, 0x00,  0, (void*)&OD_record180C},
-{0x180D, 0x06, 0x00,  0, (void*)&OD_record180D},
-{0x180E, 0x06, 0x00,  0, (void*)&OD_record180E},
-{0x180F, 0x06, 0x00,  0, (void*)&OD_record180F},
-{0x1A00, 0x08, 0x00,  0, (void*)&OD_record1A00},
-{0x1A01, 0x08, 0x00,  0, (void*)&OD_record1A01},
-{0x1A02, 0x08, 0x00,  0, (void*)&OD_record1A02},
-{0x1A03, 0x08, 0x00,  0, (void*)&OD_record1A03},
-{0x1A04, 0x08, 0x00,  0, (void*)&OD_record1A04},
-{0x1A05, 0x08, 0x00,  0, (void*)&OD_record1A05},
-{0x1A06, 0x08, 0x00,  0, (void*)&OD_record1A06},
-{0x1A07, 0x08, 0x00,  0, (void*)&OD_record1A07},
-{0x1A08, 0x08, 0x00,  0, (void*)&OD_record1A08},
-{0x1A09, 0x08, 0x00,  0, (void*)&OD_record1A09},
-{0x1A0A, 0x08, 0x00,  0, (void*)&OD_record1A0A},
-{0x1A0B, 0x08, 0x00,  0, (void*)&OD_record1A0B},
-{0x1A0C, 0x08, 0x00,  0, (void*)&OD_record1A0C},
-{0x1A0D, 0x08, 0x00,  0, (void*)&OD_record1A0D},
-{0x1A0E, 0x08, 0x00,  0, (void*)&OD_record1A0E},
-{0x1A0F, 0x08, 0x00,  0, (void*)&OD_record1A0F},
-{0x1F80, 0x00, 0x8D,  4, (void*)&CO_OD_ROM.NMTStartup},
-{0x2100, 0x00, 0x36, 10, (void*)&CO_OD_RAM.errorStatusBits[0]},
-{0x2101, 0x00, 0x0D,  1, (void*)&CO_OD_ROM.CANNodeID},
-{0x2102, 0x00, 0x8D,  2, (void*)&CO_OD_ROM.CANBitRate},
-{0x2103, 0x00, 0x8E,  2, (void*)&CO_OD_RAM.SYNCCounter},
-{0x2104, 0x00, 0x86,  2, (void*)&CO_OD_RAM.SYNCTime},
-{0x2106, 0x00, 0x87,  4, (void*)&CO_OD_EEPROM.powerOnCounter},
-{0x2107, 0x05, 0xBE,  2, (void*)&CO_OD_RAM.performance[0]},
-{0x2108, 0x01, 0xB6,  2, (void*)&CO_OD_RAM.temperature[0]},
-{0x2109, 0x01, 0xB6,  2, (void*)&CO_OD_RAM.voltage[0]},
-{0x2110, 0x20, 0xFE,  4, (void*)&CO_OD_RAM.variableInt32[0]},
-{0x2111, 0x10, 0xFD,  4, (void*)&CO_OD_ROM.variableROMInt32[0]},
-{0x2112, 0x10, 0xFF,  4, (void*)&CO_OD_EEPROM.variableNVInt32[0]},
-{0x2120, 0x05, 0x00,  0, (void*)&OD_record2120},
-{0x2130, 0x03, 0x00,  0, (void*)&OD_record2130},
-{0x2301, 0x08, 0x00,  0, (void*)&OD_record2301},
-{0x2302, 0x08, 0x00,  0, (void*)&OD_record2302},
-{0x2303, 0x08, 0x00,  0, (void*)&OD_record2303},
-{0x2304, 0x08, 0x00,  0, (void*)&OD_record2304},
-{0x2305, 0x08, 0x00,  0, (void*)&OD_record2305},
-{0x2306, 0x08, 0x00,  0, (void*)&OD_record2306},
-{0x2307, 0x08, 0x00,  0, (void*)&OD_record2307},
-{0x2308, 0x08, 0x00,  0, (void*)&OD_record2308},
-{0x2309, 0x08, 0x00,  0, (void*)&OD_record2309},
-{0x230A, 0x08, 0x00,  0, (void*)&OD_record230A},
-{0x230B, 0x08, 0x00,  0, (void*)&OD_record230B},
-{0x230C, 0x08, 0x00,  0, (void*)&OD_record230C},
-{0x230D, 0x08, 0x00,  0, (void*)&OD_record230D},
-{0x230E, 0x08, 0x00,  0, (void*)&OD_record230E},
-{0x230F, 0x08, 0x00,  0, (void*)&OD_record230F},
-{0x2310, 0x08, 0x00,  0, (void*)&OD_record2310},
-{0x2311, 0x08, 0x00,  0, (void*)&OD_record2311},
-{0x2312, 0x08, 0x00,  0, (void*)&OD_record2312},
-{0x2313, 0x08, 0x00,  0, (void*)&OD_record2313},
-{0x2314, 0x08, 0x00,  0, (void*)&OD_record2314},
-{0x2315, 0x08, 0x00,  0, (void*)&OD_record2315},
-{0x2316, 0x08, 0x00,  0, (void*)&OD_record2316},
-{0x2317, 0x08, 0x00,  0, (void*)&OD_record2317},
-{0x2318, 0x08, 0x00,  0, (void*)&OD_record2318},
-{0x2319, 0x08, 0x00,  0, (void*)&OD_record2319},
-{0x231A, 0x08, 0x00,  0, (void*)&OD_record231A},
-{0x231B, 0x08, 0x00,  0, (void*)&OD_record231B},
-{0x231C, 0x08, 0x00,  0, (void*)&OD_record231C},
-{0x231D, 0x08, 0x00,  0, (void*)&OD_record231D},
-{0x231E, 0x08, 0x00,  0, (void*)&OD_record231E},
-{0x231F, 0x08, 0x00,  0, (void*)&OD_record231F},
-{0x2320, 0x08, 0x00,  0, (void*)&OD_record2320},
-{0x2400, 0x00, 0x3E,  1, (void*)&CO_OD_RAM.traceEnable},
-{0x2401, 0x06, 0x00,  0, (void*)&OD_record2401},
-{0x2402, 0x06, 0x00,  0, (void*)&OD_record2402},
-{0x2403, 0x06, 0x00,  0, (void*)&OD_record2403},
-{0x2404, 0x06, 0x00,  0, (void*)&OD_record2404},
-{0x2405, 0x06, 0x00,  0, (void*)&OD_record2405},
-{0x2406, 0x06, 0x00,  0, (void*)&OD_record2406},
-{0x2407, 0x06, 0x00,  0, (void*)&OD_record2407},
-{0x2408, 0x06, 0x00,  0, (void*)&OD_record2408},
-{0x2409, 0x06, 0x00,  0, (void*)&OD_record2409},
-{0x240A, 0x06, 0x00,  0, (void*)&OD_record240A},
-{0x240B, 0x06, 0x00,  0, (void*)&OD_record240B},
-{0x240C, 0x06, 0x00,  0, (void*)&OD_record240C},
-{0x240D, 0x06, 0x00,  0, (void*)&OD_record240D},
-{0x240E, 0x06, 0x00,  0, (void*)&OD_record240E},
-{0x240F, 0x06, 0x00,  0, (void*)&OD_record240F},
-{0x2410, 0x06, 0x00,  0, (void*)&OD_record2410},
-{0x2411, 0x06, 0x00,  0, (void*)&OD_record2411},
-{0x2412, 0x06, 0x00,  0, (void*)&OD_record2412},
-{0x2413, 0x06, 0x00,  0, (void*)&OD_record2413},
-{0x2414, 0x06, 0x00,  0, (void*)&OD_record2414},
-{0x2415, 0x06, 0x00,  0, (void*)&OD_record2415},
-{0x2416, 0x06, 0x00,  0, (void*)&OD_record2416},
-{0x2417, 0x06, 0x00,  0, (void*)&OD_record2417},
-{0x2418, 0x06, 0x00,  0, (void*)&OD_record2418},
-{0x2419, 0x06, 0x00,  0, (void*)&OD_record2419},
-{0x241A, 0x06, 0x00,  0, (void*)&OD_record241A},
-{0x241B, 0x06, 0x00,  0, (void*)&OD_record241B},
-{0x241C, 0x06, 0x00,  0, (void*)&OD_record241C},
-{0x241D, 0x06, 0x00,  0, (void*)&OD_record241D},
-{0x241E, 0x06, 0x00,  0, (void*)&OD_record241E},
-{0x241F, 0x06, 0x00,  0, (void*)&OD_record241F},
-{0x2420, 0x06, 0x00,  0, (void*)&OD_record2420},
-{0x6000, 0x08, 0x76,  1, (void*)&CO_OD_RAM.readInput8Bit[0]},
-{0x6200, 0x08, 0x3E,  1, (void*)&CO_OD_RAM.writeOutput8Bit[0]},
-{0x6401, 0x0C, 0xB6,  2, (void*)&CO_OD_RAM.readAnalogueInput16Bit[0]},
-{0x6411, 0x08, 0xBE,  2, (void*)&CO_OD_RAM.writeAnalogueOutput16Bit[0]},
-};
-
diff --git a/canopend/objDict/CO_ODorig.h b/canopend/objDict/CO_ODorig.h
deleted file mode 100644
index 23ca665..0000000
--- a/canopend/objDict/CO_ODorig.h
+++ /dev/null
@@ -1,463 +0,0 @@
-/*
- * CANopen Object Dictionary.
- *
- * This file was automatically generated with CANopenNode Object
- * Dictionary Editor. DON'T EDIT THIS FILE MANUALLY !!!!
- * Object Dictionary Editor is currently an older, but functional web
- * application. For more info see See 'Object_Dictionary_Editor/about.html' in
- * <http://sourceforge.net/p/canopennode/code_complete/ci/master/tree/>
- * For more information on CANopen Object Dictionary see <CO_SDO.h>.
- *
- * @file        CO_OD.h
- * @author      Janez Paternoster
- * @copyright   2010 - 2016 Janez Paternoster
- *
- * This file is part of CANopenNode, an opensource CANopen Stack.
- * Project home page is <https://github.com/CANopenNode/CANopenNode>.
- * For more information on CANopen see <http://www.can-cia.org/>.
- *
- * CANopenNode is free and open source software: you can redistribute
- * it and/or modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation, either version 2 of the
- * License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program. If not, see <http://www.gnu.org/licenses/>.
- */
-
-
-#ifndef CO_OD_H
-#define CO_OD_H
-
-
-/*******************************************************************************
-   CANopen DATA DYPES
-*******************************************************************************/
-   typedef uint8_t      UNSIGNED8;
-   typedef uint16_t     UNSIGNED16;
-   typedef uint32_t     UNSIGNED32;
-   typedef uint64_t     UNSIGNED64;
-   typedef int8_t       INTEGER8;
-   typedef int16_t      INTEGER16;
-   typedef int32_t      INTEGER32;
-   typedef int64_t      INTEGER64;
-   typedef float32_t    REAL32;
-   typedef float64_t    REAL64;
-   typedef char_t       VISIBLE_STRING;
-   typedef oChar_t      OCTET_STRING;
-   typedef domain_t     DOMAIN;
-
-
-/*******************************************************************************
-   FILE INFO:
-      FileName:     CANopenSocket
-      FileVersion:  -
-      CreationTime: 12:05:34
-      CreationDate: 2016-07-26
-      CreatedBy:    JP
-*******************************************************************************/
-
-
-/*******************************************************************************
-   DEVICE INFO:
-      VendorName:     CANopenNode
-      VendorNumber:   0
-      ProductName:    CANopenNode
-      ProductNumber:  0
-*******************************************************************************/
-
-
-/*******************************************************************************
-   FEATURES
-*******************************************************************************/
-   #define CO_NO_SYNC                     1   //Associated objects: 1005, 1006, 1007, 2103, 2104
-   #define CO_NO_EMERGENCY                1   //Associated objects: 1014, 1015
-   #define CO_NO_SDO_SERVER               1   //Associated objects: 1200
-   #define CO_NO_SDO_CLIENT               1   //Associated objects: 1280
-   #define CO_NO_RPDO                     16  //Associated objects from index 1400 to 160F, count = 32
-   #define CO_NO_TPDO                     16  //Associated objects from index 1800 to 1A0F, count = 32
-   #define CO_NO_NMT_MASTER               1
-   #define CO_NO_TRACE                    32  //Associated objects from index 2301 to 2420, count = 65
-
-
-/*******************************************************************************
-   OBJECT DICTIONARY
-*******************************************************************************/
-   #define CO_OD_NoOfElements             169
-
-
-/*******************************************************************************
-   TYPE DEFINITIONS FOR RECORDS
-*******************************************************************************/
-/*1018      */ typedef struct{
-               UNSIGNED8      maxSubIndex;
-               UNSIGNED32     vendorID;
-               UNSIGNED32     productCode;
-               UNSIGNED32     revisionNumber;
-               UNSIGNED32     serialNumber;
-               }              OD_identity_t;
-
-/*1200[1]   */ typedef struct{
-               UNSIGNED8      maxSubIndex;
-               UNSIGNED32     COB_IDClientToServer;
-               UNSIGNED32     COB_IDServerToClient;
-               }              OD_SDOServerParameter_t;
-
-/*1280[1]   */ typedef struct{
-               UNSIGNED8      maxSubIndex;
-               UNSIGNED32     COB_IDClientToServer;
-               UNSIGNED32     COB_IDServerToClient;
-               UNSIGNED8      nodeIDOfTheSDOServer;
-               }              OD_SDOClientParameter_t;
-
-/*1400[16]  */ typedef struct{
-               UNSIGNED8      maxSubIndex;
-               UNSIGNED32     COB_IDUsedByRPDO;
-               UNSIGNED8      transmissionType;
-               }              OD_RPDOCommunicationParameter_t;
-
-/*1600[16]  */ typedef struct{
-               UNSIGNED8      numberOfMappedObjects;
-               UNSIGNED32     mappedObject1;
-               UNSIGNED32     mappedObject2;
-               UNSIGNED32     mappedObject3;
-               UNSIGNED32     mappedObject4;
-               UNSIGNED32     mappedObject5;
-               UNSIGNED32     mappedObject6;
-               UNSIGNED32     mappedObject7;
-               UNSIGNED32     mappedObject8;
-               }              OD_RPDOMappingParameter_t;
-
-/*1800[16]  */ typedef struct{
-               UNSIGNED8      maxSubIndex;
-               UNSIGNED32     COB_IDUsedByTPDO;
-               UNSIGNED8      transmissionType;
-               UNSIGNED16     inhibitTime;
-               UNSIGNED8      compatibilityEntry;
-               UNSIGNED16     eventTimer;
-               UNSIGNED8      SYNCStartValue;
-               }              OD_TPDOCommunicationParameter_t;
-
-/*1A00[16]  */ typedef struct{
-               UNSIGNED8      numberOfMappedObjects;
-               UNSIGNED32     mappedObject1;
-               UNSIGNED32     mappedObject2;
-               UNSIGNED32     mappedObject3;
-               UNSIGNED32     mappedObject4;
-               UNSIGNED32     mappedObject5;
-               UNSIGNED32     mappedObject6;
-               UNSIGNED32     mappedObject7;
-               UNSIGNED32     mappedObject8;
-               }              OD_TPDOMappingParameter_t;
-
-/*2120      */ typedef struct{
-               UNSIGNED8      maxSubIndex;
-               INTEGER64      I64;
-               UNSIGNED64     U64;
-               REAL32         R32;
-               REAL64         R64;
-               DOMAIN         domain;
-               }              OD_testVar_t;
-
-/*2130      */ typedef struct{
-               UNSIGNED8      maxSubIndex;
-               VISIBLE_STRING string[30];
-               UNSIGNED64     epochTimeBaseMs;
-               UNSIGNED32     epochTimeOffsetMs;
-               }              OD_time_t;
-
-/*2301[32]  */ typedef struct{
-               UNSIGNED8      maxSubIndex;
-               UNSIGNED32     size;
-               UNSIGNED8      axisNo;
-               VISIBLE_STRING name[30];
-               VISIBLE_STRING color[20];
-               UNSIGNED32     map;
-               UNSIGNED8      format;
-               UNSIGNED8      trigger;
-               INTEGER32      threshold;
-               }              OD_traceConfig_t;
-
-/*2401[32]  */ typedef struct{
-               UNSIGNED8      maxSubIndex;
-               UNSIGNED32     size;
-               INTEGER32      value;
-               INTEGER32      min;
-               INTEGER32      max;
-               DOMAIN         plot;
-               UNSIGNED32     triggerTime;
-               }              OD_trace_t;
-
-
-/*******************************************************************************
-   STRUCTURES FOR VARIABLES IN DIFFERENT MEMORY LOCATIONS
-*******************************************************************************/
-#define  CO_OD_FIRST_LAST_WORD     0x55 //Any value from 0x01 to 0xFE. If changed, EEPROM will be reinitialized.
-
-/***** Structure for RAM variables ********************************************/
-struct sCO_OD_RAM{
-               UNSIGNED32     FirstWord;
-
-/*1001      */ UNSIGNED8      errorRegister;
-/*1002      */ UNSIGNED32     manufacturerStatusRegister;
-/*1003      */ UNSIGNED32     preDefinedErrorField[8];
-/*1010      */ UNSIGNED32     storeParameters[1];
-/*1011      */ UNSIGNED32     restoreDefaultParameters[1];
-/*1280[1]   */ OD_SDOClientParameter_t SDOClientParameter[1];
-/*2100      */ OCTET_STRING   errorStatusBits[10];
-/*2103      */ UNSIGNED16     SYNCCounter;
-/*2104      */ UNSIGNED16     SYNCTime;
-/*2107      */ UNSIGNED16     performance[5];
-/*2108      */ INTEGER16      temperature[1];
-/*2109      */ INTEGER16      voltage[1];
-/*2110      */ INTEGER32      variableInt32[32];
-/*2120      */ OD_testVar_t   testVar;
-/*2130      */ OD_time_t      time;
-/*2400      */ UNSIGNED8      traceEnable;
-/*2401[32]  */ OD_trace_t     trace[32];
-/*6000      */ UNSIGNED8      readInput8Bit[8];
-/*6200      */ UNSIGNED8      writeOutput8Bit[8];
-/*6401      */ INTEGER16      readAnalogueInput16Bit[12];
-/*6411      */ INTEGER16      writeAnalogueOutput16Bit[8];
-
-               UNSIGNED32     LastWord;
-};
-
-/***** Structure for EEPROM variables *****************************************/
-struct sCO_OD_EEPROM{
-               UNSIGNED32     FirstWord;
-
-/*2106      */ UNSIGNED32     powerOnCounter;
-/*2112      */ INTEGER32      variableNVInt32[16];
-
-               UNSIGNED32     LastWord;
-};
-
-
-/***** Structure for ROM variables ********************************************/
-struct sCO_OD_ROM{
-               UNSIGNED32     FirstWord;
-
-/*1000      */ UNSIGNED32     deviceType;
-/*1005      */ UNSIGNED32     COB_ID_SYNCMessage;
-/*1006      */ UNSIGNED32     communicationCyclePeriod;
-/*1007      */ UNSIGNED32     synchronousWindowLength;
-/*1008      */ VISIBLE_STRING manufacturerDeviceName[11];
-/*1009      */ VISIBLE_STRING manufacturerHardwareVersion[4];
-/*100A      */ VISIBLE_STRING manufacturerSoftwareVersion[4];
-/*1014      */ UNSIGNED32     COB_ID_EMCY;
-/*1015      */ UNSIGNED16     inhibitTimeEMCY;
-/*1016      */ UNSIGNED32     consumerHeartbeatTime[4];
-/*1017      */ UNSIGNED16     producerHeartbeatTime;
-/*1018      */ OD_identity_t  identity;
-/*1019      */ UNSIGNED8      synchronousCounterOverflowValue;
-/*1029      */ UNSIGNED8      errorBehavior[6];
-/*1200[1]   */ OD_SDOServerParameter_t SDOServerParameter[1];
-/*1400[16]  */ OD_RPDOCommunicationParameter_t RPDOCommunicationParameter[16];
-/*1600[16]  */ OD_RPDOMappingParameter_t RPDOMappingParameter[16];
-/*1800[16]  */ OD_TPDOCommunicationParameter_t TPDOCommunicationParameter[16];
-/*1A00[16]  */ OD_TPDOMappingParameter_t TPDOMappingParameter[16];
-/*1F80      */ UNSIGNED32     NMTStartup;
-/*2101      */ UNSIGNED8      CANNodeID;
-/*2102      */ UNSIGNED16     CANBitRate;
-/*2111      */ INTEGER32      variableROMInt32[16];
-/*2301[32]  */ OD_traceConfig_t traceConfig[32];
-
-               UNSIGNED32     LastWord;
-};
-
-
-/***** Declaration of Object Dictionary variables *****************************/
-extern struct sCO_OD_RAM CO_OD_RAM;
-
-extern struct sCO_OD_EEPROM CO_OD_EEPROM;
-
-extern struct sCO_OD_ROM CO_OD_ROM;
-
-
-/*******************************************************************************
-   ALIASES FOR OBJECT DICTIONARY VARIABLES
-*******************************************************************************/
-/*1000, Data Type: UNSIGNED32 */
-      #define OD_deviceType                              CO_OD_ROM.deviceType
-
-/*1001, Data Type: UNSIGNED8 */
-      #define OD_errorRegister                           CO_OD_RAM.errorRegister
-
-/*1002, Data Type: UNSIGNED32 */
-      #define OD_manufacturerStatusRegister              CO_OD_RAM.manufacturerStatusRegister
-
-/*1003, Data Type: UNSIGNED32, Array[8] */
-      #define OD_preDefinedErrorField                    CO_OD_RAM.preDefinedErrorField
-      #define ODL_preDefinedErrorField_arrayLength       8
-
-/*1005, Data Type: UNSIGNED32 */
-      #define OD_COB_ID_SYNCMessage                      CO_OD_ROM.COB_ID_SYNCMessage
-
-/*1006, Data Type: UNSIGNED32 */
-      #define OD_communicationCyclePeriod                CO_OD_ROM.communicationCyclePeriod
-
-/*1007, Data Type: UNSIGNED32 */
-      #define OD_synchronousWindowLength                 CO_OD_ROM.synchronousWindowLength
-
-/*1008, Data Type: VISIBLE_STRING, Array[11] */
-      #define OD_manufacturerDeviceName                  CO_OD_ROM.manufacturerDeviceName
-      #define ODL_manufacturerDeviceName_stringLength    11
-
-/*1009, Data Type: VISIBLE_STRING, Array[4] */
-      #define OD_manufacturerHardwareVersion             CO_OD_ROM.manufacturerHardwareVersion
-      #define ODL_manufacturerHardwareVersion_stringLength 4
-
-/*100A, Data Type: VISIBLE_STRING, Array[4] */
-      #define OD_manufacturerSoftwareVersion             CO_OD_ROM.manufacturerSoftwareVersion
-      #define ODL_manufacturerSoftwareVersion_stringLength 4
-
-/*1010, Data Type: UNSIGNED32, Array[1] */
-      #define OD_storeParameters                         CO_OD_RAM.storeParameters
-      #define ODL_storeParameters_arrayLength            1
-      #define ODA_storeParameters_saveAllParameters      0
-
-/*1011, Data Type: UNSIGNED32, Array[1] */
-      #define OD_restoreDefaultParameters                CO_OD_RAM.restoreDefaultParameters
-      #define ODL_restoreDefaultParameters_arrayLength   1
-      #define ODA_restoreDefaultParameters_restoreAllDefaultParameters 0
-
-/*1014, Data Type: UNSIGNED32 */
-      #define OD_COB_ID_EMCY                             CO_OD_ROM.COB_ID_EMCY
-
-/*1015, Data Type: UNSIGNED16 */
-      #define OD_inhibitTimeEMCY                         CO_OD_ROM.inhibitTimeEMCY
-
-/*1016, Data Type: UNSIGNED32, Array[4] */
-      #define OD_consumerHeartbeatTime                   CO_OD_ROM.consumerHeartbeatTime
-      #define ODL_consumerHeartbeatTime_arrayLength      4
-
-/*1017, Data Type: UNSIGNED16 */
-      #define OD_producerHeartbeatTime                   CO_OD_ROM.producerHeartbeatTime
-
-/*1018, Data Type: OD_identity_t */
-      #define OD_identity                                CO_OD_ROM.identity
-
-/*1019, Data Type: UNSIGNED8 */
-      #define OD_synchronousCounterOverflowValue         CO_OD_ROM.synchronousCounterOverflowValue
-
-/*1029, Data Type: UNSIGNED8, Array[6] */
-      #define OD_errorBehavior                           CO_OD_ROM.errorBehavior
-      #define ODL_errorBehavior_arrayLength              6
-      #define ODA_errorBehavior_communication            0
-      #define ODA_errorBehavior_communicationOther       1
-      #define ODA_errorBehavior_communicationPassive     2
-      #define ODA_errorBehavior_generic                  3
-      #define ODA_errorBehavior_deviceProfile            4
-      #define ODA_errorBehavior_manufacturerSpecific     5
-
-/*1200[1], Data Type: OD_SDOServerParameter_t, Array[1] */
-      #define OD_SDOServerParameter                      CO_OD_ROM.SDOServerParameter
-
-/*1280[1], Data Type: OD_SDOClientParameter_t, Array[1] */
-      #define OD_SDOClientParameter                      CO_OD_RAM.SDOClientParameter
-
-/*1400[16], Data Type: OD_RPDOCommunicationParameter_t, Array[16] */
-      #define OD_RPDOCommunicationParameter              CO_OD_ROM.RPDOCommunicationParameter
-
-/*1600[16], Data Type: OD_RPDOMappingParameter_t, Array[16] */
-      #define OD_RPDOMappingParameter                    CO_OD_ROM.RPDOMappingParameter
-
-/*1800[16], Data Type: OD_TPDOCommunicationParameter_t, Array[16] */
-      #define OD_TPDOCommunicationParameter              CO_OD_ROM.TPDOCommunicationParameter
-
-/*1A00[16], Data Type: OD_TPDOMappingParameter_t, Array[16] */
-      #define OD_TPDOMappingParameter                    CO_OD_ROM.TPDOMappingParameter
-
-/*1F80, Data Type: UNSIGNED32 */
-      #define OD_NMTStartup                              CO_OD_ROM.NMTStartup
-
-/*2100, Data Type: OCTET_STRING, Array[10] */
-      #define OD_errorStatusBits                         CO_OD_RAM.errorStatusBits
-      #define ODL_errorStatusBits_stringLength           10
-
-/*2101, Data Type: UNSIGNED8 */
-      #define OD_CANNodeID                               CO_OD_ROM.CANNodeID
-
-/*2102, Data Type: UNSIGNED16 */
-      #define OD_CANBitRate                              CO_OD_ROM.CANBitRate
-
-/*2103, Data Type: UNSIGNED16 */
-      #define OD_SYNCCounter                             CO_OD_RAM.SYNCCounter
-
-/*2104, Data Type: UNSIGNED16 */
-      #define OD_SYNCTime                                CO_OD_RAM.SYNCTime
-
-/*2106, Data Type: UNSIGNED32 */
-      #define OD_powerOnCounter                          CO_OD_EEPROM.powerOnCounter
-
-/*2107, Data Type: UNSIGNED16, Array[5] */
-      #define OD_performance                             CO_OD_RAM.performance
-      #define ODL_performance_arrayLength                5
-      #define ODA_performance_cyclesPerSecond            0
-      #define ODA_performance_timerCycleTime             1
-      #define ODA_performance_timerCycleMaxTime          2
-      #define ODA_performance_mainCycleTime              3
-      #define ODA_performance_mainCycleMaxTime           4
-
-/*2108, Data Type: INTEGER16, Array[1] */
-      #define OD_temperature                             CO_OD_RAM.temperature
-      #define ODL_temperature_arrayLength                1
-      #define ODA_temperature_mainPCB                    0
-
-/*2109, Data Type: INTEGER16, Array[1] */
-      #define OD_voltage                                 CO_OD_RAM.voltage
-      #define ODL_voltage_arrayLength                    1
-      #define ODA_voltage_mainPCBSupply                  0
-
-/*2110, Data Type: INTEGER32, Array[32] */
-      #define OD_variableInt32                           CO_OD_RAM.variableInt32
-      #define ODL_variableInt32_arrayLength              32
-
-/*2111, Data Type: INTEGER32, Array[16] */
-      #define OD_variableROMInt32                        CO_OD_ROM.variableROMInt32
-      #define ODL_variableROMInt32_arrayLength           16
-
-/*2112, Data Type: INTEGER32, Array[16] */
-      #define OD_variableNVInt32                         CO_OD_EEPROM.variableNVInt32
-      #define ODL_variableNVInt32_arrayLength            16
-
-/*2120, Data Type: OD_testVar_t */
-      #define OD_testVar                                 CO_OD_RAM.testVar
-
-/*2130, Data Type: OD_time_t */
-      #define OD_time                                    CO_OD_RAM.time
-
-/*2301[32], Data Type: OD_traceConfig_t, Array[32] */
-      #define OD_traceConfig                             CO_OD_ROM.traceConfig
-
-/*2400, Data Type: UNSIGNED8 */
-      #define OD_traceEnable                             CO_OD_RAM.traceEnable
-
-/*2401[32], Data Type: OD_trace_t, Array[32] */
-      #define OD_trace                                   CO_OD_RAM.trace
-
-/*6000, Data Type: UNSIGNED8, Array[8] */
-      #define OD_readInput8Bit                           CO_OD_RAM.readInput8Bit
-      #define ODL_readInput8Bit_arrayLength              8
-
-/*6200, Data Type: UNSIGNED8, Array[8] */
-      #define OD_writeOutput8Bit                         CO_OD_RAM.writeOutput8Bit
-      #define ODL_writeOutput8Bit_arrayLength            8
-
-/*6401, Data Type: INTEGER16, Array[12] */
-      #define OD_readAnalogueInput16Bit                  CO_OD_RAM.readAnalogueInput16Bit
-      #define ODL_readAnalogueInput16Bit_arrayLength     12
-
-/*6411, Data Type: INTEGER16, Array[8] */
-      #define OD_writeAnalogueOutput16Bit                CO_OD_RAM.writeAnalogueOutput16Bit
-      #define ODL_writeAnalogueOutput16Bit_arrayLength   8
-
-
-#endif
-
diff --git a/canopend/objDict/CO_ODtest.c b/canopend/objDict/CO_ODtest.c
deleted file mode 100644
index 67148f5..0000000
--- a/canopend/objDict/CO_ODtest.c
+++ /dev/null
@@ -1,1908 +0,0 @@
-/*******************************************************************************
-
-   File - CO_OD.c/CO_OD.h
-   CANopen Object Dictionary.
-
-   Copyright (C) 2004-2008 Janez Paternoster
-
-   License: GNU Lesser General Public License (LGPL).
-
-   <http://canopennode.sourceforge.net>
-
-   (For more information see <CO_SDO.h>.)
-
-   This file is part of CANopenNode, an opensource CANopen Stack.
-   Project home page is <https://github.com/CANopenNode/CANopenNode>.
-   For more information on CANopen see <http://www.can-cia.org/>.
- 
-   CANopenNode is free and open source software: you can redistribute
-   it and/or modify it under the terms of the GNU General Public License
-   as published by the Free Software Foundation, either version 2 of the
-   License, or (at your option) any later version.
-  
-   This program is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
-   GNU General Public License for more details.
-  
-   You should have received a copy of the GNU General Public License
-   along with this program. If not, see <http://www.gnu.org/licenses/>.
-  
-   Following clarification and special exception to the GNU General Public
-   License is included to the distribution terms of CANopenNode:
-  
-   Linking this library statically or dynamically with other modules is
-   making a combined work based on this library. Thus, the terms and
-   conditions of the GNU General Public License cover the whole combination.
-  
-   As a special exception, the copyright holders of this library give
-   you permission to link this library with independent modules to
-   produce an executable, regardless of the license terms of these
-   independent modules, and to copy and distribute the resulting
-   executable under terms of your choice, provided that you also meet,
-   for each linked independent module, the terms and conditions of the
-   license of that module. An independent module is a module which is
-   not derived from or based on this library. If you modify this
-   library, you may extend this exception to your version of the
-   library, but you are not obliged to do so. If you do not wish
-   to do so, delete this exception statement from your version.
- 
-   This file was automatically generated with libedssharp Object
-   Dictionary Editor v0.6-xdd-alpha-81-gb562769
-   DON'T EDIT THIS FILE MANUALLY !!!!
-*******************************************************************************/
-
-
-#include "CO_driver.h"
-#include "CO_OD.h"
-#include "CO_SDO.h"
-
-
-/*******************************************************************************
-   DEFINITION AND INITIALIZATION OF OBJECT DICTIONARY VARIABLES
-*******************************************************************************/
-
-
-/***** Definition for ROM variables ********************************************/
-struct sCO_OD_ROM CO_OD_ROM = {
-           CO_OD_FIRST_LAST_WORD,
-
-
-           CO_OD_FIRST_LAST_WORD,
-};
-
-
-/***** Definition for RAM variables ********************************************/
-struct sCO_OD_RAM CO_OD_RAM = {
-           CO_OD_FIRST_LAST_WORD,
-
-/*1000*/ 0x0000L,
-/*1001*/ 0x0L,
-/*1002*/ 0x0000L,
-/*1003*/ {0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1005*/ 0x40000080L,
-/*1006*/ 0x2710L,
-/*1007*/ 0x0000L,
-/*1008*/ {'C', 'A', 'N', 'o', 'p', 'e', 'n', 'N', 'o', 'd', 'e'},
-/*1009*/ {'3', '.', '0', '0'},
-/*100a*/ {'3', '.', '0', '0'},
-/*1010*/ {0x0003L},
-/*1011*/ {0x0001L},
-/*1014*/ 0x0080L,
-/*1015*/ 0x64,
-/*1016*/ {0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1017*/ 0x3e8,
-/*1018*/ {0x4L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1019*/ 0x0L,
-/*1029*/ {0x0L, 0x0L, 0x1L, 0x0L, 0x0L, 0x0L},
-/*1200*/ {{0x2L, 0x0600L, 0x0580L}},
-/*1280*/ {{0x3L, 0x0000L, 0x0000L, 0x0L}},
-/*1400*/ {{0x2L, 0x0181L, 0xffL},
-/*1401*/ {0x2L, 0x0182L, 0xffL},
-/*1402*/ {0x2L, 0x0183L, 0xffL},
-/*1403*/ {0x2L, 0x0184L, 0xffL},
-/*1404*/ {0x2L, 0x0185L, 0xfeL},
-/*1405*/ {0x2L, 0x0186L, 0xfeL},
-/*1406*/ {0x2L, 0x0281L, 0xfeL},
-/*1407*/ {0x2L, 0x0282L, 0xfeL},
-/*1408*/ {0x2L, 0x0283L, 0xfeL},
-/*1409*/ {0x2L, 0x0284L, 0xfeL},
-/*140a*/ {0x2L, 0x0285L, 0xfeL},
-/*140b*/ {0x2L, 0x0286L, 0xfeL},
-/*140c*/ {0x2L, 0x01E3L, 0xfeL},
-/*140d*/ {0x2L, 0x0000L, 0xfeL},
-/*140e*/ {0x2L, 0x0000L, 0xfeL},
-/*140f*/ {0x2L, 0x0000L, 0xfeL}},
-/*1600*/ {{0x2L, 0x60410110L, 0x60770110L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1601*/ {0x2L, 0x60400210L, 0x60770210L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1602*/ {0x2L, 0x60410310L, 0x60770310L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1603*/ {0x2L, 0x60410410L, 0x60770410L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1604*/ {0x1L, 0x60410510L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1605*/ {0x1L, 0x60410610L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1606*/ {0x2L, 0x60640120L, 0x606c0120L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1607*/ {0x2L, 0x60640220L, 0x606c0220L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1608*/ {0x2L, 0x60640320L, 0x606c0320L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1609*/ {0x2L, 0x60640420L, 0x606c0420L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*160a*/ {0x2L, 0x60640520L, 0x606c0520L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*160b*/ {0x2L, 0x60640620L, 0x606c0620L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*160c*/ {0x1L, 0x20000010L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*160d*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*160e*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*160f*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L}},
-/*1800*/ {{0x6L, 0x0201L, 0xffL, 0x00, 0x0L, 0x00, 0x0L},
-/*1801*/ {0x6L, 0x0202L, 0xffL, 0x00, 0x0L, 0x00, 0x0L},
-/*1802*/ {0x6L, 0x0203L, 0xffL, 0x00, 0x0L, 0x00, 0x0L},
-/*1803*/ {0x6L, 0x0204L, 0xffL, 0x00, 0x0L, 0x00, 0x0L},
-/*1804*/ {0x6L, 0x0205L, 0xffL, 0x00, 0x0L, 0x00, 0x0L},
-/*1805*/ {0x6L, 0x0206L, 0xffL, 0x00, 0x0L, 0x00, 0x0L},
-/*1806*/ {0x6L, 0x0301L, 0xffL, 0x00, 0x0L, 0x00, 0x0L},
-/*1807*/ {0x6L, 0x0302L, 0xffL, 0x00, 0x0L, 0x00, 0x0L},
-/*1808*/ {0x6L, 0x0303L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*1809*/ {0x6L, 0x0304L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*180a*/ {0x6L, 0x0305L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*180b*/ {0x6L, 0x0306L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*180c*/ {0x6L, 0x0000L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*180d*/ {0x6L, 0x0000L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*180e*/ {0x6L, 0x0000L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L},
-/*180f*/ {0x6L, 0x0000L, 0xfeL, 0x00, 0x0L, 0x00, 0x0L}},
-/*1a00*/ {{0x1L, 0x60400110L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a01*/ {0x1L, 0x60400210L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a02*/ {0x1L, 0x60400310L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a03*/ {0x1L, 0x60400410L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a04*/ {0x1L, 0x60400510L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a05*/ {0x1L, 0x60400610L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a06*/ {0x2L, 0x607a0120L, 0x60ff0120L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a07*/ {0x2L, 0x607a0220L, 0x60ff0220L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a08*/ {0x2L, 0x607a0320L, 0x60ff0320L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a09*/ {0x2L, 0x607a0420L, 0x60ff0420L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a0a*/ {0x2L, 0x607a0520L, 0x60ff0520L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a0b*/ {0x2L, 0x607a0620L, 0x60ff0620L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a0c*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a0d*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a0e*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*1a0f*/ {0x0L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L}},
-/*1f80*/ 0x0000L,
-/*2000*/ 0x00,
-/*2100*/ {0x0L},
-/*2101*/ 0x20L,
-/*2102*/ 0xfa,
-/*2103*/ 0x00,
-/*2104*/ 0x00,
-/*2106*/ 0x0000L,
-/*2107*/ {0x3e8, 0x00, 0x00, 0x00, 0x00},
-/*2108*/ {0x00},
-/*2109*/ {0x00},
-/*2110*/ {0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*2111*/ {0x0001L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*2112*/ {0x0001L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*2120*/ {0x5L, 0x1234567890abcdefL, 0x234567890abcdef1L, 12.345, 456.789, 0},
-/*2130*/ {0x3L, {'-'}, 0x00000000L, 0x0000L},
-/*2301*/ {{0x8L, 0x03e8L, 0x0L, {'T', 'r', 'a', 'c', 'e', '1'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2302*/ {0x8L, 0x03e8L, 0x0L, {'T', 'r', 'a', 'c', 'e', '2'}, {'g', 'r', 'e', 'e', 'n'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2303*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2304*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2305*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2306*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2307*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2308*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2309*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*230a*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*230b*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*230c*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*230d*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*230e*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*230f*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2310*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2311*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2312*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2313*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2314*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2315*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2316*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2317*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2318*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2319*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*231a*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*231b*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*231c*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*231d*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*231e*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*231f*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L},
-/*2320*/ {0x8L, 0x03e8L, 0x0L, {'n', 'a', 'm', 'e'}, {'r', 'e', 'd'}, 0x0000L, 0x0L, 0x0L, 0x0000L}},
-/*2400*/ 0x0L,
-/*2401*/ {{0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2402*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2403*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2404*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2405*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2406*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2407*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2408*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2409*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*240a*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*240b*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*240c*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*240d*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*240e*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*240f*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2410*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2411*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2412*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2413*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2414*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2415*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2416*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2417*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2418*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2419*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*241a*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*241b*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*241c*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*241d*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*241e*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*241f*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L},
-/*2420*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0, 0x0000L}},
-/*6000*/ {0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*6040*/ {0x6L, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
-/*6041*/ {0x6L, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
-/*6064*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*606c*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*6077*/ {0x4L, 0x00, 0x00, 0x00, 0x00},
-/*607a*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*60ff*/ {0x6L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L, 0x0000L},
-/*6200*/ {0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L},
-/*6401*/ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
-/*6411*/ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
-
-           CO_OD_FIRST_LAST_WORD,
-};
-
-
-/***** Definition for EEPROM variables ********************************************/
-struct sCO_OD_EEPROM CO_OD_EEPROM = {
-           CO_OD_FIRST_LAST_WORD,
-
-
-           CO_OD_FIRST_LAST_WORD,
-};
-
-
-
-
-/*******************************************************************************
-   STRUCTURES FOR RECORD TYPE OBJECTS
-*******************************************************************************/
-
-
-/*0x1018*/ const CO_OD_entryRecord_t OD_record1018[5] = {
-           {(void*)&CO_OD_RAM.identity.maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.identity.vendorID, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.identity.productCode, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.identity.revisionNumber, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.identity.serialNumber, 0x86, 0x4 },
-};
-
-/*0x1200*/ const CO_OD_entryRecord_t OD_record1200[3] = {
-           {(void*)&CO_OD_RAM.SDOServerParameter[0].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.SDOServerParameter[0].COB_IDClientToServer, 0x86, 0x4 },
-           {(void*)&CO_OD_RAM.SDOServerParameter[0].COB_IDServerToClient, 0x86, 0x4 },
-};
-
-/*0x1280*/ const CO_OD_entryRecord_t OD_record1280[4] = {
-           {(void*)&CO_OD_RAM.SDOClientParameter[0].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.SDOClientParameter[0].COB_IDClientToServer, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.SDOClientParameter[0].COB_IDServerToClient, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.SDOClientParameter[0].nodeIDOfTheSDOServer, 0x0e, 0x1 },
-};
-
-/*0x1400*/ const CO_OD_entryRecord_t OD_record1400[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[0].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[0].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[0].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x1401*/ const CO_OD_entryRecord_t OD_record1401[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[1].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[1].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[1].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x1402*/ const CO_OD_entryRecord_t OD_record1402[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[2].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[2].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[2].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x1403*/ const CO_OD_entryRecord_t OD_record1403[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[3].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[3].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[3].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x1404*/ const CO_OD_entryRecord_t OD_record1404[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[4].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[4].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[4].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x1405*/ const CO_OD_entryRecord_t OD_record1405[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[5].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[5].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[5].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x1406*/ const CO_OD_entryRecord_t OD_record1406[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[6].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[6].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[6].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x1407*/ const CO_OD_entryRecord_t OD_record1407[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[7].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[7].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[7].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x1408*/ const CO_OD_entryRecord_t OD_record1408[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[8].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[8].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[8].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x1409*/ const CO_OD_entryRecord_t OD_record1409[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[9].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[9].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[9].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x140a*/ const CO_OD_entryRecord_t OD_record140a[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[10].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[10].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[10].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x140b*/ const CO_OD_entryRecord_t OD_record140b[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[11].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[11].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[11].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x140c*/ const CO_OD_entryRecord_t OD_record140c[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[12].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[12].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[12].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x140d*/ const CO_OD_entryRecord_t OD_record140d[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[13].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[13].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[13].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x140e*/ const CO_OD_entryRecord_t OD_record140e[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[14].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[14].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[14].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x140f*/ const CO_OD_entryRecord_t OD_record140f[3] = {
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[15].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[15].COB_IDUsedByRPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOCommunicationParameter[15].transmissionType, 0x0e, 0x1 },
-};
-
-/*0x1600*/ const CO_OD_entryRecord_t OD_record1600[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[0].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[0].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[0].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[0].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[0].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[0].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[0].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[0].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[0].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1601*/ const CO_OD_entryRecord_t OD_record1601[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[1].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[1].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[1].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[1].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[1].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[1].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[1].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[1].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[1].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1602*/ const CO_OD_entryRecord_t OD_record1602[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[2].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[2].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[2].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[2].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[2].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[2].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[2].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[2].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[2].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1603*/ const CO_OD_entryRecord_t OD_record1603[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[3].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[3].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[3].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[3].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[3].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[3].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[3].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[3].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[3].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1604*/ const CO_OD_entryRecord_t OD_record1604[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[4].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[4].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[4].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[4].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[4].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[4].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[4].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[4].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[4].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1605*/ const CO_OD_entryRecord_t OD_record1605[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[5].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[5].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[5].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[5].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[5].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[5].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[5].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[5].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[5].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1606*/ const CO_OD_entryRecord_t OD_record1606[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[6].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[6].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[6].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[6].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[6].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[6].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[6].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[6].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[6].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1607*/ const CO_OD_entryRecord_t OD_record1607[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[7].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[7].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[7].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[7].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[7].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[7].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[7].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[7].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[7].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1608*/ const CO_OD_entryRecord_t OD_record1608[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[8].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[8].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[8].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[8].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[8].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[8].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[8].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[8].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[8].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1609*/ const CO_OD_entryRecord_t OD_record1609[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[9].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[9].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[9].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[9].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[9].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[9].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[9].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[9].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[9].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x160a*/ const CO_OD_entryRecord_t OD_record160a[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[10].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[10].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[10].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[10].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[10].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[10].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[10].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[10].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[10].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x160b*/ const CO_OD_entryRecord_t OD_record160b[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[11].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[11].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[11].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[11].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[11].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[11].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[11].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[11].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[11].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x160c*/ const CO_OD_entryRecord_t OD_record160c[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[12].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[12].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[12].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[12].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[12].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[12].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[12].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[12].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[12].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x160d*/ const CO_OD_entryRecord_t OD_record160d[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[13].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[13].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[13].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[13].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[13].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[13].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[13].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[13].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[13].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x160e*/ const CO_OD_entryRecord_t OD_record160e[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[14].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[14].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[14].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[14].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[14].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[14].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[14].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[14].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[14].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x160f*/ const CO_OD_entryRecord_t OD_record160f[9] = {
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[15].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[15].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[15].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[15].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[15].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[15].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[15].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[15].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.RPDOMappingParameter[15].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1800*/ const CO_OD_entryRecord_t OD_record1800[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[0].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[0].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[0].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[0].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[0].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[0].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[0].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1801*/ const CO_OD_entryRecord_t OD_record1801[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[1].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[1].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[1].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[1].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[1].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[1].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[1].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1802*/ const CO_OD_entryRecord_t OD_record1802[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[2].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[2].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[2].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[2].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[2].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[2].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[2].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1803*/ const CO_OD_entryRecord_t OD_record1803[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[3].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[3].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[3].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[3].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[3].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[3].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[3].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1804*/ const CO_OD_entryRecord_t OD_record1804[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[4].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[4].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[4].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[4].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[4].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[4].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[4].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1805*/ const CO_OD_entryRecord_t OD_record1805[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[5].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[5].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[5].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[5].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[5].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[5].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[5].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1806*/ const CO_OD_entryRecord_t OD_record1806[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[6].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[6].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[6].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[6].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[6].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[6].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[6].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1807*/ const CO_OD_entryRecord_t OD_record1807[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[7].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[7].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[7].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[7].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[7].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[7].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[7].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1808*/ const CO_OD_entryRecord_t OD_record1808[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[8].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[8].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[8].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[8].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[8].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[8].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[8].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1809*/ const CO_OD_entryRecord_t OD_record1809[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[9].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[9].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[9].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[9].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[9].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[9].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[9].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x180a*/ const CO_OD_entryRecord_t OD_record180a[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[10].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[10].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[10].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[10].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[10].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[10].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[10].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x180b*/ const CO_OD_entryRecord_t OD_record180b[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[11].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[11].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[11].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[11].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[11].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[11].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[11].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x180c*/ const CO_OD_entryRecord_t OD_record180c[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[12].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[12].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[12].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[12].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[12].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[12].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[12].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x180d*/ const CO_OD_entryRecord_t OD_record180d[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[13].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[13].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[13].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[13].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[13].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[13].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[13].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x180e*/ const CO_OD_entryRecord_t OD_record180e[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[14].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[14].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[14].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[14].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[14].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[14].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[14].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x180f*/ const CO_OD_entryRecord_t OD_record180f[7] = {
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[15].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[15].COB_IDUsedByTPDO, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[15].transmissionType, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[15].inhibitTime, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[15].compatibilityEntry, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[15].eventTimer, 0x8e, 0x2 },
-           {(void*)&CO_OD_RAM.TPDOCommunicationParameter[15].SYNCStartValue, 0x0e, 0x1 },
-};
-
-/*0x1a00*/ const CO_OD_entryRecord_t OD_record1a00[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[0].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[0].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[0].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[0].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[0].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[0].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[0].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[0].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[0].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a01*/ const CO_OD_entryRecord_t OD_record1a01[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[1].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[1].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[1].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[1].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[1].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[1].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[1].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[1].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[1].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a02*/ const CO_OD_entryRecord_t OD_record1a02[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[2].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[2].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[2].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[2].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[2].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[2].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[2].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[2].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[2].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a03*/ const CO_OD_entryRecord_t OD_record1a03[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[3].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[3].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[3].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[3].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[3].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[3].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[3].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[3].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[3].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a04*/ const CO_OD_entryRecord_t OD_record1a04[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[4].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[4].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[4].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[4].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[4].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[4].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[4].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[4].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[4].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a05*/ const CO_OD_entryRecord_t OD_record1a05[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[5].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[5].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[5].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[5].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[5].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[5].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[5].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[5].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[5].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a06*/ const CO_OD_entryRecord_t OD_record1a06[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[6].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[6].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[6].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[6].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[6].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[6].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[6].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[6].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[6].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a07*/ const CO_OD_entryRecord_t OD_record1a07[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[7].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[7].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[7].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[7].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[7].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[7].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[7].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[7].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[7].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a08*/ const CO_OD_entryRecord_t OD_record1a08[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[8].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[8].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[8].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[8].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[8].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[8].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[8].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[8].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[8].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a09*/ const CO_OD_entryRecord_t OD_record1a09[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[9].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[9].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[9].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[9].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[9].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[9].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[9].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[9].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[9].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a0a*/ const CO_OD_entryRecord_t OD_record1a0a[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[10].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[10].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[10].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[10].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[10].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[10].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[10].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[10].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[10].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a0b*/ const CO_OD_entryRecord_t OD_record1a0b[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[11].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[11].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[11].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[11].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[11].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[11].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[11].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[11].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[11].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a0c*/ const CO_OD_entryRecord_t OD_record1a0c[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[12].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[12].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[12].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[12].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[12].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[12].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[12].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[12].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[12].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a0d*/ const CO_OD_entryRecord_t OD_record1a0d[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[13].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[13].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[13].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[13].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[13].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[13].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[13].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[13].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[13].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a0e*/ const CO_OD_entryRecord_t OD_record1a0e[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[14].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[14].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[14].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[14].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[14].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[14].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[14].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[14].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[14].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x1a0f*/ const CO_OD_entryRecord_t OD_record1a0f[9] = {
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[15].numberOfMappedObjects, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[15].mappedObject1, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[15].mappedObject2, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[15].mappedObject3, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[15].mappedObject4, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[15].mappedObject5, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[15].mappedObject6, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[15].mappedObject7, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.TPDOMappingParameter[15].mappedObject8, 0x8e, 0x4 },
-};
-
-/*0x2120*/ const CO_OD_entryRecord_t OD_record2120[6] = {
-           {(void*)&CO_OD_RAM.testVar.maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.testVar.I64, 0x9e, 0x8 },
-           {(void*)&CO_OD_RAM.testVar.U64, 0x9e, 0x8 },
-           {(void*)&CO_OD_RAM.testVar.R32, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.testVar.R64, 0x9e, 0x8 },
-           {(void*)0, 0x0e, 0x0 },
-};
-
-/*0x2130*/ const CO_OD_entryRecord_t OD_record2130[4] = {
-           {(void*)&CO_OD_RAM.time.maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.time.string, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.time.epochTimeBaseMs, 0x86, 0x8 },
-           {(void*)&CO_OD_RAM.time.epochTimeOffsetMs, 0x9e, 0x4 },
-};
-
-/*0x2301*/ const CO_OD_entryRecord_t OD_record2301[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[0].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[0].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[0].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[0].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[0].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[0].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[0].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[0].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[0].threshold, 0x8e, 0x4 },
-};
-
-/*0x2302*/ const CO_OD_entryRecord_t OD_record2302[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[1].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[1].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[1].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[1].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[1].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[1].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[1].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[1].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[1].threshold, 0x8e, 0x4 },
-};
-
-/*0x2303*/ const CO_OD_entryRecord_t OD_record2303[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[2].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[2].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[2].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[2].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[2].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[2].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[2].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[2].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[2].threshold, 0x8e, 0x4 },
-};
-
-/*0x2304*/ const CO_OD_entryRecord_t OD_record2304[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[3].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[3].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[3].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[3].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[3].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[3].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[3].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[3].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[3].threshold, 0x8e, 0x4 },
-};
-
-/*0x2305*/ const CO_OD_entryRecord_t OD_record2305[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[4].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[4].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[4].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[4].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[4].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[4].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[4].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[4].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[4].threshold, 0x8e, 0x4 },
-};
-
-/*0x2306*/ const CO_OD_entryRecord_t OD_record2306[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[5].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[5].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[5].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[5].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[5].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[5].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[5].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[5].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[5].threshold, 0x8e, 0x4 },
-};
-
-/*0x2307*/ const CO_OD_entryRecord_t OD_record2307[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[6].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[6].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[6].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[6].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[6].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[6].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[6].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[6].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[6].threshold, 0x8e, 0x4 },
-};
-
-/*0x2308*/ const CO_OD_entryRecord_t OD_record2308[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[7].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[7].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[7].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[7].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[7].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[7].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[7].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[7].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[7].threshold, 0x8e, 0x4 },
-};
-
-/*0x2309*/ const CO_OD_entryRecord_t OD_record2309[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[8].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[8].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[8].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[8].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[8].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[8].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[8].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[8].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[8].threshold, 0x8e, 0x4 },
-};
-
-/*0x230a*/ const CO_OD_entryRecord_t OD_record230a[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[9].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[9].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[9].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[9].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[9].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[9].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[9].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[9].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[9].threshold, 0x8e, 0x4 },
-};
-
-/*0x230b*/ const CO_OD_entryRecord_t OD_record230b[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[10].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[10].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[10].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[10].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[10].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[10].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[10].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[10].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[10].threshold, 0x8e, 0x4 },
-};
-
-/*0x230c*/ const CO_OD_entryRecord_t OD_record230c[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[11].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[11].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[11].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[11].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[11].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[11].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[11].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[11].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[11].threshold, 0x8e, 0x4 },
-};
-
-/*0x230d*/ const CO_OD_entryRecord_t OD_record230d[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[12].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[12].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[12].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[12].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[12].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[12].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[12].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[12].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[12].threshold, 0x8e, 0x4 },
-};
-
-/*0x230e*/ const CO_OD_entryRecord_t OD_record230e[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[13].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[13].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[13].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[13].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[13].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[13].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[13].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[13].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[13].threshold, 0x8e, 0x4 },
-};
-
-/*0x230f*/ const CO_OD_entryRecord_t OD_record230f[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[14].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[14].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[14].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[14].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[14].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[14].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[14].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[14].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[14].threshold, 0x8e, 0x4 },
-};
-
-/*0x2310*/ const CO_OD_entryRecord_t OD_record2310[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[15].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[15].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[15].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[15].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[15].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[15].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[15].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[15].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[15].threshold, 0x8e, 0x4 },
-};
-
-/*0x2311*/ const CO_OD_entryRecord_t OD_record2311[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[16].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[16].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[16].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[16].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[16].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[16].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[16].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[16].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[16].threshold, 0x8e, 0x4 },
-};
-
-/*0x2312*/ const CO_OD_entryRecord_t OD_record2312[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[17].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[17].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[17].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[17].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[17].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[17].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[17].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[17].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[17].threshold, 0x8e, 0x4 },
-};
-
-/*0x2313*/ const CO_OD_entryRecord_t OD_record2313[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[18].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[18].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[18].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[18].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[18].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[18].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[18].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[18].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[18].threshold, 0x8e, 0x4 },
-};
-
-/*0x2314*/ const CO_OD_entryRecord_t OD_record2314[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[19].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[19].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[19].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[19].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[19].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[19].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[19].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[19].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[19].threshold, 0x8e, 0x4 },
-};
-
-/*0x2315*/ const CO_OD_entryRecord_t OD_record2315[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[20].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[20].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[20].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[20].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[20].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[20].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[20].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[20].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[20].threshold, 0x8e, 0x4 },
-};
-
-/*0x2316*/ const CO_OD_entryRecord_t OD_record2316[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[21].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[21].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[21].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[21].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[21].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[21].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[21].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[21].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[21].threshold, 0x8e, 0x4 },
-};
-
-/*0x2317*/ const CO_OD_entryRecord_t OD_record2317[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[22].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[22].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[22].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[22].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[22].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[22].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[22].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[22].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[22].threshold, 0x8e, 0x4 },
-};
-
-/*0x2318*/ const CO_OD_entryRecord_t OD_record2318[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[23].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[23].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[23].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[23].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[23].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[23].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[23].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[23].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[23].threshold, 0x8e, 0x4 },
-};
-
-/*0x2319*/ const CO_OD_entryRecord_t OD_record2319[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[24].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[24].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[24].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[24].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[24].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[24].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[24].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[24].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[24].threshold, 0x8e, 0x4 },
-};
-
-/*0x231a*/ const CO_OD_entryRecord_t OD_record231a[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[25].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[25].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[25].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[25].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[25].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[25].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[25].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[25].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[25].threshold, 0x8e, 0x4 },
-};
-
-/*0x231b*/ const CO_OD_entryRecord_t OD_record231b[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[26].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[26].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[26].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[26].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[26].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[26].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[26].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[26].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[26].threshold, 0x8e, 0x4 },
-};
-
-/*0x231c*/ const CO_OD_entryRecord_t OD_record231c[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[27].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[27].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[27].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[27].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[27].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[27].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[27].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[27].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[27].threshold, 0x8e, 0x4 },
-};
-
-/*0x231d*/ const CO_OD_entryRecord_t OD_record231d[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[28].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[28].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[28].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[28].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[28].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[28].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[28].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[28].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[28].threshold, 0x8e, 0x4 },
-};
-
-/*0x231e*/ const CO_OD_entryRecord_t OD_record231e[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[29].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[29].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[29].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[29].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[29].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[29].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[29].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[29].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[29].threshold, 0x8e, 0x4 },
-};
-
-/*0x231f*/ const CO_OD_entryRecord_t OD_record231f[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[30].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[30].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[30].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[30].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[30].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[30].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[30].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[30].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[30].threshold, 0x8e, 0x4 },
-};
-
-/*0x2320*/ const CO_OD_entryRecord_t OD_record2320[9] = {
-           {(void*)&CO_OD_RAM.traceConfig[31].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[31].size, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[31].axisNo, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[31].name, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[31].color, 0x8e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[31].map, 0x8e, 0x4 },
-           {(void*)&CO_OD_RAM.traceConfig[31].format, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[31].trigger, 0x0e, 0x1 },
-           {(void*)&CO_OD_RAM.traceConfig[31].threshold, 0x8e, 0x4 },
-};
-
-/*0x2401*/ const CO_OD_entryRecord_t OD_record2401[7] = {
-           {(void*)&CO_OD_RAM.trace[0].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[0].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[0].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[0].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[0].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[0].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x2402*/ const CO_OD_entryRecord_t OD_record2402[7] = {
-           {(void*)&CO_OD_RAM.trace[1].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[1].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[1].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[1].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[1].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[1].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x2403*/ const CO_OD_entryRecord_t OD_record2403[7] = {
-           {(void*)&CO_OD_RAM.trace[2].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[2].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[2].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[2].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[2].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[2].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x2404*/ const CO_OD_entryRecord_t OD_record2404[7] = {
-           {(void*)&CO_OD_RAM.trace[3].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[3].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[3].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[3].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[3].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[3].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x2405*/ const CO_OD_entryRecord_t OD_record2405[7] = {
-           {(void*)&CO_OD_RAM.trace[4].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[4].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[4].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[4].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[4].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[4].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x2406*/ const CO_OD_entryRecord_t OD_record2406[7] = {
-           {(void*)&CO_OD_RAM.trace[5].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[5].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[5].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[5].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[5].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[5].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x2407*/ const CO_OD_entryRecord_t OD_record2407[7] = {
-           {(void*)&CO_OD_RAM.trace[6].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[6].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[6].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[6].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[6].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[6].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x2408*/ const CO_OD_entryRecord_t OD_record2408[7] = {
-           {(void*)&CO_OD_RAM.trace[7].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[7].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[7].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[7].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[7].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[7].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x2409*/ const CO_OD_entryRecord_t OD_record2409[7] = {
-           {(void*)&CO_OD_RAM.trace[8].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[8].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[8].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[8].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[8].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[8].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x240a*/ const CO_OD_entryRecord_t OD_record240a[7] = {
-           {(void*)&CO_OD_RAM.trace[9].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[9].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[9].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[9].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[9].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[9].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x240b*/ const CO_OD_entryRecord_t OD_record240b[7] = {
-           {(void*)&CO_OD_RAM.trace[10].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[10].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[10].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[10].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[10].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[10].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x240c*/ const CO_OD_entryRecord_t OD_record240c[7] = {
-           {(void*)&CO_OD_RAM.trace[11].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[11].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[11].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[11].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[11].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[11].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x240d*/ const CO_OD_entryRecord_t OD_record240d[7] = {
-           {(void*)&CO_OD_RAM.trace[12].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[12].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[12].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[12].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[12].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[12].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x240e*/ const CO_OD_entryRecord_t OD_record240e[7] = {
-           {(void*)&CO_OD_RAM.trace[13].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[13].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[13].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[13].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[13].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[13].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x240f*/ const CO_OD_entryRecord_t OD_record240f[7] = {
-           {(void*)&CO_OD_RAM.trace[14].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[14].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[14].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[14].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[14].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[14].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x2410*/ const CO_OD_entryRecord_t OD_record2410[7] = {
-           {(void*)&CO_OD_RAM.trace[15].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[15].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[15].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[15].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[15].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[15].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x2411*/ const CO_OD_entryRecord_t OD_record2411[7] = {
-           {(void*)&CO_OD_RAM.trace[16].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[16].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[16].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[16].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[16].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[16].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x2412*/ const CO_OD_entryRecord_t OD_record2412[7] = {
-           {(void*)&CO_OD_RAM.trace[17].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[17].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[17].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[17].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[17].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[17].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x2413*/ const CO_OD_entryRecord_t OD_record2413[7] = {
-           {(void*)&CO_OD_RAM.trace[18].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[18].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[18].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[18].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[18].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[18].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x2414*/ const CO_OD_entryRecord_t OD_record2414[7] = {
-           {(void*)&CO_OD_RAM.trace[19].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[19].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[19].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[19].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[19].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[19].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x2415*/ const CO_OD_entryRecord_t OD_record2415[7] = {
-           {(void*)&CO_OD_RAM.trace[20].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[20].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[20].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[20].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[20].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[20].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x2416*/ const CO_OD_entryRecord_t OD_record2416[7] = {
-           {(void*)&CO_OD_RAM.trace[21].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[21].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[21].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[21].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[21].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[21].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x2417*/ const CO_OD_entryRecord_t OD_record2417[7] = {
-           {(void*)&CO_OD_RAM.trace[22].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[22].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[22].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[22].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[22].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[22].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x2418*/ const CO_OD_entryRecord_t OD_record2418[7] = {
-           {(void*)&CO_OD_RAM.trace[23].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[23].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[23].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[23].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[23].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[23].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x2419*/ const CO_OD_entryRecord_t OD_record2419[7] = {
-           {(void*)&CO_OD_RAM.trace[24].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[24].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[24].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[24].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[24].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[24].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x241a*/ const CO_OD_entryRecord_t OD_record241a[7] = {
-           {(void*)&CO_OD_RAM.trace[25].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[25].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[25].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[25].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[25].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[25].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x241b*/ const CO_OD_entryRecord_t OD_record241b[7] = {
-           {(void*)&CO_OD_RAM.trace[26].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[26].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[26].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[26].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[26].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[26].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x241c*/ const CO_OD_entryRecord_t OD_record241c[7] = {
-           {(void*)&CO_OD_RAM.trace[27].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[27].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[27].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[27].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[27].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[27].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x241d*/ const CO_OD_entryRecord_t OD_record241d[7] = {
-           {(void*)&CO_OD_RAM.trace[28].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[28].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[28].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[28].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[28].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[28].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x241e*/ const CO_OD_entryRecord_t OD_record241e[7] = {
-           {(void*)&CO_OD_RAM.trace[29].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[29].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[29].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[29].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[29].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[29].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x241f*/ const CO_OD_entryRecord_t OD_record241f[7] = {
-           {(void*)&CO_OD_RAM.trace[30].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[30].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[30].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[30].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[30].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[30].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x2420*/ const CO_OD_entryRecord_t OD_record2420[7] = {
-           {(void*)&CO_OD_RAM.trace[31].maxSubIndex, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.trace[31].size, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[31].value, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[31].min, 0x9e, 0x4 },
-           {(void*)&CO_OD_RAM.trace[31].max, 0x9e, 0x4 },
-           {(void*)0, 0x06, 0x0 },
-           {(void*)&CO_OD_RAM.trace[31].triggerTime, 0x9e, 0x4 },
-};
-
-/*0x6040*/ const CO_OD_entryRecord_t OD_record6040[7] = {
-           {(void*)&CO_OD_RAM.controlWords.numberOfMotors, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.controlWords.motor1, 0xbe, 0x2 },
-           {(void*)&CO_OD_RAM.controlWords.motor2, 0xbe, 0x2 },
-           {(void*)&CO_OD_RAM.controlWords.motor3, 0xbe, 0x2 },
-           {(void*)&CO_OD_RAM.controlWords.motor4, 0xbe, 0x2 },
-           {(void*)&CO_OD_RAM.controlWords.motor5, 0xbe, 0x2 },
-           {(void*)&CO_OD_RAM.controlWords.motor6, 0xbe, 0x2 },
-};
-
-/*0x6041*/ const CO_OD_entryRecord_t OD_record6041[7] = {
-           {(void*)&CO_OD_RAM.statusWords.numberOfMotors, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.statusWords.motor1, 0xbe, 0x2 },
-           {(void*)&CO_OD_RAM.statusWords.motor2, 0xbe, 0x2 },
-           {(void*)&CO_OD_RAM.statusWords.motor3, 0xbe, 0x2 },
-           {(void*)&CO_OD_RAM.statusWords.motor4, 0xbe, 0x2 },
-           {(void*)&CO_OD_RAM.statusWords.motor5, 0xbe, 0x2 },
-           {(void*)&CO_OD_RAM.statusWords.motor6, 0xbe, 0x2 },
-};
-
-/*0x6064*/ const CO_OD_entryRecord_t OD_record6064[7] = {
-           {(void*)&CO_OD_RAM.actualMotorPositions.numberOfMotors, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.actualMotorPositions.motor1, 0xbe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorPositions.motor2, 0xbe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorPositions.motor3, 0xbe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorPositions.motor4, 0xbe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorPositions.motor5, 0xbe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorPositions.motor6, 0xbe, 0x4 },
-};
-
-/*0x606c*/ const CO_OD_entryRecord_t OD_record606c[7] = {
-           {(void*)&CO_OD_RAM.actualMotorVelocities.numberOfMotors, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.actualMotorVelocities.motor1, 0xbe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorVelocities.motor2, 0xbe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorVelocities.motor3, 0xbe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorVelocities.motor4, 0xbe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorVelocities.motor5, 0xbe, 0x4 },
-           {(void*)&CO_OD_RAM.actualMotorVelocities.motor6, 0xbe, 0x4 },
-};
-
-/*0x6077*/ const CO_OD_entryRecord_t OD_record6077[5] = {
-           {(void*)&CO_OD_RAM.actualMotorTorques.numberOfMotors, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.actualMotorTorques.motor1, 0xbe, 0x2 },
-           {(void*)&CO_OD_RAM.actualMotorTorques.motor2, 0xbe, 0x2 },
-           {(void*)&CO_OD_RAM.actualMotorTorques.motor3, 0xbe, 0x2 },
-           {(void*)&CO_OD_RAM.actualMotorTorques.motor4, 0xbe, 0x2 },
-};
-
-/*0x607a*/ const CO_OD_entryRecord_t OD_record607a[7] = {
-           {(void*)&CO_OD_RAM.targetMotorPositions.numberOfMotors, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.targetMotorPositions.motor1, 0xbe, 0x4 },
-           {(void*)&CO_OD_RAM.targetMotorPositions.motor2, 0xbe, 0x4 },
-           {(void*)&CO_OD_RAM.targetMotorPositions.motor3, 0xbe, 0x4 },
-           {(void*)&CO_OD_RAM.targetMotorPositions.motor4, 0xbe, 0x4 },
-           {(void*)&CO_OD_RAM.targetMotorPositions.motor5, 0xbe, 0x4 },
-           {(void*)&CO_OD_RAM.targetMotorPositions.motor6, 0xbe, 0x4 },
-};
-
-/*0x60ff*/ const CO_OD_entryRecord_t OD_record60ff[7] = {
-           {(void*)&CO_OD_RAM.targetMotorVelocities.numberOfMotors, 0x06, 0x1 },
-           {(void*)&CO_OD_RAM.targetMotorVelocities.motor1, 0xbe, 0x4 },
-           {(void*)&CO_OD_RAM.targetMotorVelocities.motor2, 0xbe, 0x4 },
-           {(void*)&CO_OD_RAM.targetMotorVelocities.motor3, 0xbe, 0x4 },
-           {(void*)&CO_OD_RAM.targetMotorVelocities.motor4, 0xbe, 0x4 },
-           {(void*)&CO_OD_RAM.targetMotorVelocities.motor5, 0xbe, 0x4 },
-           {(void*)&CO_OD_RAM.targetMotorVelocities.motor6, 0xbe, 0x4 },
-};
-
-/*******************************************************************************
-   OBJECT DICTIONARY
-*******************************************************************************/
-const CO_OD_entry_t CO_OD[177] = {
-
-{0x1000, 0x00, 0x86, 4, (void*)&CO_OD_RAM.deviceType},
-{0x1001, 0x00, 0x26, 1, (void*)&CO_OD_RAM.errorRegister},
-{0x1002, 0x00, 0xa6, 4, (void*)&CO_OD_RAM.manufacturerStatusRegister},
-{0x1003, 0x08, 0x8e, 4, (void*)&CO_OD_RAM.preDefinedErrorField[0]},
-{0x1005, 0x00, 0x8e, 4, (void*)&CO_OD_RAM.COB_ID_SYNCMessage},
-{0x1006, 0x00, 0x8e, 4, (void*)&CO_OD_RAM.communicationCyclePeriod},
-{0x1007, 0x00, 0x8e, 4, (void*)&CO_OD_RAM.synchronousWindowLength},
-{0x1008, 0x00, 0x86, 11, (void*)&CO_OD_RAM.manufacturerDeviceName},
-{0x1009, 0x00, 0x86, 4, (void*)&CO_OD_RAM.manufacturerHardwareVersion},
-{0x100a, 0x00, 0x86, 4, (void*)&CO_OD_RAM.manufacturerSoftwareVersion},
-{0x1010, 0x01, 0x8e, 4, (void*)&CO_OD_RAM.storeParameters[0]},
-{0x1011, 0x01, 0x8e, 4, (void*)&CO_OD_RAM.restoreDefaultParameters[0]},
-{0x1014, 0x00, 0x86, 4, (void*)&CO_OD_RAM.COB_ID_EMCY},
-{0x1015, 0x00, 0x8e, 2, (void*)&CO_OD_RAM.inhibitTimeEMCY},
-{0x1016, 0x04, 0x8e, 4, (void*)&CO_OD_RAM.consumerHeartbeatTime[0]},
-{0x1017, 0x00, 0x8e, 2, (void*)&CO_OD_RAM.producerHeartbeatTime},
-{0x1018, 0x04, 0x00, 0, (void*)&OD_record1018},
-{0x1019, 0x00, 0x0e, 1, (void*)&CO_OD_RAM.synchronousCounterOverflowValue},
-{0x1029, 0x06, 0x0e, 1, (void*)&CO_OD_RAM.errorBehavior[0]},
-{0x1200, 0x02, 0x00, 0, (void*)&OD_record1200},
-{0x1280, 0x03, 0x00, 0, (void*)&OD_record1280},
-{0x1400, 0x02, 0x00, 0, (void*)&OD_record1400},
-{0x1401, 0x02, 0x00, 0, (void*)&OD_record1401},
-{0x1402, 0x02, 0x00, 0, (void*)&OD_record1402},
-{0x1403, 0x02, 0x00, 0, (void*)&OD_record1403},
-{0x1404, 0x02, 0x00, 0, (void*)&OD_record1404},
-{0x1405, 0x02, 0x00, 0, (void*)&OD_record1405},
-{0x1406, 0x02, 0x00, 0, (void*)&OD_record1406},
-{0x1407, 0x02, 0x00, 0, (void*)&OD_record1407},
-{0x1408, 0x02, 0x00, 0, (void*)&OD_record1408},
-{0x1409, 0x02, 0x00, 0, (void*)&OD_record1409},
-{0x140a, 0x02, 0x00, 0, (void*)&OD_record140a},
-{0x140b, 0x02, 0x00, 0, (void*)&OD_record140b},
-{0x140c, 0x02, 0x00, 0, (void*)&OD_record140c},
-{0x140d, 0x02, 0x00, 0, (void*)&OD_record140d},
-{0x140e, 0x02, 0x00, 0, (void*)&OD_record140e},
-{0x140f, 0x02, 0x00, 0, (void*)&OD_record140f},
-{0x1600, 0x08, 0x00, 0, (void*)&OD_record1600},
-{0x1601, 0x08, 0x00, 0, (void*)&OD_record1601},
-{0x1602, 0x08, 0x00, 0, (void*)&OD_record1602},
-{0x1603, 0x08, 0x00, 0, (void*)&OD_record1603},
-{0x1604, 0x08, 0x00, 0, (void*)&OD_record1604},
-{0x1605, 0x08, 0x00, 0, (void*)&OD_record1605},
-{0x1606, 0x08, 0x00, 0, (void*)&OD_record1606},
-{0x1607, 0x08, 0x00, 0, (void*)&OD_record1607},
-{0x1608, 0x08, 0x00, 0, (void*)&OD_record1608},
-{0x1609, 0x08, 0x00, 0, (void*)&OD_record1609},
-{0x160a, 0x08, 0x00, 0, (void*)&OD_record160a},
-{0x160b, 0x08, 0x00, 0, (void*)&OD_record160b},
-{0x160c, 0x08, 0x00, 0, (void*)&OD_record160c},
-{0x160d, 0x08, 0x00, 0, (void*)&OD_record160d},
-{0x160e, 0x08, 0x00, 0, (void*)&OD_record160e},
-{0x160f, 0x08, 0x00, 0, (void*)&OD_record160f},
-{0x1800, 0x06, 0x00, 0, (void*)&OD_record1800},
-{0x1801, 0x06, 0x00, 0, (void*)&OD_record1801},
-{0x1802, 0x06, 0x00, 0, (void*)&OD_record1802},
-{0x1803, 0x06, 0x00, 0, (void*)&OD_record1803},
-{0x1804, 0x06, 0x00, 0, (void*)&OD_record1804},
-{0x1805, 0x06, 0x00, 0, (void*)&OD_record1805},
-{0x1806, 0x06, 0x00, 0, (void*)&OD_record1806},
-{0x1807, 0x06, 0x00, 0, (void*)&OD_record1807},
-{0x1808, 0x06, 0x00, 0, (void*)&OD_record1808},
-{0x1809, 0x06, 0x00, 0, (void*)&OD_record1809},
-{0x180a, 0x06, 0x00, 0, (void*)&OD_record180a},
-{0x180b, 0x06, 0x00, 0, (void*)&OD_record180b},
-{0x180c, 0x06, 0x00, 0, (void*)&OD_record180c},
-{0x180d, 0x06, 0x00, 0, (void*)&OD_record180d},
-{0x180e, 0x06, 0x00, 0, (void*)&OD_record180e},
-{0x180f, 0x06, 0x00, 0, (void*)&OD_record180f},
-{0x1a00, 0x08, 0x00, 0, (void*)&OD_record1a00},
-{0x1a01, 0x08, 0x00, 0, (void*)&OD_record1a01},
-{0x1a02, 0x08, 0x00, 0, (void*)&OD_record1a02},
-{0x1a03, 0x08, 0x00, 0, (void*)&OD_record1a03},
-{0x1a04, 0x08, 0x00, 0, (void*)&OD_record1a04},
-{0x1a05, 0x08, 0x00, 0, (void*)&OD_record1a05},
-{0x1a06, 0x08, 0x00, 0, (void*)&OD_record1a06},
-{0x1a07, 0x08, 0x00, 0, (void*)&OD_record1a07},
-{0x1a08, 0x08, 0x00, 0, (void*)&OD_record1a08},
-{0x1a09, 0x08, 0x00, 0, (void*)&OD_record1a09},
-{0x1a0a, 0x08, 0x00, 0, (void*)&OD_record1a0a},
-{0x1a0b, 0x08, 0x00, 0, (void*)&OD_record1a0b},
-{0x1a0c, 0x08, 0x00, 0, (void*)&OD_record1a0c},
-{0x1a0d, 0x08, 0x00, 0, (void*)&OD_record1a0d},
-{0x1a0e, 0x08, 0x00, 0, (void*)&OD_record1a0e},
-{0x1a0f, 0x08, 0x00, 0, (void*)&OD_record1a0f},
-{0x1f80, 0x00, 0x8e, 4, (void*)&CO_OD_RAM.NMTStartup},
-{0x2000, 0x00, 0xbe, 2, (void*)&CO_OD_RAM.buttons},
-{0x2100, 0x00, 0xa6, 10, (void*)&CO_OD_RAM.errorStatusBits},
-{0x2101, 0x00, 0x0e, 1, (void*)&CO_OD_RAM.CANNodeID},
-{0x2102, 0x00, 0x8e, 2, (void*)&CO_OD_RAM.CANBitRate},
-{0x2103, 0x00, 0x8e, 2, (void*)&CO_OD_RAM.SYNCCounter},
-{0x2104, 0x00, 0x86, 2, (void*)&CO_OD_RAM.SYNCTime},
-{0x2106, 0x00, 0x86, 4, (void*)&CO_OD_RAM.powerOnCounter},
-{0x2107, 0x05, 0x8e, 2, (void*)&CO_OD_RAM.performance[0]},
-{0x2108, 0x01, 0x8e, 2, (void*)&CO_OD_RAM.temperature[0]},
-{0x2109, 0x01, 0x8e, 2, (void*)&CO_OD_RAM.voltage[0]},
-{0x2110, 0x20, 0x8e, 4, (void*)&CO_OD_RAM.variableInt32[0]},
-{0x2111, 0x10, 0x8e, 4, (void*)&CO_OD_RAM.variableROM_Int32[0]},
-{0x2112, 0x10, 0x8e, 4, (void*)&CO_OD_RAM.variableNV_Int32[0]},
-{0x2120, 0x05, 0x00, 0, (void*)&OD_record2120},
-{0x2130, 0x03, 0x00, 0, (void*)&OD_record2130},
-{0x2301, 0x08, 0x00, 0, (void*)&OD_record2301},
-{0x2302, 0x08, 0x00, 0, (void*)&OD_record2302},
-{0x2303, 0x08, 0x00, 0, (void*)&OD_record2303},
-{0x2304, 0x08, 0x00, 0, (void*)&OD_record2304},
-{0x2305, 0x08, 0x00, 0, (void*)&OD_record2305},
-{0x2306, 0x08, 0x00, 0, (void*)&OD_record2306},
-{0x2307, 0x08, 0x00, 0, (void*)&OD_record2307},
-{0x2308, 0x08, 0x00, 0, (void*)&OD_record2308},
-{0x2309, 0x08, 0x00, 0, (void*)&OD_record2309},
-{0x230a, 0x08, 0x00, 0, (void*)&OD_record230a},
-{0x230b, 0x08, 0x00, 0, (void*)&OD_record230b},
-{0x230c, 0x08, 0x00, 0, (void*)&OD_record230c},
-{0x230d, 0x08, 0x00, 0, (void*)&OD_record230d},
-{0x230e, 0x08, 0x00, 0, (void*)&OD_record230e},
-{0x230f, 0x08, 0x00, 0, (void*)&OD_record230f},
-{0x2310, 0x08, 0x00, 0, (void*)&OD_record2310},
-{0x2311, 0x08, 0x00, 0, (void*)&OD_record2311},
-{0x2312, 0x08, 0x00, 0, (void*)&OD_record2312},
-{0x2313, 0x08, 0x00, 0, (void*)&OD_record2313},
-{0x2314, 0x08, 0x00, 0, (void*)&OD_record2314},
-{0x2315, 0x08, 0x00, 0, (void*)&OD_record2315},
-{0x2316, 0x08, 0x00, 0, (void*)&OD_record2316},
-{0x2317, 0x08, 0x00, 0, (void*)&OD_record2317},
-{0x2318, 0x08, 0x00, 0, (void*)&OD_record2318},
-{0x2319, 0x08, 0x00, 0, (void*)&OD_record2319},
-{0x231a, 0x08, 0x00, 0, (void*)&OD_record231a},
-{0x231b, 0x08, 0x00, 0, (void*)&OD_record231b},
-{0x231c, 0x08, 0x00, 0, (void*)&OD_record231c},
-{0x231d, 0x08, 0x00, 0, (void*)&OD_record231d},
-{0x231e, 0x08, 0x00, 0, (void*)&OD_record231e},
-{0x231f, 0x08, 0x00, 0, (void*)&OD_record231f},
-{0x2320, 0x08, 0x00, 0, (void*)&OD_record2320},
-{0x2400, 0x00, 0x1e, 1, (void*)&CO_OD_RAM.traceEnable},
-{0x2401, 0x06, 0x00, 0, (void*)&OD_record2401},
-{0x2402, 0x06, 0x00, 0, (void*)&OD_record2402},
-{0x2403, 0x06, 0x00, 0, (void*)&OD_record2403},
-{0x2404, 0x06, 0x00, 0, (void*)&OD_record2404},
-{0x2405, 0x06, 0x00, 0, (void*)&OD_record2405},
-{0x2406, 0x06, 0x00, 0, (void*)&OD_record2406},
-{0x2407, 0x06, 0x00, 0, (void*)&OD_record2407},
-{0x2408, 0x06, 0x00, 0, (void*)&OD_record2408},
-{0x2409, 0x06, 0x00, 0, (void*)&OD_record2409},
-{0x240a, 0x06, 0x00, 0, (void*)&OD_record240a},
-{0x240b, 0x06, 0x00, 0, (void*)&OD_record240b},
-{0x240c, 0x06, 0x00, 0, (void*)&OD_record240c},
-{0x240d, 0x06, 0x00, 0, (void*)&OD_record240d},
-{0x240e, 0x06, 0x00, 0, (void*)&OD_record240e},
-{0x240f, 0x06, 0x00, 0, (void*)&OD_record240f},
-{0x2410, 0x06, 0x00, 0, (void*)&OD_record2410},
-{0x2411, 0x06, 0x00, 0, (void*)&OD_record2411},
-{0x2412, 0x06, 0x00, 0, (void*)&OD_record2412},
-{0x2413, 0x06, 0x00, 0, (void*)&OD_record2413},
-{0x2414, 0x06, 0x00, 0, (void*)&OD_record2414},
-{0x2415, 0x06, 0x00, 0, (void*)&OD_record2415},
-{0x2416, 0x06, 0x00, 0, (void*)&OD_record2416},
-{0x2417, 0x06, 0x00, 0, (void*)&OD_record2417},
-{0x2418, 0x06, 0x00, 0, (void*)&OD_record2418},
-{0x2419, 0x06, 0x00, 0, (void*)&OD_record2419},
-{0x241a, 0x06, 0x00, 0, (void*)&OD_record241a},
-{0x241b, 0x06, 0x00, 0, (void*)&OD_record241b},
-{0x241c, 0x06, 0x00, 0, (void*)&OD_record241c},
-{0x241d, 0x06, 0x00, 0, (void*)&OD_record241d},
-{0x241e, 0x06, 0x00, 0, (void*)&OD_record241e},
-{0x241f, 0x06, 0x00, 0, (void*)&OD_record241f},
-{0x2420, 0x06, 0x00, 0, (void*)&OD_record2420},
-{0x6000, 0x08, 0x0e, 1, (void*)&CO_OD_RAM.readInput8Bit[0]},
-{0x6040, 0x06, 0x00, 0, (void*)&OD_record6040},
-{0x6041, 0x06, 0x00, 0, (void*)&OD_record6041},
-{0x6064, 0x06, 0x00, 0, (void*)&OD_record6064},
-{0x606c, 0x06, 0x00, 0, (void*)&OD_record606c},
-{0x6077, 0x04, 0x00, 0, (void*)&OD_record6077},
-{0x607a, 0x06, 0x00, 0, (void*)&OD_record607a},
-{0x60ff, 0x06, 0x00, 0, (void*)&OD_record60ff},
-{0x6200, 0x08, 0x0e, 1, (void*)&CO_OD_RAM.writeOutput8Bit[0]},
-{0x6401, 0x0c, 0x8e, 2, (void*)&CO_OD_RAM.readAnalogueInput16Bit[0]},
-{0x6411, 0x08, 0x8e, 2, (void*)&CO_OD_RAM.writeAnalogueOutput16Bit[0]},
-};
diff --git a/canopend/objDict/CO_ODtest.h b/canopend/objDict/CO_ODtest.h
deleted file mode 100644
index 3eea764..0000000
--- a/canopend/objDict/CO_ODtest.h
+++ /dev/null
@@ -1,2433 +0,0 @@
-/*******************************************************************************
-
-   File - CO_OD.c/CO_OD.h
-   CANopen Object Dictionary.
-
-   Copyright (C) 2004-2008 Janez Paternoster
-
-   License: GNU Lesser General Public License (LGPL).
-
-   <http://canopennode.sourceforge.net>
-
-   (For more information see <CO_SDO.h>.)
-
-   This file is part of CANopenNode, an opensource CANopen Stack.
-   Project home page is <https://github.com/CANopenNode/CANopenNode>.
-   For more information on CANopen see <http://www.can-cia.org/>.
- 
-   CANopenNode is free and open source software: you can redistribute
-   it and/or modify it under the terms of the GNU General Public License
-   as published by the Free Software Foundation, either version 2 of the
-   License, or (at your option) any later version.
-  
-   This program is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
-   GNU General Public License for more details.
-  
-   You should have received a copy of the GNU General Public License
-   along with this program. If not, see <http://www.gnu.org/licenses/>.
-  
-   Following clarification and special exception to the GNU General Public
-   License is included to the distribution terms of CANopenNode:
-  
-   Linking this library statically or dynamically with other modules is
-   making a combined work based on this library. Thus, the terms and
-   conditions of the GNU General Public License cover the whole combination.
-  
-   As a special exception, the copyright holders of this library give
-   you permission to link this library with independent modules to
-   produce an executable, regardless of the license terms of these
-   independent modules, and to copy and distribute the resulting
-   executable under terms of your choice, provided that you also meet,
-   for each linked independent module, the terms and conditions of the
-   license of that module. An independent module is a module which is
-   not derived from or based on this library. If you modify this
-   library, you may extend this exception to your version of the
-   library, but you are not obliged to do so. If you do not wish
-   to do so, delete this exception statement from your version.
- 
-   This file was automatically generated with libedssharp Object
-   Dictionary Editor v0.6-xdd-alpha-81-gb562769
-   DON'T EDIT THIS FILE MANUALLY !!!!
-*******************************************************************************/
-
-
-#pragma once
-
-/*******************************************************************************
-   CANopen DATA DYPES
-*******************************************************************************/
-   typedef bool_t       BOOLEAN;
-   typedef uint8_t      UNSIGNED8;
-   typedef uint16_t     UNSIGNED16;
-   typedef uint32_t     UNSIGNED32;
-   typedef uint64_t     UNSIGNED64;
-   typedef int8_t       INTEGER8;
-   typedef int16_t      INTEGER16;
-   typedef int32_t      INTEGER32;
-   typedef int64_t      INTEGER64;
-   typedef float32_t    REAL32; 
-   typedef float64_t    REAL64; 
-   typedef char_t       VISIBLE_STRING;
-   typedef oChar_t      OCTET_STRING;
-   typedef domain_t     DOMAIN;
-
-
-/*******************************************************************************
-   FILE INFO:
-      FileName:     BBBMasterFinal.eds
-      FileVersion:  0
-      CreationTime: 12:00AM
-      CreationDate: 01-01-2001
-      CreatedBy:    RG
-******************************************************************************/
-
-
-/*******************************************************************************
-   DEVICE INFO:
-      VendorName:     CANopenNode
-      VendorNumber    0
-      ProductName:    CANopenNode
-      ProductNumber:  0
-******************************************************************************/
-
-
-/*******************************************************************************
-   FEATURES
-*******************************************************************************/
-  #define CO_NO_SYNC                     1   //Associated objects: 1005-1007
-  #define CO_NO_EMERGENCY                1   //Associated objects: 1014, 1015
-  #define CO_NO_SDO_SERVER               1   //Associated objects: 1200-127F
-  #define CO_NO_SDO_CLIENT               1   //Associated objects: 1280-12FF
-  #define CO_NO_LSS_SERVER               0   //LSS Slave
-  #define CO_NO_LSS_CLIENT               0   //LSS Master
-  #define CO_NO_RPDO                     16   //Associated objects: 14xx, 16xx
-  #define CO_NO_TPDO                     16   //Associated objects: 18xx, 1Axx
-  #define CO_NO_NMT_MASTER               1
-
-
-/*******************************************************************************
-   OBJECT DICTIONARY
-*******************************************************************************/
-   #define CO_OD_NoOfElements             177
-
-
-/*******************************************************************************
-   TYPE DEFINITIONS FOR RECORDS
-*******************************************************************************/
-/*1018    */ typedef struct {
-               UNSIGNED8      maxSubIndex;
-               UNSIGNED32     vendorID;
-               UNSIGNED32     productCode;
-               UNSIGNED32     revisionNumber;
-               UNSIGNED32     serialNumber;
-               }              OD_identity_t;
-/*1200    */ typedef struct {
-               UNSIGNED8      maxSubIndex;
-               UNSIGNED32     COB_IDClientToServer;
-               UNSIGNED32     COB_IDServerToClient;
-               }              OD_SDOServerParameter_t;
-/*1280    */ typedef struct {
-               UNSIGNED8      maxSubIndex;
-               UNSIGNED32     COB_IDClientToServer;
-               UNSIGNED32     COB_IDServerToClient;
-               UNSIGNED8      nodeIDOfTheSDOServer;
-               }              OD_SDOClientParameter_t;
-/*1400    */ typedef struct {
-               UNSIGNED8      maxSubIndex;
-               UNSIGNED32     COB_IDUsedByRPDO;
-               UNSIGNED8      transmissionType;
-               }              OD_RPDOCommunicationParameter_t;
-/*1600    */ typedef struct {
-               UNSIGNED8      numberOfMappedObjects;
-               UNSIGNED32     mappedObject1;
-               UNSIGNED32     mappedObject2;
-               UNSIGNED32     mappedObject3;
-               UNSIGNED32     mappedObject4;
-               UNSIGNED32     mappedObject5;
-               UNSIGNED32     mappedObject6;
-               UNSIGNED32     mappedObject7;
-               UNSIGNED32     mappedObject8;
-               }              OD_RPDOMappingParameter_t;
-/*1800    */ typedef struct {
-               UNSIGNED8      maxSubIndex;
-               UNSIGNED32     COB_IDUsedByTPDO;
-               UNSIGNED8      transmissionType;
-               UNSIGNED16     inhibitTime;
-               UNSIGNED8      compatibilityEntry;
-               UNSIGNED16     eventTimer;
-               UNSIGNED8      SYNCStartValue;
-               }              OD_TPDOCommunicationParameter_t;
-/*1a00    */ typedef struct {
-               UNSIGNED8      numberOfMappedObjects;
-               UNSIGNED32     mappedObject1;
-               UNSIGNED32     mappedObject2;
-               UNSIGNED32     mappedObject3;
-               UNSIGNED32     mappedObject4;
-               UNSIGNED32     mappedObject5;
-               UNSIGNED32     mappedObject6;
-               UNSIGNED32     mappedObject7;
-               UNSIGNED32     mappedObject8;
-               }              OD_TPDOMappingParameter_t;
-/*2120    */ typedef struct {
-               UNSIGNED8      maxSubIndex;
-               INTEGER64      I64;
-               UNSIGNED64     U64;
-               REAL32         R32;
-               REAL64         R64;
-               DOMAIN         domain;
-               }              OD_testVar_t;
-/*2130    */ typedef struct {
-               UNSIGNED8      maxSubIndex;
-               VISIBLE_STRING string[1];
-               UNSIGNED64     epochTimeBaseMs;
-               UNSIGNED32     epochTimeOffsetMs;
-               }              OD_time_t;
-/*2301    */ typedef struct {
-               UNSIGNED8      maxSubIndex;
-               UNSIGNED32     size;
-               UNSIGNED8      axisNo;
-               VISIBLE_STRING name[6];
-               VISIBLE_STRING color[3];
-               UNSIGNED32     map;
-               UNSIGNED8      format;
-               UNSIGNED8      trigger;
-               INTEGER32      threshold;
-               }              OD_traceConfig_t;
-/*2401    */ typedef struct {
-               UNSIGNED8      maxSubIndex;
-               UNSIGNED32     size;
-               INTEGER32      value;
-               INTEGER32      min;
-               INTEGER32      max;
-               DOMAIN         plot;
-               UNSIGNED32     triggerTime;
-               }              OD_trace_t;
-/*6040    */ typedef struct {
-               UNSIGNED8      numberOfMotors;
-               UNSIGNED16     motor1;
-               UNSIGNED16     motor2;
-               UNSIGNED16     motor3;
-               UNSIGNED16     motor4;
-               UNSIGNED16     motor5;
-               UNSIGNED16     motor6;
-               }              OD_controlWords_t;
-/*6041    */ typedef struct {
-               UNSIGNED8      numberOfMotors;
-               UNSIGNED16     motor1;
-               UNSIGNED16     motor2;
-               UNSIGNED16     motor3;
-               UNSIGNED16     motor4;
-               UNSIGNED16     motor5;
-               UNSIGNED16     motor6;
-               }              OD_statusWords_t;
-/*6064    */ typedef struct {
-               UNSIGNED8      numberOfMotors;
-               INTEGER32      motor1;
-               INTEGER32      motor2;
-               INTEGER32      motor3;
-               INTEGER32      motor4;
-               INTEGER32      motor5;
-               INTEGER32      motor6;
-               }              OD_actualMotorPositions_t;
-/*606c    */ typedef struct {
-               UNSIGNED8      numberOfMotors;
-               INTEGER32      motor1;
-               INTEGER32      motor2;
-               INTEGER32      motor3;
-               INTEGER32      motor4;
-               INTEGER32      motor5;
-               INTEGER32      motor6;
-               }              OD_actualMotorVelocities_t;
-/*6077    */ typedef struct {
-               UNSIGNED8      numberOfMotors;
-               UNSIGNED16     motor1;
-               UNSIGNED16     motor2;
-               UNSIGNED16     motor3;
-               UNSIGNED16     motor4;
-               }              OD_actualMotorTorques_t;
-/*607a    */ typedef struct {
-               UNSIGNED8      numberOfMotors;
-               INTEGER32      motor1;
-               INTEGER32      motor2;
-               INTEGER32      motor3;
-               INTEGER32      motor4;
-               INTEGER32      motor5;
-               INTEGER32      motor6;
-               }              OD_targetMotorPositions_t;
-/*60ff    */ typedef struct {
-               UNSIGNED8      numberOfMotors;
-               INTEGER32      motor1;
-               INTEGER32      motor2;
-               INTEGER32      motor3;
-               INTEGER32      motor4;
-               INTEGER32      motor5;
-               INTEGER32      motor6;
-               }              OD_targetMotorVelocities_t;
-
-/*******************************************************************************
-   TYPE DEFINITIONS FOR OBJECT DICTIONARY INDEXES
-
-   some of those are redundant with CO_SDO.h CO_ObjDicId_t <Common CiA301 object 
-   dictionary entries>
-*******************************************************************************/
-/*1000 */
-        #define OD_1000_deviceType                                  0x1000
-
-/*1001 */
-        #define OD_1001_errorRegister                               0x1001
-
-/*1002 */
-        #define OD_1002_manufacturerStatusRegister                  0x1002
-
-/*1003 */
-        #define OD_1003_preDefinedErrorField                        0x1003
-
-        #define OD_1003_0_preDefinedErrorField_maxSubIndex          0
-        #define OD_1003_1_preDefinedErrorField_standardErrorField   1
-        #define OD_1003_2_preDefinedErrorField_standardErrorField   2
-        #define OD_1003_3_preDefinedErrorField_standardErrorField   3
-        #define OD_1003_4_preDefinedErrorField_standardErrorField   4
-        #define OD_1003_5_preDefinedErrorField_standardErrorField   5
-        #define OD_1003_6_preDefinedErrorField_standardErrorField   6
-        #define OD_1003_7_preDefinedErrorField_standardErrorField   7
-        #define OD_1003_8_preDefinedErrorField_standardErrorField   8
-
-/*1005 */
-        #define OD_1005_COB_ID_SYNCMessage                          0x1005
-
-/*1006 */
-        #define OD_1006_communicationCyclePeriod                    0x1006
-
-/*1007 */
-        #define OD_1007_synchronousWindowLength                     0x1007
-
-/*1008 */
-        #define OD_1008_manufacturerDeviceName                      0x1008
-
-/*1009 */
-        #define OD_1009_manufacturerHardwareVersion                 0x1009
-
-/*100a */
-        #define OD_100a_manufacturerSoftwareVersion                 0x100a
-
-/*1010 */
-        #define OD_1010_storeParameters                             0x1010
-
-        #define OD_1010_0_storeParameters_maxSubIndex               0
-        #define OD_1010_1_storeParameters_saveAllParameters         1
-
-/*1011 */
-        #define OD_1011_restoreDefaultParameters                    0x1011
-
-        #define OD_1011_0_restoreDefaultParameters_maxSubIndex      0
-        #define OD_1011_1_restoreDefaultParameters_restoreAllDefaultParameters 1
-
-/*1014 */
-        #define OD_1014_COB_ID_EMCY                                 0x1014
-
-/*1015 */
-        #define OD_1015_inhibitTimeEMCY                             0x1015
-
-/*1016 */
-        #define OD_1016_consumerHeartbeatTime                       0x1016
-
-        #define OD_1016_0_consumerHeartbeatTime_maxSubIndex         0
-        #define OD_1016_1_consumerHeartbeatTime_consumerHeartbeatTime 1
-        #define OD_1016_2_consumerHeartbeatTime_consumerHeartbeatTime 2
-        #define OD_1016_3_consumerHeartbeatTime_consumerHeartbeatTime 3
-        #define OD_1016_4_consumerHeartbeatTime_consumerHeartbeatTime 4
-
-/*1017 */
-        #define OD_1017_producerHeartbeatTime                       0x1017
-
-/*1018 */
-        #define OD_1018_identity                                    0x1018
-
-        #define OD_1018_0_identity_maxSubIndex                      0
-        #define OD_1018_1_identity_vendorID                         1
-        #define OD_1018_2_identity_productCode                      2
-        #define OD_1018_3_identity_revisionNumber                   3
-        #define OD_1018_4_identity_serialNumber                     4
-
-/*1019 */
-        #define OD_1019_synchronousCounterOverflowValue             0x1019
-
-/*1029 */
-        #define OD_1029_errorBehavior                               0x1029
-
-        #define OD_1029_0_errorBehavior_maxSubIndex                 0
-        #define OD_1029_1_errorBehavior_communication               1
-        #define OD_1029_2_errorBehavior_communicationOther          2
-        #define OD_1029_3_errorBehavior_communicationPassive        3
-        #define OD_1029_4_errorBehavior_generic                     4
-        #define OD_1029_5_errorBehavior_deviceProfile               5
-        #define OD_1029_6_errorBehavior_manufacturerSpecific        6
-
-/*1200 */
-        #define OD_1200_SDOServerParameter                          0x1200
-
-        #define OD_1200_0_SDOServerParameter_maxSubIndex            0
-        #define OD_1200_1_SDOServerParameter_COB_IDClientToServer   1
-        #define OD_1200_2_SDOServerParameter_COB_IDServerToClient   2
-
-/*1280 */
-        #define OD_1280_SDOClientParameter                          0x1280
-
-        #define OD_1280_0_SDOClientParameter_maxSubIndex            0
-        #define OD_1280_1_SDOClientParameter_COB_IDClientToServer   1
-        #define OD_1280_2_SDOClientParameter_COB_IDServerToClient   2
-        #define OD_1280_3_SDOClientParameter_nodeIDOfTheSDOServer   3
-
-/*1400 */
-        #define OD_1400_RPDOCommunicationParameter                  0x1400
-
-        #define OD_1400_0_RPDOCommunicationParameter_maxSubIndex    0
-        #define OD_1400_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-        #define OD_1400_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1401 */
-        #define OD_1401_RPDOCommunicationParameter                  0x1401
-
-        #define OD_1401_0_RPDOCommunicationParameter_maxSubIndex    0
-        #define OD_1401_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-        #define OD_1401_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1402 */
-        #define OD_1402_RPDOCommunicationParameter                  0x1402
-
-        #define OD_1402_0_RPDOCommunicationParameter_maxSubIndex    0
-        #define OD_1402_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-        #define OD_1402_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1403 */
-        #define OD_1403_RPDOCommunicationParameter                  0x1403
-
-        #define OD_1403_0_RPDOCommunicationParameter_maxSubIndex    0
-        #define OD_1403_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-        #define OD_1403_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1404 */
-        #define OD_1404_RPDOCommunicationParameter                  0x1404
-
-        #define OD_1404_0_RPDOCommunicationParameter_maxSubIndex    0
-        #define OD_1404_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-        #define OD_1404_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1405 */
-        #define OD_1405_RPDOCommunicationParameter                  0x1405
-
-        #define OD_1405_0_RPDOCommunicationParameter_maxSubIndex    0
-        #define OD_1405_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-        #define OD_1405_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1406 */
-        #define OD_1406_RPDOCommunicationParameter                  0x1406
-
-        #define OD_1406_0_RPDOCommunicationParameter_maxSubIndex    0
-        #define OD_1406_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-        #define OD_1406_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1407 */
-        #define OD_1407_RPDOCommunicationParameter                  0x1407
-
-        #define OD_1407_0_RPDOCommunicationParameter_maxSubIndex    0
-        #define OD_1407_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-        #define OD_1407_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1408 */
-        #define OD_1408_RPDOCommunicationParameter                  0x1408
-
-        #define OD_1408_0_RPDOCommunicationParameter_maxSubIndex    0
-        #define OD_1408_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-        #define OD_1408_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1409 */
-        #define OD_1409_RPDOCommunicationParameter                  0x1409
-
-        #define OD_1409_0_RPDOCommunicationParameter_maxSubIndex    0
-        #define OD_1409_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-        #define OD_1409_2_RPDOCommunicationParameter_transmissionType 2
-
-/*140a */
-        #define OD_140a_RPDOCommunicationParameter                  0x140a
-
-        #define OD_140a_0_RPDOCommunicationParameter_maxSubIndex    0
-        #define OD_140a_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-        #define OD_140a_2_RPDOCommunicationParameter_transmissionType 2
-
-/*140b */
-        #define OD_140b_RPDOCommunicationParameter                  0x140b
-
-        #define OD_140b_0_RPDOCommunicationParameter_maxSubIndex    0
-        #define OD_140b_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-        #define OD_140b_2_RPDOCommunicationParameter_transmissionType 2
-
-/*140c */
-        #define OD_140c_RPDOCommunicationParameter                  0x140c
-
-        #define OD_140c_0_RPDOCommunicationParameter_maxSubIndex    0
-        #define OD_140c_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-        #define OD_140c_2_RPDOCommunicationParameter_transmissionType 2
-
-/*140d */
-        #define OD_140d_RPDOCommunicationParameter                  0x140d
-
-        #define OD_140d_0_RPDOCommunicationParameter_maxSubIndex    0
-        #define OD_140d_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-        #define OD_140d_2_RPDOCommunicationParameter_transmissionType 2
-
-/*140e */
-        #define OD_140e_RPDOCommunicationParameter                  0x140e
-
-        #define OD_140e_0_RPDOCommunicationParameter_maxSubIndex    0
-        #define OD_140e_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-        #define OD_140e_2_RPDOCommunicationParameter_transmissionType 2
-
-/*140f */
-        #define OD_140f_RPDOCommunicationParameter                  0x140f
-
-        #define OD_140f_0_RPDOCommunicationParameter_maxSubIndex    0
-        #define OD_140f_1_RPDOCommunicationParameter_COB_IDUsedByRPDO 1
-        #define OD_140f_2_RPDOCommunicationParameter_transmissionType 2
-
-/*1600 */
-        #define OD_1600_RPDOMappingParameter                        0x1600
-
-        #define OD_1600_0_RPDOMappingParameter_maxSubIndex          0
-        #define OD_1600_1_RPDOMappingParameter_mappedObject1        1
-        #define OD_1600_2_RPDOMappingParameter_mappedObject2        2
-        #define OD_1600_3_RPDOMappingParameter_mappedObject3        3
-        #define OD_1600_4_RPDOMappingParameter_mappedObject4        4
-        #define OD_1600_5_RPDOMappingParameter_mappedObject5        5
-        #define OD_1600_6_RPDOMappingParameter_mappedObject6        6
-        #define OD_1600_7_RPDOMappingParameter_mappedObject7        7
-        #define OD_1600_8_RPDOMappingParameter_mappedObject8        8
-
-/*1601 */
-        #define OD_1601_RPDOMappingParameter                        0x1601
-
-        #define OD_1601_0_RPDOMappingParameter_maxSubIndex          0
-        #define OD_1601_1_RPDOMappingParameter_mappedObject1        1
-        #define OD_1601_2_RPDOMappingParameter_mappedObject2        2
-        #define OD_1601_3_RPDOMappingParameter_mappedObject3        3
-        #define OD_1601_4_RPDOMappingParameter_mappedObject4        4
-        #define OD_1601_5_RPDOMappingParameter_mappedObject5        5
-        #define OD_1601_6_RPDOMappingParameter_mappedObject6        6
-        #define OD_1601_7_RPDOMappingParameter_mappedObject7        7
-        #define OD_1601_8_RPDOMappingParameter_mappedObject8        8
-
-/*1602 */
-        #define OD_1602_RPDOMappingParameter                        0x1602
-
-        #define OD_1602_0_RPDOMappingParameter_maxSubIndex          0
-        #define OD_1602_1_RPDOMappingParameter_mappedObject1        1
-        #define OD_1602_2_RPDOMappingParameter_mappedObject2        2
-        #define OD_1602_3_RPDOMappingParameter_mappedObject3        3
-        #define OD_1602_4_RPDOMappingParameter_mappedObject4        4
-        #define OD_1602_5_RPDOMappingParameter_mappedObject5        5
-        #define OD_1602_6_RPDOMappingParameter_mappedObject6        6
-        #define OD_1602_7_RPDOMappingParameter_mappedObject7        7
-        #define OD_1602_8_RPDOMappingParameter_mappedObject8        8
-
-/*1603 */
-        #define OD_1603_RPDOMappingParameter                        0x1603
-
-        #define OD_1603_0_RPDOMappingParameter_maxSubIndex          0
-        #define OD_1603_1_RPDOMappingParameter_mappedObject1        1
-        #define OD_1603_2_RPDOMappingParameter_mappedObject2        2
-        #define OD_1603_3_RPDOMappingParameter_mappedObject3        3
-        #define OD_1603_4_RPDOMappingParameter_mappedObject4        4
-        #define OD_1603_5_RPDOMappingParameter_mappedObject5        5
-        #define OD_1603_6_RPDOMappingParameter_mappedObject6        6
-        #define OD_1603_7_RPDOMappingParameter_mappedObject7        7
-        #define OD_1603_8_RPDOMappingParameter_mappedObject8        8
-
-/*1604 */
-        #define OD_1604_RPDOMappingParameter                        0x1604
-
-        #define OD_1604_0_RPDOMappingParameter_maxSubIndex          0
-        #define OD_1604_1_RPDOMappingParameter_mappedObject1        1
-        #define OD_1604_2_RPDOMappingParameter_mappedObject2        2
-        #define OD_1604_3_RPDOMappingParameter_mappedObject3        3
-        #define OD_1604_4_RPDOMappingParameter_mappedObject4        4
-        #define OD_1604_5_RPDOMappingParameter_mappedObject5        5
-        #define OD_1604_6_RPDOMappingParameter_mappedObject6        6
-        #define OD_1604_7_RPDOMappingParameter_mappedObject7        7
-        #define OD_1604_8_RPDOMappingParameter_mappedObject8        8
-
-/*1605 */
-        #define OD_1605_RPDOMappingParameter                        0x1605
-
-        #define OD_1605_0_RPDOMappingParameter_maxSubIndex          0
-        #define OD_1605_1_RPDOMappingParameter_mappedObject1        1
-        #define OD_1605_2_RPDOMappingParameter_mappedObject2        2
-        #define OD_1605_3_RPDOMappingParameter_mappedObject3        3
-        #define OD_1605_4_RPDOMappingParameter_mappedObject4        4
-        #define OD_1605_5_RPDOMappingParameter_mappedObject5        5
-        #define OD_1605_6_RPDOMappingParameter_mappedObject6        6
-        #define OD_1605_7_RPDOMappingParameter_mappedObject7        7
-        #define OD_1605_8_RPDOMappingParameter_mappedObject8        8
-
-/*1606 */
-        #define OD_1606_RPDOMappingParameter                        0x1606
-
-        #define OD_1606_0_RPDOMappingParameter_maxSubIndex          0
-        #define OD_1606_1_RPDOMappingParameter_mappedObject1        1
-        #define OD_1606_2_RPDOMappingParameter_mappedObject2        2
-        #define OD_1606_3_RPDOMappingParameter_mappedObject3        3
-        #define OD_1606_4_RPDOMappingParameter_mappedObject4        4
-        #define OD_1606_5_RPDOMappingParameter_mappedObject5        5
-        #define OD_1606_6_RPDOMappingParameter_mappedObject6        6
-        #define OD_1606_7_RPDOMappingParameter_mappedObject7        7
-        #define OD_1606_8_RPDOMappingParameter_mappedObject8        8
-
-/*1607 */
-        #define OD_1607_RPDOMappingParameter                        0x1607
-
-        #define OD_1607_0_RPDOMappingParameter_maxSubIndex          0
-        #define OD_1607_1_RPDOMappingParameter_mappedObject1        1
-        #define OD_1607_2_RPDOMappingParameter_mappedObject2        2
-        #define OD_1607_3_RPDOMappingParameter_mappedObject3        3
-        #define OD_1607_4_RPDOMappingParameter_mappedObject4        4
-        #define OD_1607_5_RPDOMappingParameter_mappedObject5        5
-        #define OD_1607_6_RPDOMappingParameter_mappedObject6        6
-        #define OD_1607_7_RPDOMappingParameter_mappedObject7        7
-        #define OD_1607_8_RPDOMappingParameter_mappedObject8        8
-
-/*1608 */
-        #define OD_1608_RPDOMappingParameter                        0x1608
-
-        #define OD_1608_0_RPDOMappingParameter_maxSubIndex          0
-        #define OD_1608_1_RPDOMappingParameter_mappedObject1        1
-        #define OD_1608_2_RPDOMappingParameter_mappedObject2        2
-        #define OD_1608_3_RPDOMappingParameter_mappedObject3        3
-        #define OD_1608_4_RPDOMappingParameter_mappedObject4        4
-        #define OD_1608_5_RPDOMappingParameter_mappedObject5        5
-        #define OD_1608_6_RPDOMappingParameter_mappedObject6        6
-        #define OD_1608_7_RPDOMappingParameter_mappedObject7        7
-        #define OD_1608_8_RPDOMappingParameter_mappedObject8        8
-
-/*1609 */
-        #define OD_1609_RPDOMappingParameter                        0x1609
-
-        #define OD_1609_0_RPDOMappingParameter_maxSubIndex          0
-        #define OD_1609_1_RPDOMappingParameter_mappedObject1        1
-        #define OD_1609_2_RPDOMappingParameter_mappedObject2        2
-        #define OD_1609_3_RPDOMappingParameter_mappedObject3        3
-        #define OD_1609_4_RPDOMappingParameter_mappedObject4        4
-        #define OD_1609_5_RPDOMappingParameter_mappedObject5        5
-        #define OD_1609_6_RPDOMappingParameter_mappedObject6        6
-        #define OD_1609_7_RPDOMappingParameter_mappedObject7        7
-        #define OD_1609_8_RPDOMappingParameter_mappedObject8        8
-
-/*160a */
-        #define OD_160a_RPDOMappingParameter                        0x160a
-
-        #define OD_160a_0_RPDOMappingParameter_maxSubIndex          0
-        #define OD_160a_1_RPDOMappingParameter_mappedObject1        1
-        #define OD_160a_2_RPDOMappingParameter_mappedObject2        2
-        #define OD_160a_3_RPDOMappingParameter_mappedObject3        3
-        #define OD_160a_4_RPDOMappingParameter_mappedObject4        4
-        #define OD_160a_5_RPDOMappingParameter_mappedObject5        5
-        #define OD_160a_6_RPDOMappingParameter_mappedObject6        6
-        #define OD_160a_7_RPDOMappingParameter_mappedObject7        7
-        #define OD_160a_8_RPDOMappingParameter_mappedObject8        8
-
-/*160b */
-        #define OD_160b_RPDOMappingParameter                        0x160b
-
-        #define OD_160b_0_RPDOMappingParameter_maxSubIndex          0
-        #define OD_160b_1_RPDOMappingParameter_mappedObject1        1
-        #define OD_160b_2_RPDOMappingParameter_mappedObject2        2
-        #define OD_160b_3_RPDOMappingParameter_mappedObject3        3
-        #define OD_160b_4_RPDOMappingParameter_mappedObject4        4
-        #define OD_160b_5_RPDOMappingParameter_mappedObject5        5
-        #define OD_160b_6_RPDOMappingParameter_mappedObject6        6
-        #define OD_160b_7_RPDOMappingParameter_mappedObject7        7
-        #define OD_160b_8_RPDOMappingParameter_mappedObject8        8
-
-/*160c */
-        #define OD_160c_RPDOMappingParameter                        0x160c
-
-        #define OD_160c_0_RPDOMappingParameter_maxSubIndex          0
-        #define OD_160c_1_RPDOMappingParameter_mappedObject1        1
-        #define OD_160c_2_RPDOMappingParameter_mappedObject2        2
-        #define OD_160c_3_RPDOMappingParameter_mappedObject3        3
-        #define OD_160c_4_RPDOMappingParameter_mappedObject4        4
-        #define OD_160c_5_RPDOMappingParameter_mappedObject5        5
-        #define OD_160c_6_RPDOMappingParameter_mappedObject6        6
-        #define OD_160c_7_RPDOMappingParameter_mappedObject7        7
-        #define OD_160c_8_RPDOMappingParameter_mappedObject8        8
-
-/*160d */
-        #define OD_160d_RPDOMappingParameter                        0x160d
-
-        #define OD_160d_0_RPDOMappingParameter_maxSubIndex          0
-        #define OD_160d_1_RPDOMappingParameter_mappedObject1        1
-        #define OD_160d_2_RPDOMappingParameter_mappedObject2        2
-        #define OD_160d_3_RPDOMappingParameter_mappedObject3        3
-        #define OD_160d_4_RPDOMappingParameter_mappedObject4        4
-        #define OD_160d_5_RPDOMappingParameter_mappedObject5        5
-        #define OD_160d_6_RPDOMappingParameter_mappedObject6        6
-        #define OD_160d_7_RPDOMappingParameter_mappedObject7        7
-        #define OD_160d_8_RPDOMappingParameter_mappedObject8        8
-
-/*160e */
-        #define OD_160e_RPDOMappingParameter                        0x160e
-
-        #define OD_160e_0_RPDOMappingParameter_maxSubIndex          0
-        #define OD_160e_1_RPDOMappingParameter_mappedObject1        1
-        #define OD_160e_2_RPDOMappingParameter_mappedObject2        2
-        #define OD_160e_3_RPDOMappingParameter_mappedObject3        3
-        #define OD_160e_4_RPDOMappingParameter_mappedObject4        4
-        #define OD_160e_5_RPDOMappingParameter_mappedObject5        5
-        #define OD_160e_6_RPDOMappingParameter_mappedObject6        6
-        #define OD_160e_7_RPDOMappingParameter_mappedObject7        7
-        #define OD_160e_8_RPDOMappingParameter_mappedObject8        8
-
-/*160f */
-        #define OD_160f_RPDOMappingParameter                        0x160f
-
-        #define OD_160f_0_RPDOMappingParameter_maxSubIndex          0
-        #define OD_160f_1_RPDOMappingParameter_mappedObject1        1
-        #define OD_160f_2_RPDOMappingParameter_mappedObject2        2
-        #define OD_160f_3_RPDOMappingParameter_mappedObject3        3
-        #define OD_160f_4_RPDOMappingParameter_mappedObject4        4
-        #define OD_160f_5_RPDOMappingParameter_mappedObject5        5
-        #define OD_160f_6_RPDOMappingParameter_mappedObject6        6
-        #define OD_160f_7_RPDOMappingParameter_mappedObject7        7
-        #define OD_160f_8_RPDOMappingParameter_mappedObject8        8
-
-/*1800 */
-        #define OD_1800_TPDOCommunicationParameter                  0x1800
-
-        #define OD_1800_0_TPDOCommunicationParameter_maxSubIndex    0
-        #define OD_1800_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-        #define OD_1800_2_TPDOCommunicationParameter_transmissionType 2
-        #define OD_1800_3_TPDOCommunicationParameter_inhibitTime    3
-        #define OD_1800_4_TPDOCommunicationParameter_compatibilityEntry 4
-        #define OD_1800_5_TPDOCommunicationParameter_eventTimer     5
-        #define OD_1800_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1801 */
-        #define OD_1801_TPDOCommunicationParameter                  0x1801
-
-        #define OD_1801_0_TPDOCommunicationParameter_maxSubIndex    0
-        #define OD_1801_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-        #define OD_1801_2_TPDOCommunicationParameter_transmissionType 2
-        #define OD_1801_3_TPDOCommunicationParameter_inhibitTime    3
-        #define OD_1801_4_TPDOCommunicationParameter_compatibilityEntry 4
-        #define OD_1801_5_TPDOCommunicationParameter_eventTimer     5
-        #define OD_1801_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1802 */
-        #define OD_1802_TPDOCommunicationParameter                  0x1802
-
-        #define OD_1802_0_TPDOCommunicationParameter_maxSubIndex    0
-        #define OD_1802_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-        #define OD_1802_2_TPDOCommunicationParameter_transmissionType 2
-        #define OD_1802_3_TPDOCommunicationParameter_inhibitTime    3
-        #define OD_1802_4_TPDOCommunicationParameter_compatibilityEntry 4
-        #define OD_1802_5_TPDOCommunicationParameter_eventTimer     5
-        #define OD_1802_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1803 */
-        #define OD_1803_TPDOCommunicationParameter                  0x1803
-
-        #define OD_1803_0_TPDOCommunicationParameter_maxSubIndex    0
-        #define OD_1803_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-        #define OD_1803_2_TPDOCommunicationParameter_transmissionType 2
-        #define OD_1803_3_TPDOCommunicationParameter_inhibitTime    3
-        #define OD_1803_4_TPDOCommunicationParameter_compatibilityEntry 4
-        #define OD_1803_5_TPDOCommunicationParameter_eventTimer     5
-        #define OD_1803_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1804 */
-        #define OD_1804_TPDOCommunicationParameter                  0x1804
-
-        #define OD_1804_0_TPDOCommunicationParameter_maxSubIndex    0
-        #define OD_1804_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-        #define OD_1804_2_TPDOCommunicationParameter_transmissionType 2
-        #define OD_1804_3_TPDOCommunicationParameter_inhibitTime    3
-        #define OD_1804_4_TPDOCommunicationParameter_compatibilityEntry 4
-        #define OD_1804_5_TPDOCommunicationParameter_eventTimer     5
-        #define OD_1804_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1805 */
-        #define OD_1805_TPDOCommunicationParameter                  0x1805
-
-        #define OD_1805_0_TPDOCommunicationParameter_maxSubIndex    0
-        #define OD_1805_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-        #define OD_1805_2_TPDOCommunicationParameter_transmissionType 2
-        #define OD_1805_3_TPDOCommunicationParameter_inhibitTime    3
-        #define OD_1805_4_TPDOCommunicationParameter_compatibilityEntry 4
-        #define OD_1805_5_TPDOCommunicationParameter_eventTimer     5
-        #define OD_1805_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1806 */
-        #define OD_1806_TPDOCommunicationParameter                  0x1806
-
-        #define OD_1806_0_TPDOCommunicationParameter_maxSubIndex    0
-        #define OD_1806_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-        #define OD_1806_2_TPDOCommunicationParameter_transmissionType 2
-        #define OD_1806_3_TPDOCommunicationParameter_inhibitTime    3
-        #define OD_1806_4_TPDOCommunicationParameter_compatibilityEntry 4
-        #define OD_1806_5_TPDOCommunicationParameter_eventTimer     5
-        #define OD_1806_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1807 */
-        #define OD_1807_TPDOCommunicationParameter                  0x1807
-
-        #define OD_1807_0_TPDOCommunicationParameter_maxSubIndex    0
-        #define OD_1807_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-        #define OD_1807_2_TPDOCommunicationParameter_transmissionType 2
-        #define OD_1807_3_TPDOCommunicationParameter_inhibitTime    3
-        #define OD_1807_4_TPDOCommunicationParameter_compatibilityEntry 4
-        #define OD_1807_5_TPDOCommunicationParameter_eventTimer     5
-        #define OD_1807_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1808 */
-        #define OD_1808_TPDOCommunicationParameter                  0x1808
-
-        #define OD_1808_0_TPDOCommunicationParameter_maxSubIndex    0
-        #define OD_1808_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-        #define OD_1808_2_TPDOCommunicationParameter_transmissionType 2
-        #define OD_1808_3_TPDOCommunicationParameter_inhibitTime    3
-        #define OD_1808_4_TPDOCommunicationParameter_compatibilityEntry 4
-        #define OD_1808_5_TPDOCommunicationParameter_eventTimer     5
-        #define OD_1808_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1809 */
-        #define OD_1809_TPDOCommunicationParameter                  0x1809
-
-        #define OD_1809_0_TPDOCommunicationParameter_maxSubIndex    0
-        #define OD_1809_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-        #define OD_1809_2_TPDOCommunicationParameter_transmissionType 2
-        #define OD_1809_3_TPDOCommunicationParameter_inhibitTime    3
-        #define OD_1809_4_TPDOCommunicationParameter_compatibilityEntry 4
-        #define OD_1809_5_TPDOCommunicationParameter_eventTimer     5
-        #define OD_1809_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*180a */
-        #define OD_180a_TPDOCommunicationParameter                  0x180a
-
-        #define OD_180a_0_TPDOCommunicationParameter_maxSubIndex    0
-        #define OD_180a_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-        #define OD_180a_2_TPDOCommunicationParameter_transmissionType 2
-        #define OD_180a_3_TPDOCommunicationParameter_inhibitTime    3
-        #define OD_180a_4_TPDOCommunicationParameter_compatibilityEntry 4
-        #define OD_180a_5_TPDOCommunicationParameter_eventTimer     5
-        #define OD_180a_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*180b */
-        #define OD_180b_TPDOCommunicationParameter                  0x180b
-
-        #define OD_180b_0_TPDOCommunicationParameter_maxSubIndex    0
-        #define OD_180b_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-        #define OD_180b_2_TPDOCommunicationParameter_transmissionType 2
-        #define OD_180b_3_TPDOCommunicationParameter_inhibitTime    3
-        #define OD_180b_4_TPDOCommunicationParameter_compatibilityEntry 4
-        #define OD_180b_5_TPDOCommunicationParameter_eventTimer     5
-        #define OD_180b_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*180c */
-        #define OD_180c_TPDOCommunicationParameter                  0x180c
-
-        #define OD_180c_0_TPDOCommunicationParameter_maxSubIndex    0
-        #define OD_180c_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-        #define OD_180c_2_TPDOCommunicationParameter_transmissionType 2
-        #define OD_180c_3_TPDOCommunicationParameter_inhibitTime    3
-        #define OD_180c_4_TPDOCommunicationParameter_compatibilityEntry 4
-        #define OD_180c_5_TPDOCommunicationParameter_eventTimer     5
-        #define OD_180c_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*180d */
-        #define OD_180d_TPDOCommunicationParameter                  0x180d
-
-        #define OD_180d_0_TPDOCommunicationParameter_maxSubIndex    0
-        #define OD_180d_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-        #define OD_180d_2_TPDOCommunicationParameter_transmissionType 2
-        #define OD_180d_3_TPDOCommunicationParameter_inhibitTime    3
-        #define OD_180d_4_TPDOCommunicationParameter_compatibilityEntry 4
-        #define OD_180d_5_TPDOCommunicationParameter_eventTimer     5
-        #define OD_180d_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*180e */
-        #define OD_180e_TPDOCommunicationParameter                  0x180e
-
-        #define OD_180e_0_TPDOCommunicationParameter_maxSubIndex    0
-        #define OD_180e_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-        #define OD_180e_2_TPDOCommunicationParameter_transmissionType 2
-        #define OD_180e_3_TPDOCommunicationParameter_inhibitTime    3
-        #define OD_180e_4_TPDOCommunicationParameter_compatibilityEntry 4
-        #define OD_180e_5_TPDOCommunicationParameter_eventTimer     5
-        #define OD_180e_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*180f */
-        #define OD_180f_TPDOCommunicationParameter                  0x180f
-
-        #define OD_180f_0_TPDOCommunicationParameter_maxSubIndex    0
-        #define OD_180f_1_TPDOCommunicationParameter_COB_IDUsedByTPDO 1
-        #define OD_180f_2_TPDOCommunicationParameter_transmissionType 2
-        #define OD_180f_3_TPDOCommunicationParameter_inhibitTime    3
-        #define OD_180f_4_TPDOCommunicationParameter_compatibilityEntry 4
-        #define OD_180f_5_TPDOCommunicationParameter_eventTimer     5
-        #define OD_180f_6_TPDOCommunicationParameter_SYNCStartValue 6
-
-/*1a00 */
-        #define OD_1a00_TPDOMappingParameter                        0x1a00
-
-        #define OD_1a00_0_TPDOMappingParameter_maxSubIndex          0
-        #define OD_1a00_1_TPDOMappingParameter_mappedObject1        1
-        #define OD_1a00_2_TPDOMappingParameter_mappedObject2        2
-        #define OD_1a00_3_TPDOMappingParameter_mappedObject3        3
-        #define OD_1a00_4_TPDOMappingParameter_mappedObject4        4
-        #define OD_1a00_5_TPDOMappingParameter_mappedObject5        5
-        #define OD_1a00_6_TPDOMappingParameter_mappedObject6        6
-        #define OD_1a00_7_TPDOMappingParameter_mappedObject7        7
-        #define OD_1a00_8_TPDOMappingParameter_mappedObject8        8
-
-/*1a01 */
-        #define OD_1a01_TPDOMappingParameter                        0x1a01
-
-        #define OD_1a01_0_TPDOMappingParameter_maxSubIndex          0
-        #define OD_1a01_1_TPDOMappingParameter_mappedObject1        1
-        #define OD_1a01_2_TPDOMappingParameter_mappedObject2        2
-        #define OD_1a01_3_TPDOMappingParameter_mappedObject3        3
-        #define OD_1a01_4_TPDOMappingParameter_mappedObject4        4
-        #define OD_1a01_5_TPDOMappingParameter_mappedObject5        5
-        #define OD_1a01_6_TPDOMappingParameter_mappedObject6        6
-        #define OD_1a01_7_TPDOMappingParameter_mappedObject7        7
-        #define OD_1a01_8_TPDOMappingParameter_mappedObject8        8
-
-/*1a02 */
-        #define OD_1a02_TPDOMappingParameter                        0x1a02
-
-        #define OD_1a02_0_TPDOMappingParameter_maxSubIndex          0
-        #define OD_1a02_1_TPDOMappingParameter_mappedObject1        1
-        #define OD_1a02_2_TPDOMappingParameter_mappedObject2        2
-        #define OD_1a02_3_TPDOMappingParameter_mappedObject3        3
-        #define OD_1a02_4_TPDOMappingParameter_mappedObject4        4
-        #define OD_1a02_5_TPDOMappingParameter_mappedObject5        5
-        #define OD_1a02_6_TPDOMappingParameter_mappedObject6        6
-        #define OD_1a02_7_TPDOMappingParameter_mappedObject7        7
-        #define OD_1a02_8_TPDOMappingParameter_mappedObject8        8
-
-/*1a03 */
-        #define OD_1a03_TPDOMappingParameter                        0x1a03
-
-        #define OD_1a03_0_TPDOMappingParameter_maxSubIndex          0
-        #define OD_1a03_1_TPDOMappingParameter_mappedObject1        1
-        #define OD_1a03_2_TPDOMappingParameter_mappedObject2        2
-        #define OD_1a03_3_TPDOMappingParameter_mappedObject3        3
-        #define OD_1a03_4_TPDOMappingParameter_mappedObject4        4
-        #define OD_1a03_5_TPDOMappingParameter_mappedObject5        5
-        #define OD_1a03_6_TPDOMappingParameter_mappedObject6        6
-        #define OD_1a03_7_TPDOMappingParameter_mappedObject7        7
-        #define OD_1a03_8_TPDOMappingParameter_mappedObject8        8
-
-/*1a04 */
-        #define OD_1a04_TPDOMappingParameter                        0x1a04
-
-        #define OD_1a04_0_TPDOMappingParameter_maxSubIndex          0
-        #define OD_1a04_1_TPDOMappingParameter_mappedObject1        1
-        #define OD_1a04_2_TPDOMappingParameter_mappedObject2        2
-        #define OD_1a04_3_TPDOMappingParameter_mappedObject3        3
-        #define OD_1a04_4_TPDOMappingParameter_mappedObject4        4
-        #define OD_1a04_5_TPDOMappingParameter_mappedObject5        5
-        #define OD_1a04_6_TPDOMappingParameter_mappedObject6        6
-        #define OD_1a04_7_TPDOMappingParameter_mappedObject7        7
-        #define OD_1a04_8_TPDOMappingParameter_mappedObject8        8
-
-/*1a05 */
-        #define OD_1a05_TPDOMappingParameter                        0x1a05
-
-        #define OD_1a05_0_TPDOMappingParameter_maxSubIndex          0
-        #define OD_1a05_1_TPDOMappingParameter_mappedObject1        1
-        #define OD_1a05_2_TPDOMappingParameter_mappedObject2        2
-        #define OD_1a05_3_TPDOMappingParameter_mappedObject3        3
-        #define OD_1a05_4_TPDOMappingParameter_mappedObject4        4
-        #define OD_1a05_5_TPDOMappingParameter_mappedObject5        5
-        #define OD_1a05_6_TPDOMappingParameter_mappedObject6        6
-        #define OD_1a05_7_TPDOMappingParameter_mappedObject7        7
-        #define OD_1a05_8_TPDOMappingParameter_mappedObject8        8
-
-/*1a06 */
-        #define OD_1a06_TPDOMappingParameter                        0x1a06
-
-        #define OD_1a06_0_TPDOMappingParameter_maxSubIndex          0
-        #define OD_1a06_1_TPDOMappingParameter_mappedObject1        1
-        #define OD_1a06_2_TPDOMappingParameter_mappedObject2        2
-        #define OD_1a06_3_TPDOMappingParameter_mappedObject3        3
-        #define OD_1a06_4_TPDOMappingParameter_mappedObject4        4
-        #define OD_1a06_5_TPDOMappingParameter_mappedObject5        5
-        #define OD_1a06_6_TPDOMappingParameter_mappedObject6        6
-        #define OD_1a06_7_TPDOMappingParameter_mappedObject7        7
-        #define OD_1a06_8_TPDOMappingParameter_mappedObject8        8
-
-/*1a07 */
-        #define OD_1a07_TPDOMappingParameter                        0x1a07
-
-        #define OD_1a07_0_TPDOMappingParameter_maxSubIndex          0
-        #define OD_1a07_1_TPDOMappingParameter_mappedObject1        1
-        #define OD_1a07_2_TPDOMappingParameter_mappedObject2        2
-        #define OD_1a07_3_TPDOMappingParameter_mappedObject3        3
-        #define OD_1a07_4_TPDOMappingParameter_mappedObject4        4
-        #define OD_1a07_5_TPDOMappingParameter_mappedObject5        5
-        #define OD_1a07_6_TPDOMappingParameter_mappedObject6        6
-        #define OD_1a07_7_TPDOMappingParameter_mappedObject7        7
-        #define OD_1a07_8_TPDOMappingParameter_mappedObject8        8
-
-/*1a08 */
-        #define OD_1a08_TPDOMappingParameter                        0x1a08
-
-        #define OD_1a08_0_TPDOMappingParameter_maxSubIndex          0
-        #define OD_1a08_1_TPDOMappingParameter_mappedObject1        1
-        #define OD_1a08_2_TPDOMappingParameter_mappedObject2        2
-        #define OD_1a08_3_TPDOMappingParameter_mappedObject3        3
-        #define OD_1a08_4_TPDOMappingParameter_mappedObject4        4
-        #define OD_1a08_5_TPDOMappingParameter_mappedObject5        5
-        #define OD_1a08_6_TPDOMappingParameter_mappedObject6        6
-        #define OD_1a08_7_TPDOMappingParameter_mappedObject7        7
-        #define OD_1a08_8_TPDOMappingParameter_mappedObject8        8
-
-/*1a09 */
-        #define OD_1a09_TPDOMappingParameter                        0x1a09
-
-        #define OD_1a09_0_TPDOMappingParameter_maxSubIndex          0
-        #define OD_1a09_1_TPDOMappingParameter_mappedObject1        1
-        #define OD_1a09_2_TPDOMappingParameter_mappedObject2        2
-        #define OD_1a09_3_TPDOMappingParameter_mappedObject3        3
-        #define OD_1a09_4_TPDOMappingParameter_mappedObject4        4
-        #define OD_1a09_5_TPDOMappingParameter_mappedObject5        5
-        #define OD_1a09_6_TPDOMappingParameter_mappedObject6        6
-        #define OD_1a09_7_TPDOMappingParameter_mappedObject7        7
-        #define OD_1a09_8_TPDOMappingParameter_mappedObject8        8
-
-/*1a0a */
-        #define OD_1a0a_TPDOMappingParameter                        0x1a0a
-
-        #define OD_1a0a_0_TPDOMappingParameter_maxSubIndex          0
-        #define OD_1a0a_1_TPDOMappingParameter_mappedObject1        1
-        #define OD_1a0a_2_TPDOMappingParameter_mappedObject2        2
-        #define OD_1a0a_3_TPDOMappingParameter_mappedObject3        3
-        #define OD_1a0a_4_TPDOMappingParameter_mappedObject4        4
-        #define OD_1a0a_5_TPDOMappingParameter_mappedObject5        5
-        #define OD_1a0a_6_TPDOMappingParameter_mappedObject6        6
-        #define OD_1a0a_7_TPDOMappingParameter_mappedObject7        7
-        #define OD_1a0a_8_TPDOMappingParameter_mappedObject8        8
-
-/*1a0b */
-        #define OD_1a0b_TPDOMappingParameter                        0x1a0b
-
-        #define OD_1a0b_0_TPDOMappingParameter_maxSubIndex          0
-        #define OD_1a0b_1_TPDOMappingParameter_mappedObject1        1
-        #define OD_1a0b_2_TPDOMappingParameter_mappedObject2        2
-        #define OD_1a0b_3_TPDOMappingParameter_mappedObject3        3
-        #define OD_1a0b_4_TPDOMappingParameter_mappedObject4        4
-        #define OD_1a0b_5_TPDOMappingParameter_mappedObject5        5
-        #define OD_1a0b_6_TPDOMappingParameter_mappedObject6        6
-        #define OD_1a0b_7_TPDOMappingParameter_mappedObject7        7
-        #define OD_1a0b_8_TPDOMappingParameter_mappedObject8        8
-
-/*1a0c */
-        #define OD_1a0c_TPDOMappingParameter                        0x1a0c
-
-        #define OD_1a0c_0_TPDOMappingParameter_maxSubIndex          0
-        #define OD_1a0c_1_TPDOMappingParameter_mappedObject1        1
-        #define OD_1a0c_2_TPDOMappingParameter_mappedObject2        2
-        #define OD_1a0c_3_TPDOMappingParameter_mappedObject3        3
-        #define OD_1a0c_4_TPDOMappingParameter_mappedObject4        4
-        #define OD_1a0c_5_TPDOMappingParameter_mappedObject5        5
-        #define OD_1a0c_6_TPDOMappingParameter_mappedObject6        6
-        #define OD_1a0c_7_TPDOMappingParameter_mappedObject7        7
-        #define OD_1a0c_8_TPDOMappingParameter_mappedObject8        8
-
-/*1a0d */
-        #define OD_1a0d_TPDOMappingParameter                        0x1a0d
-
-        #define OD_1a0d_0_TPDOMappingParameter_maxSubIndex          0
-        #define OD_1a0d_1_TPDOMappingParameter_mappedObject1        1
-        #define OD_1a0d_2_TPDOMappingParameter_mappedObject2        2
-        #define OD_1a0d_3_TPDOMappingParameter_mappedObject3        3
-        #define OD_1a0d_4_TPDOMappingParameter_mappedObject4        4
-        #define OD_1a0d_5_TPDOMappingParameter_mappedObject5        5
-        #define OD_1a0d_6_TPDOMappingParameter_mappedObject6        6
-        #define OD_1a0d_7_TPDOMappingParameter_mappedObject7        7
-        #define OD_1a0d_8_TPDOMappingParameter_mappedObject8        8
-
-/*1a0e */
-        #define OD_1a0e_TPDOMappingParameter                        0x1a0e
-
-        #define OD_1a0e_0_TPDOMappingParameter_maxSubIndex          0
-        #define OD_1a0e_1_TPDOMappingParameter_mappedObject1        1
-        #define OD_1a0e_2_TPDOMappingParameter_mappedObject2        2
-        #define OD_1a0e_3_TPDOMappingParameter_mappedObject3        3
-        #define OD_1a0e_4_TPDOMappingParameter_mappedObject4        4
-        #define OD_1a0e_5_TPDOMappingParameter_mappedObject5        5
-        #define OD_1a0e_6_TPDOMappingParameter_mappedObject6        6
-        #define OD_1a0e_7_TPDOMappingParameter_mappedObject7        7
-        #define OD_1a0e_8_TPDOMappingParameter_mappedObject8        8
-
-/*1a0f */
-        #define OD_1a0f_TPDOMappingParameter                        0x1a0f
-
-        #define OD_1a0f_0_TPDOMappingParameter_maxSubIndex          0
-        #define OD_1a0f_1_TPDOMappingParameter_mappedObject1        1
-        #define OD_1a0f_2_TPDOMappingParameter_mappedObject2        2
-        #define OD_1a0f_3_TPDOMappingParameter_mappedObject3        3
-        #define OD_1a0f_4_TPDOMappingParameter_mappedObject4        4
-        #define OD_1a0f_5_TPDOMappingParameter_mappedObject5        5
-        #define OD_1a0f_6_TPDOMappingParameter_mappedObject6        6
-        #define OD_1a0f_7_TPDOMappingParameter_mappedObject7        7
-        #define OD_1a0f_8_TPDOMappingParameter_mappedObject8        8
-
-/*1f80 */
-        #define OD_1f80_NMTStartup                                  0x1f80
-
-/*2000 */
-        #define OD_2000_buttons                                     0x2000
-
-/*2100 */
-        #define OD_2100_errorStatusBits                             0x2100
-
-/*2101 */
-        #define OD_2101_CANNodeID                                   0x2101
-
-/*2102 */
-        #define OD_2102_CANBitRate                                  0x2102
-
-/*2103 */
-        #define OD_2103_SYNCCounter                                 0x2103
-
-/*2104 */
-        #define OD_2104_SYNCTime                                    0x2104
-
-/*2106 */
-        #define OD_2106_powerOnCounter                              0x2106
-
-/*2107 */
-        #define OD_2107_performance                                 0x2107
-
-        #define OD_2107_0_performance_maxSubIndex                   0
-        #define OD_2107_1_performance_cyclesPerSecond               1
-        #define OD_2107_2_performance_timerCycleTime                2
-        #define OD_2107_3_performance_timerCycleMaxTime             3
-        #define OD_2107_4_performance_mainCycleTime                 4
-        #define OD_2107_5_performance_mainCycleMaxTime              5
-
-/*2108 */
-        #define OD_2108_temperature                                 0x2108
-
-        #define OD_2108_0_temperature_maxSubIndex                   0
-        #define OD_2108_1_temperature_mainPCB                       1
-
-/*2109 */
-        #define OD_2109_voltage                                     0x2109
-
-        #define OD_2109_0_voltage_maxSubIndex                       0
-        #define OD_2109_1_voltage_mainPCBSupply                     1
-
-/*2110 */
-        #define OD_2110_variableInt32                               0x2110
-
-        #define OD_2110_0_variableInt32_maxSubIndex                 0
-        #define OD_2110_1_variableInt32_int32                       1
-        #define OD_2110_2_variableInt32_int32                       2
-        #define OD_2110_3_variableInt32_int32                       3
-        #define OD_2110_4_variableInt32_int32                       4
-        #define OD_2110_5_variableInt32_int32                       5
-        #define OD_2110_6_variableInt32_int32                       6
-        #define OD_2110_7_variableInt32_int32                       7
-        #define OD_2110_8_variableInt32_int32                       8
-        #define OD_2110_9_variableInt32_int32                       9
-        #define OD_2110_10_variableInt32_int32                      10
-        #define OD_2110_11_variableInt32_int32                      11
-        #define OD_2110_12_variableInt32_int32                      12
-        #define OD_2110_13_variableInt32_int32                      13
-        #define OD_2110_14_variableInt32_int32                      14
-        #define OD_2110_15_variableInt32_int32                      15
-        #define OD_2110_16_variableInt32_int32                      16
-        #define OD_2110_17_variableInt32_int32                      17
-        #define OD_2110_18_variableInt32_int32                      18
-        #define OD_2110_19_variableInt32_int32                      19
-        #define OD_2110_20_variableInt32_int32                      20
-        #define OD_2110_21_variableInt32_int32                      21
-        #define OD_2110_22_variableInt32_int32                      22
-        #define OD_2110_23_variableInt32_int32                      23
-        #define OD_2110_24_variableInt32_int32                      24
-        #define OD_2110_25_variableInt32_int32                      25
-        #define OD_2110_26_variableInt32_int32                      26
-        #define OD_2110_27_variableInt32_int32                      27
-        #define OD_2110_28_variableInt32_int32                      28
-        #define OD_2110_29_variableInt32_int32                      29
-        #define OD_2110_30_variableInt32_int32                      30
-        #define OD_2110_31_variableInt32_int32                      31
-        #define OD_2110_32_variableInt32_int32                      32
-
-/*2111 */
-        #define OD_2111_variableROM_Int32                           0x2111
-
-        #define OD_2111_0_variableROM_Int32_maxSubIndex             0
-        #define OD_2111_1_variableROM_Int32_int32                   1
-        #define OD_2111_2_variableROM_Int32_int32                   2
-        #define OD_2111_3_variableROM_Int32_int32                   3
-        #define OD_2111_4_variableROM_Int32_int32                   4
-        #define OD_2111_5_variableROM_Int32_int32                   5
-        #define OD_2111_6_variableROM_Int32_int32                   6
-        #define OD_2111_7_variableROM_Int32_int32                   7
-        #define OD_2111_8_variableROM_Int32_int32                   8
-        #define OD_2111_9_variableROM_Int32_int32                   9
-        #define OD_2111_10_variableROM_Int32_int32                  10
-        #define OD_2111_11_variableROM_Int32_int32                  11
-        #define OD_2111_12_variableROM_Int32_int32                  12
-        #define OD_2111_13_variableROM_Int32_int32                  13
-        #define OD_2111_14_variableROM_Int32_int32                  14
-        #define OD_2111_15_variableROM_Int32_int32                  15
-        #define OD_2111_16_variableROM_Int32_int32                  16
-
-/*2112 */
-        #define OD_2112_variableNV_Int32                            0x2112
-
-        #define OD_2112_0_variableNV_Int32_maxSubIndex              0
-        #define OD_2112_1_variableNV_Int32_int32                    1
-        #define OD_2112_2_variableNV_Int32_int32                    2
-        #define OD_2112_3_variableNV_Int32_int32                    3
-        #define OD_2112_4_variableNV_Int32_int32                    4
-        #define OD_2112_5_variableNV_Int32_int32                    5
-        #define OD_2112_6_variableNV_Int32_int32                    6
-        #define OD_2112_7_variableNV_Int32_int32                    7
-        #define OD_2112_8_variableNV_Int32_int32                    8
-        #define OD_2112_9_variableNV_Int32_int32                    9
-        #define OD_2112_10_variableNV_Int32_int32                   10
-        #define OD_2112_11_variableNV_Int32_int32                   11
-        #define OD_2112_12_variableNV_Int32_int32                   12
-        #define OD_2112_13_variableNV_Int32_int32                   13
-        #define OD_2112_14_variableNV_Int32_int32                   14
-        #define OD_2112_15_variableNV_Int32_int32                   15
-        #define OD_2112_16_variableNV_Int32_int32                   16
-
-/*2120 */
-        #define OD_2120_testVar                                     0x2120
-
-        #define OD_2120_0_testVar_maxSubIndex                       0
-        #define OD_2120_1_testVar_I64                               1
-        #define OD_2120_2_testVar_U64                               2
-        #define OD_2120_3_testVar_R32                               3
-        #define OD_2120_4_testVar_R64                               4
-        #define OD_2120_5_testVar_domain                            5
-
-/*2130 */
-        #define OD_2130_time                                        0x2130
-
-        #define OD_2130_0_time_maxSubIndex                          0
-        #define OD_2130_1_time_string                               1
-        #define OD_2130_2_time_epochTimeBaseMs                      2
-        #define OD_2130_3_time_epochTimeOffsetMs                    3
-
-/*2301 */
-        #define OD_2301_traceConfig                                 0x2301
-
-        #define OD_2301_0_traceConfig_maxSubIndex                   0
-        #define OD_2301_1_traceConfig_size                          1
-        #define OD_2301_2_traceConfig_axisNo                        2
-        #define OD_2301_3_traceConfig_name                          3
-        #define OD_2301_4_traceConfig_color                         4
-        #define OD_2301_5_traceConfig_map                           5
-        #define OD_2301_6_traceConfig_format                        6
-        #define OD_2301_7_traceConfig_trigger                       7
-        #define OD_2301_8_traceConfig_threshold                     8
-
-/*2302 */
-        #define OD_2302_traceConfig                                 0x2302
-
-        #define OD_2302_0_traceConfig_maxSubIndex                   0
-        #define OD_2302_1_traceConfig_size                          1
-        #define OD_2302_2_traceConfig_axisNo                        2
-        #define OD_2302_3_traceConfig_name                          3
-        #define OD_2302_4_traceConfig_color                         4
-        #define OD_2302_5_traceConfig_map                           5
-        #define OD_2302_6_traceConfig_format                        6
-        #define OD_2302_7_traceConfig_trigger                       7
-        #define OD_2302_8_traceConfig_threshold                     8
-
-/*2303 */
-        #define OD_2303_traceConfig                                 0x2303
-
-        #define OD_2303_0_traceConfig_maxSubIndex                   0
-        #define OD_2303_1_traceConfig_size                          1
-        #define OD_2303_2_traceConfig_axisNo                        2
-        #define OD_2303_3_traceConfig_name                          3
-        #define OD_2303_4_traceConfig_color                         4
-        #define OD_2303_5_traceConfig_map                           5
-        #define OD_2303_6_traceConfig_format                        6
-        #define OD_2303_7_traceConfig_trigger                       7
-        #define OD_2303_8_traceConfig_threshold                     8
-
-/*2304 */
-        #define OD_2304_traceConfig                                 0x2304
-
-        #define OD_2304_0_traceConfig_maxSubIndex                   0
-        #define OD_2304_1_traceConfig_size                          1
-        #define OD_2304_2_traceConfig_axisNo                        2
-        #define OD_2304_3_traceConfig_name                          3
-        #define OD_2304_4_traceConfig_color                         4
-        #define OD_2304_5_traceConfig_map                           5
-        #define OD_2304_6_traceConfig_format                        6
-        #define OD_2304_7_traceConfig_trigger                       7
-        #define OD_2304_8_traceConfig_threshold                     8
-
-/*2305 */
-        #define OD_2305_traceConfig                                 0x2305
-
-        #define OD_2305_0_traceConfig_maxSubIndex                   0
-        #define OD_2305_1_traceConfig_size                          1
-        #define OD_2305_2_traceConfig_axisNo                        2
-        #define OD_2305_3_traceConfig_name                          3
-        #define OD_2305_4_traceConfig_color                         4
-        #define OD_2305_5_traceConfig_map                           5
-        #define OD_2305_6_traceConfig_format                        6
-        #define OD_2305_7_traceConfig_trigger                       7
-        #define OD_2305_8_traceConfig_threshold                     8
-
-/*2306 */
-        #define OD_2306_traceConfig                                 0x2306
-
-        #define OD_2306_0_traceConfig_maxSubIndex                   0
-        #define OD_2306_1_traceConfig_size                          1
-        #define OD_2306_2_traceConfig_axisNo                        2
-        #define OD_2306_3_traceConfig_name                          3
-        #define OD_2306_4_traceConfig_color                         4
-        #define OD_2306_5_traceConfig_map                           5
-        #define OD_2306_6_traceConfig_format                        6
-        #define OD_2306_7_traceConfig_trigger                       7
-        #define OD_2306_8_traceConfig_threshold                     8
-
-/*2307 */
-        #define OD_2307_traceConfig                                 0x2307
-
-        #define OD_2307_0_traceConfig_maxSubIndex                   0
-        #define OD_2307_1_traceConfig_size                          1
-        #define OD_2307_2_traceConfig_axisNo                        2
-        #define OD_2307_3_traceConfig_name                          3
-        #define OD_2307_4_traceConfig_color                         4
-        #define OD_2307_5_traceConfig_map                           5
-        #define OD_2307_6_traceConfig_format                        6
-        #define OD_2307_7_traceConfig_trigger                       7
-        #define OD_2307_8_traceConfig_threshold                     8
-
-/*2308 */
-        #define OD_2308_traceConfig                                 0x2308
-
-        #define OD_2308_0_traceConfig_maxSubIndex                   0
-        #define OD_2308_1_traceConfig_size                          1
-        #define OD_2308_2_traceConfig_axisNo                        2
-        #define OD_2308_3_traceConfig_name                          3
-        #define OD_2308_4_traceConfig_color                         4
-        #define OD_2308_5_traceConfig_map                           5
-        #define OD_2308_6_traceConfig_format                        6
-        #define OD_2308_7_traceConfig_trigger                       7
-        #define OD_2308_8_traceConfig_threshold                     8
-
-/*2309 */
-        #define OD_2309_traceConfig                                 0x2309
-
-        #define OD_2309_0_traceConfig_maxSubIndex                   0
-        #define OD_2309_1_traceConfig_size                          1
-        #define OD_2309_2_traceConfig_axisNo                        2
-        #define OD_2309_3_traceConfig_name                          3
-        #define OD_2309_4_traceConfig_color                         4
-        #define OD_2309_5_traceConfig_map                           5
-        #define OD_2309_6_traceConfig_format                        6
-        #define OD_2309_7_traceConfig_trigger                       7
-        #define OD_2309_8_traceConfig_threshold                     8
-
-/*230a */
-        #define OD_230a_traceConfig                                 0x230a
-
-        #define OD_230a_0_traceConfig_maxSubIndex                   0
-        #define OD_230a_1_traceConfig_size                          1
-        #define OD_230a_2_traceConfig_axisNo                        2
-        #define OD_230a_3_traceConfig_name                          3
-        #define OD_230a_4_traceConfig_color                         4
-        #define OD_230a_5_traceConfig_map                           5
-        #define OD_230a_6_traceConfig_format                        6
-        #define OD_230a_7_traceConfig_trigger                       7
-        #define OD_230a_8_traceConfig_threshold                     8
-
-/*230b */
-        #define OD_230b_traceConfig                                 0x230b
-
-        #define OD_230b_0_traceConfig_maxSubIndex                   0
-        #define OD_230b_1_traceConfig_size                          1
-        #define OD_230b_2_traceConfig_axisNo                        2
-        #define OD_230b_3_traceConfig_name                          3
-        #define OD_230b_4_traceConfig_color                         4
-        #define OD_230b_5_traceConfig_map                           5
-        #define OD_230b_6_traceConfig_format                        6
-        #define OD_230b_7_traceConfig_trigger                       7
-        #define OD_230b_8_traceConfig_threshold                     8
-
-/*230c */
-        #define OD_230c_traceConfig                                 0x230c
-
-        #define OD_230c_0_traceConfig_maxSubIndex                   0
-        #define OD_230c_1_traceConfig_size                          1
-        #define OD_230c_2_traceConfig_axisNo                        2
-        #define OD_230c_3_traceConfig_name                          3
-        #define OD_230c_4_traceConfig_color                         4
-        #define OD_230c_5_traceConfig_map                           5
-        #define OD_230c_6_traceConfig_format                        6
-        #define OD_230c_7_traceConfig_trigger                       7
-        #define OD_230c_8_traceConfig_threshold                     8
-
-/*230d */
-        #define OD_230d_traceConfig                                 0x230d
-
-        #define OD_230d_0_traceConfig_maxSubIndex                   0
-        #define OD_230d_1_traceConfig_size                          1
-        #define OD_230d_2_traceConfig_axisNo                        2
-        #define OD_230d_3_traceConfig_name                          3
-        #define OD_230d_4_traceConfig_color                         4
-        #define OD_230d_5_traceConfig_map                           5
-        #define OD_230d_6_traceConfig_format                        6
-        #define OD_230d_7_traceConfig_trigger                       7
-        #define OD_230d_8_traceConfig_threshold                     8
-
-/*230e */
-        #define OD_230e_traceConfig                                 0x230e
-
-        #define OD_230e_0_traceConfig_maxSubIndex                   0
-        #define OD_230e_1_traceConfig_size                          1
-        #define OD_230e_2_traceConfig_axisNo                        2
-        #define OD_230e_3_traceConfig_name                          3
-        #define OD_230e_4_traceConfig_color                         4
-        #define OD_230e_5_traceConfig_map                           5
-        #define OD_230e_6_traceConfig_format                        6
-        #define OD_230e_7_traceConfig_trigger                       7
-        #define OD_230e_8_traceConfig_threshold                     8
-
-/*230f */
-        #define OD_230f_traceConfig                                 0x230f
-
-        #define OD_230f_0_traceConfig_maxSubIndex                   0
-        #define OD_230f_1_traceConfig_size                          1
-        #define OD_230f_2_traceConfig_axisNo                        2
-        #define OD_230f_3_traceConfig_name                          3
-        #define OD_230f_4_traceConfig_color                         4
-        #define OD_230f_5_traceConfig_map                           5
-        #define OD_230f_6_traceConfig_format                        6
-        #define OD_230f_7_traceConfig_trigger                       7
-        #define OD_230f_8_traceConfig_threshold                     8
-
-/*2310 */
-        #define OD_2310_traceConfig                                 0x2310
-
-        #define OD_2310_0_traceConfig_maxSubIndex                   0
-        #define OD_2310_1_traceConfig_size                          1
-        #define OD_2310_2_traceConfig_axisNo                        2
-        #define OD_2310_3_traceConfig_name                          3
-        #define OD_2310_4_traceConfig_color                         4
-        #define OD_2310_5_traceConfig_map                           5
-        #define OD_2310_6_traceConfig_format                        6
-        #define OD_2310_7_traceConfig_trigger                       7
-        #define OD_2310_8_traceConfig_threshold                     8
-
-/*2311 */
-        #define OD_2311_traceConfig                                 0x2311
-
-        #define OD_2311_0_traceConfig_maxSubIndex                   0
-        #define OD_2311_1_traceConfig_size                          1
-        #define OD_2311_2_traceConfig_axisNo                        2
-        #define OD_2311_3_traceConfig_name                          3
-        #define OD_2311_4_traceConfig_color                         4
-        #define OD_2311_5_traceConfig_map                           5
-        #define OD_2311_6_traceConfig_format                        6
-        #define OD_2311_7_traceConfig_trigger                       7
-        #define OD_2311_8_traceConfig_threshold                     8
-
-/*2312 */
-        #define OD_2312_traceConfig                                 0x2312
-
-        #define OD_2312_0_traceConfig_maxSubIndex                   0
-        #define OD_2312_1_traceConfig_size                          1
-        #define OD_2312_2_traceConfig_axisNo                        2
-        #define OD_2312_3_traceConfig_name                          3
-        #define OD_2312_4_traceConfig_color                         4
-        #define OD_2312_5_traceConfig_map                           5
-        #define OD_2312_6_traceConfig_format                        6
-        #define OD_2312_7_traceConfig_trigger                       7
-        #define OD_2312_8_traceConfig_threshold                     8
-
-/*2313 */
-        #define OD_2313_traceConfig                                 0x2313
-
-        #define OD_2313_0_traceConfig_maxSubIndex                   0
-        #define OD_2313_1_traceConfig_size                          1
-        #define OD_2313_2_traceConfig_axisNo                        2
-        #define OD_2313_3_traceConfig_name                          3
-        #define OD_2313_4_traceConfig_color                         4
-        #define OD_2313_5_traceConfig_map                           5
-        #define OD_2313_6_traceConfig_format                        6
-        #define OD_2313_7_traceConfig_trigger                       7
-        #define OD_2313_8_traceConfig_threshold                     8
-
-/*2314 */
-        #define OD_2314_traceConfig                                 0x2314
-
-        #define OD_2314_0_traceConfig_maxSubIndex                   0
-        #define OD_2314_1_traceConfig_size                          1
-        #define OD_2314_2_traceConfig_axisNo                        2
-        #define OD_2314_3_traceConfig_name                          3
-        #define OD_2314_4_traceConfig_color                         4
-        #define OD_2314_5_traceConfig_map                           5
-        #define OD_2314_6_traceConfig_format                        6
-        #define OD_2314_7_traceConfig_trigger                       7
-        #define OD_2314_8_traceConfig_threshold                     8
-
-/*2315 */
-        #define OD_2315_traceConfig                                 0x2315
-
-        #define OD_2315_0_traceConfig_maxSubIndex                   0
-        #define OD_2315_1_traceConfig_size                          1
-        #define OD_2315_2_traceConfig_axisNo                        2
-        #define OD_2315_3_traceConfig_name                          3
-        #define OD_2315_4_traceConfig_color                         4
-        #define OD_2315_5_traceConfig_map                           5
-        #define OD_2315_6_traceConfig_format                        6
-        #define OD_2315_7_traceConfig_trigger                       7
-        #define OD_2315_8_traceConfig_threshold                     8
-
-/*2316 */
-        #define OD_2316_traceConfig                                 0x2316
-
-        #define OD_2316_0_traceConfig_maxSubIndex                   0
-        #define OD_2316_1_traceConfig_size                          1
-        #define OD_2316_2_traceConfig_axisNo                        2
-        #define OD_2316_3_traceConfig_name                          3
-        #define OD_2316_4_traceConfig_color                         4
-        #define OD_2316_5_traceConfig_map                           5
-        #define OD_2316_6_traceConfig_format                        6
-        #define OD_2316_7_traceConfig_trigger                       7
-        #define OD_2316_8_traceConfig_threshold                     8
-
-/*2317 */
-        #define OD_2317_traceConfig                                 0x2317
-
-        #define OD_2317_0_traceConfig_maxSubIndex                   0
-        #define OD_2317_1_traceConfig_size                          1
-        #define OD_2317_2_traceConfig_axisNo                        2
-        #define OD_2317_3_traceConfig_name                          3
-        #define OD_2317_4_traceConfig_color                         4
-        #define OD_2317_5_traceConfig_map                           5
-        #define OD_2317_6_traceConfig_format                        6
-        #define OD_2317_7_traceConfig_trigger                       7
-        #define OD_2317_8_traceConfig_threshold                     8
-
-/*2318 */
-        #define OD_2318_traceConfig                                 0x2318
-
-        #define OD_2318_0_traceConfig_maxSubIndex                   0
-        #define OD_2318_1_traceConfig_size                          1
-        #define OD_2318_2_traceConfig_axisNo                        2
-        #define OD_2318_3_traceConfig_name                          3
-        #define OD_2318_4_traceConfig_color                         4
-        #define OD_2318_5_traceConfig_map                           5
-        #define OD_2318_6_traceConfig_format                        6
-        #define OD_2318_7_traceConfig_trigger                       7
-        #define OD_2318_8_traceConfig_threshold                     8
-
-/*2319 */
-        #define OD_2319_traceConfig                                 0x2319
-
-        #define OD_2319_0_traceConfig_maxSubIndex                   0
-        #define OD_2319_1_traceConfig_size                          1
-        #define OD_2319_2_traceConfig_axisNo                        2
-        #define OD_2319_3_traceConfig_name                          3
-        #define OD_2319_4_traceConfig_color                         4
-        #define OD_2319_5_traceConfig_map                           5
-        #define OD_2319_6_traceConfig_format                        6
-        #define OD_2319_7_traceConfig_trigger                       7
-        #define OD_2319_8_traceConfig_threshold                     8
-
-/*231a */
-        #define OD_231a_traceConfig                                 0x231a
-
-        #define OD_231a_0_traceConfig_maxSubIndex                   0
-        #define OD_231a_1_traceConfig_size                          1
-        #define OD_231a_2_traceConfig_axisNo                        2
-        #define OD_231a_3_traceConfig_name                          3
-        #define OD_231a_4_traceConfig_color                         4
-        #define OD_231a_5_traceConfig_map                           5
-        #define OD_231a_6_traceConfig_format                        6
-        #define OD_231a_7_traceConfig_trigger                       7
-        #define OD_231a_8_traceConfig_threshold                     8
-
-/*231b */
-        #define OD_231b_traceConfig                                 0x231b
-
-        #define OD_231b_0_traceConfig_maxSubIndex                   0
-        #define OD_231b_1_traceConfig_size                          1
-        #define OD_231b_2_traceConfig_axisNo                        2
-        #define OD_231b_3_traceConfig_name                          3
-        #define OD_231b_4_traceConfig_color                         4
-        #define OD_231b_5_traceConfig_map                           5
-        #define OD_231b_6_traceConfig_format                        6
-        #define OD_231b_7_traceConfig_trigger                       7
-        #define OD_231b_8_traceConfig_threshold                     8
-
-/*231c */
-        #define OD_231c_traceConfig                                 0x231c
-
-        #define OD_231c_0_traceConfig_maxSubIndex                   0
-        #define OD_231c_1_traceConfig_size                          1
-        #define OD_231c_2_traceConfig_axisNo                        2
-        #define OD_231c_3_traceConfig_name                          3
-        #define OD_231c_4_traceConfig_color                         4
-        #define OD_231c_5_traceConfig_map                           5
-        #define OD_231c_6_traceConfig_format                        6
-        #define OD_231c_7_traceConfig_trigger                       7
-        #define OD_231c_8_traceConfig_threshold                     8
-
-/*231d */
-        #define OD_231d_traceConfig                                 0x231d
-
-        #define OD_231d_0_traceConfig_maxSubIndex                   0
-        #define OD_231d_1_traceConfig_size                          1
-        #define OD_231d_2_traceConfig_axisNo                        2
-        #define OD_231d_3_traceConfig_name                          3
-        #define OD_231d_4_traceConfig_color                         4
-        #define OD_231d_5_traceConfig_map                           5
-        #define OD_231d_6_traceConfig_format                        6
-        #define OD_231d_7_traceConfig_trigger                       7
-        #define OD_231d_8_traceConfig_threshold                     8
-
-/*231e */
-        #define OD_231e_traceConfig                                 0x231e
-
-        #define OD_231e_0_traceConfig_maxSubIndex                   0
-        #define OD_231e_1_traceConfig_size                          1
-        #define OD_231e_2_traceConfig_axisNo                        2
-        #define OD_231e_3_traceConfig_name                          3
-        #define OD_231e_4_traceConfig_color                         4
-        #define OD_231e_5_traceConfig_map                           5
-        #define OD_231e_6_traceConfig_format                        6
-        #define OD_231e_7_traceConfig_trigger                       7
-        #define OD_231e_8_traceConfig_threshold                     8
-
-/*231f */
-        #define OD_231f_traceConfig                                 0x231f
-
-        #define OD_231f_0_traceConfig_maxSubIndex                   0
-        #define OD_231f_1_traceConfig_size                          1
-        #define OD_231f_2_traceConfig_axisNo                        2
-        #define OD_231f_3_traceConfig_name                          3
-        #define OD_231f_4_traceConfig_color                         4
-        #define OD_231f_5_traceConfig_map                           5
-        #define OD_231f_6_traceConfig_format                        6
-        #define OD_231f_7_traceConfig_trigger                       7
-        #define OD_231f_8_traceConfig_threshold                     8
-
-/*2320 */
-        #define OD_2320_traceConfig                                 0x2320
-
-        #define OD_2320_0_traceConfig_maxSubIndex                   0
-        #define OD_2320_1_traceConfig_size                          1
-        #define OD_2320_2_traceConfig_axisNo                        2
-        #define OD_2320_3_traceConfig_name                          3
-        #define OD_2320_4_traceConfig_color                         4
-        #define OD_2320_5_traceConfig_map                           5
-        #define OD_2320_6_traceConfig_format                        6
-        #define OD_2320_7_traceConfig_trigger                       7
-        #define OD_2320_8_traceConfig_threshold                     8
-
-/*2400 */
-        #define OD_2400_traceEnable                                 0x2400
-
-/*2401 */
-        #define OD_2401_trace                                       0x2401
-
-        #define OD_2401_0_trace_maxSubIndex                         0
-        #define OD_2401_1_trace_size                                1
-        #define OD_2401_2_trace_value                               2
-        #define OD_2401_3_trace_min                                 3
-        #define OD_2401_4_trace_max                                 4
-        #define OD_2401_5_trace_plot                                5
-        #define OD_2401_6_trace_triggerTime                         6
-
-/*2402 */
-        #define OD_2402_trace                                       0x2402
-
-        #define OD_2402_0_trace_maxSubIndex                         0
-        #define OD_2402_1_trace_size                                1
-        #define OD_2402_2_trace_value                               2
-        #define OD_2402_3_trace_min                                 3
-        #define OD_2402_4_trace_max                                 4
-        #define OD_2402_5_trace_plot                                5
-        #define OD_2402_6_trace_triggerTime                         6
-
-/*2403 */
-        #define OD_2403_trace                                       0x2403
-
-        #define OD_2403_0_trace_maxSubIndex                         0
-        #define OD_2403_1_trace_size                                1
-        #define OD_2403_2_trace_value                               2
-        #define OD_2403_3_trace_min                                 3
-        #define OD_2403_4_trace_max                                 4
-        #define OD_2403_5_trace_plot                                5
-        #define OD_2403_6_trace_triggerTime                         6
-
-/*2404 */
-        #define OD_2404_trace                                       0x2404
-
-        #define OD_2404_0_trace_maxSubIndex                         0
-        #define OD_2404_1_trace_size                                1
-        #define OD_2404_2_trace_value                               2
-        #define OD_2404_3_trace_min                                 3
-        #define OD_2404_4_trace_max                                 4
-        #define OD_2404_5_trace_plot                                5
-        #define OD_2404_6_trace_triggerTime                         6
-
-/*2405 */
-        #define OD_2405_trace                                       0x2405
-
-        #define OD_2405_0_trace_maxSubIndex                         0
-        #define OD_2405_1_trace_size                                1
-        #define OD_2405_2_trace_value                               2
-        #define OD_2405_3_trace_min                                 3
-        #define OD_2405_4_trace_max                                 4
-        #define OD_2405_5_trace_plot                                5
-        #define OD_2405_6_trace_triggerTime                         6
-
-/*2406 */
-        #define OD_2406_trace                                       0x2406
-
-        #define OD_2406_0_trace_maxSubIndex                         0
-        #define OD_2406_1_trace_size                                1
-        #define OD_2406_2_trace_value                               2
-        #define OD_2406_3_trace_min                                 3
-        #define OD_2406_4_trace_max                                 4
-        #define OD_2406_5_trace_plot                                5
-        #define OD_2406_6_trace_triggerTime                         6
-
-/*2407 */
-        #define OD_2407_trace                                       0x2407
-
-        #define OD_2407_0_trace_maxSubIndex                         0
-        #define OD_2407_1_trace_size                                1
-        #define OD_2407_2_trace_value                               2
-        #define OD_2407_3_trace_min                                 3
-        #define OD_2407_4_trace_max                                 4
-        #define OD_2407_5_trace_plot                                5
-        #define OD_2407_6_trace_triggerTime                         6
-
-/*2408 */
-        #define OD_2408_trace                                       0x2408
-
-        #define OD_2408_0_trace_maxSubIndex                         0
-        #define OD_2408_1_trace_size                                1
-        #define OD_2408_2_trace_value                               2
-        #define OD_2408_3_trace_min                                 3
-        #define OD_2408_4_trace_max                                 4
-        #define OD_2408_5_trace_plot                                5
-        #define OD_2408_6_trace_triggerTime                         6
-
-/*2409 */
-        #define OD_2409_trace                                       0x2409
-
-        #define OD_2409_0_trace_maxSubIndex                         0
-        #define OD_2409_1_trace_size                                1
-        #define OD_2409_2_trace_value                               2
-        #define OD_2409_3_trace_min                                 3
-        #define OD_2409_4_trace_max                                 4
-        #define OD_2409_5_trace_plot                                5
-        #define OD_2409_6_trace_triggerTime                         6
-
-/*240a */
-        #define OD_240a_trace                                       0x240a
-
-        #define OD_240a_0_trace_maxSubIndex                         0
-        #define OD_240a_1_trace_size                                1
-        #define OD_240a_2_trace_value                               2
-        #define OD_240a_3_trace_min                                 3
-        #define OD_240a_4_trace_max                                 4
-        #define OD_240a_5_trace_plot                                5
-        #define OD_240a_6_trace_triggerTime                         6
-
-/*240b */
-        #define OD_240b_trace                                       0x240b
-
-        #define OD_240b_0_trace_maxSubIndex                         0
-        #define OD_240b_1_trace_size                                1
-        #define OD_240b_2_trace_value                               2
-        #define OD_240b_3_trace_min                                 3
-        #define OD_240b_4_trace_max                                 4
-        #define OD_240b_5_trace_plot                                5
-        #define OD_240b_6_trace_triggerTime                         6
-
-/*240c */
-        #define OD_240c_trace                                       0x240c
-
-        #define OD_240c_0_trace_maxSubIndex                         0
-        #define OD_240c_1_trace_size                                1
-        #define OD_240c_2_trace_value                               2
-        #define OD_240c_3_trace_min                                 3
-        #define OD_240c_4_trace_max                                 4
-        #define OD_240c_5_trace_plot                                5
-        #define OD_240c_6_trace_triggerTime                         6
-
-/*240d */
-        #define OD_240d_trace                                       0x240d
-
-        #define OD_240d_0_trace_maxSubIndex                         0
-        #define OD_240d_1_trace_size                                1
-        #define OD_240d_2_trace_value                               2
-        #define OD_240d_3_trace_min                                 3
-        #define OD_240d_4_trace_max                                 4
-        #define OD_240d_5_trace_plot                                5
-        #define OD_240d_6_trace_triggerTime                         6
-
-/*240e */
-        #define OD_240e_trace                                       0x240e
-
-        #define OD_240e_0_trace_maxSubIndex                         0
-        #define OD_240e_1_trace_size                                1
-        #define OD_240e_2_trace_value                               2
-        #define OD_240e_3_trace_min                                 3
-        #define OD_240e_4_trace_max                                 4
-        #define OD_240e_5_trace_plot                                5
-        #define OD_240e_6_trace_triggerTime                         6
-
-/*240f */
-        #define OD_240f_trace                                       0x240f
-
-        #define OD_240f_0_trace_maxSubIndex                         0
-        #define OD_240f_1_trace_size                                1
-        #define OD_240f_2_trace_value                               2
-        #define OD_240f_3_trace_min                                 3
-        #define OD_240f_4_trace_max                                 4
-        #define OD_240f_5_trace_plot                                5
-        #define OD_240f_6_trace_triggerTime                         6
-
-/*2410 */
-        #define OD_2410_trace                                       0x2410
-
-        #define OD_2410_0_trace_maxSubIndex                         0
-        #define OD_2410_1_trace_size                                1
-        #define OD_2410_2_trace_value                               2
-        #define OD_2410_3_trace_min                                 3
-        #define OD_2410_4_trace_max                                 4
-        #define OD_2410_5_trace_plot                                5
-        #define OD_2410_6_trace_triggerTime                         6
-
-/*2411 */
-        #define OD_2411_trace                                       0x2411
-
-        #define OD_2411_0_trace_maxSubIndex                         0
-        #define OD_2411_1_trace_size                                1
-        #define OD_2411_2_trace_value                               2
-        #define OD_2411_3_trace_min                                 3
-        #define OD_2411_4_trace_max                                 4
-        #define OD_2411_5_trace_plot                                5
-        #define OD_2411_6_trace_triggerTime                         6
-
-/*2412 */
-        #define OD_2412_trace                                       0x2412
-
-        #define OD_2412_0_trace_maxSubIndex                         0
-        #define OD_2412_1_trace_size                                1
-        #define OD_2412_2_trace_value                               2
-        #define OD_2412_3_trace_min                                 3
-        #define OD_2412_4_trace_max                                 4
-        #define OD_2412_5_trace_plot                                5
-        #define OD_2412_6_trace_triggerTime                         6
-
-/*2413 */
-        #define OD_2413_trace                                       0x2413
-
-        #define OD_2413_0_trace_maxSubIndex                         0
-        #define OD_2413_1_trace_size                                1
-        #define OD_2413_2_trace_value                               2
-        #define OD_2413_3_trace_min                                 3
-        #define OD_2413_4_trace_max                                 4
-        #define OD_2413_5_trace_plot                                5
-        #define OD_2413_6_trace_triggerTime                         6
-
-/*2414 */
-        #define OD_2414_trace                                       0x2414
-
-        #define OD_2414_0_trace_maxSubIndex                         0
-        #define OD_2414_1_trace_size                                1
-        #define OD_2414_2_trace_value                               2
-        #define OD_2414_3_trace_min                                 3
-        #define OD_2414_4_trace_max                                 4
-        #define OD_2414_5_trace_plot                                5
-        #define OD_2414_6_trace_triggerTime                         6
-
-/*2415 */
-        #define OD_2415_trace                                       0x2415
-
-        #define OD_2415_0_trace_maxSubIndex                         0
-        #define OD_2415_1_trace_size                                1
-        #define OD_2415_2_trace_value                               2
-        #define OD_2415_3_trace_min                                 3
-        #define OD_2415_4_trace_max                                 4
-        #define OD_2415_5_trace_plot                                5
-        #define OD_2415_6_trace_triggerTime                         6
-
-/*2416 */
-        #define OD_2416_trace                                       0x2416
-
-        #define OD_2416_0_trace_maxSubIndex                         0
-        #define OD_2416_1_trace_size                                1
-        #define OD_2416_2_trace_value                               2
-        #define OD_2416_3_trace_min                                 3
-        #define OD_2416_4_trace_max                                 4
-        #define OD_2416_5_trace_plot                                5
-        #define OD_2416_6_trace_triggerTime                         6
-
-/*2417 */
-        #define OD_2417_trace                                       0x2417
-
-        #define OD_2417_0_trace_maxSubIndex                         0
-        #define OD_2417_1_trace_size                                1
-        #define OD_2417_2_trace_value                               2
-        #define OD_2417_3_trace_min                                 3
-        #define OD_2417_4_trace_max                                 4
-        #define OD_2417_5_trace_plot                                5
-        #define OD_2417_6_trace_triggerTime                         6
-
-/*2418 */
-        #define OD_2418_trace                                       0x2418
-
-        #define OD_2418_0_trace_maxSubIndex                         0
-        #define OD_2418_1_trace_size                                1
-        #define OD_2418_2_trace_value                               2
-        #define OD_2418_3_trace_min                                 3
-        #define OD_2418_4_trace_max                                 4
-        #define OD_2418_5_trace_plot                                5
-        #define OD_2418_6_trace_triggerTime                         6
-
-/*2419 */
-        #define OD_2419_trace                                       0x2419
-
-        #define OD_2419_0_trace_maxSubIndex                         0
-        #define OD_2419_1_trace_size                                1
-        #define OD_2419_2_trace_value                               2
-        #define OD_2419_3_trace_min                                 3
-        #define OD_2419_4_trace_max                                 4
-        #define OD_2419_5_trace_plot                                5
-        #define OD_2419_6_trace_triggerTime                         6
-
-/*241a */
-        #define OD_241a_trace                                       0x241a
-
-        #define OD_241a_0_trace_maxSubIndex                         0
-        #define OD_241a_1_trace_size                                1
-        #define OD_241a_2_trace_value                               2
-        #define OD_241a_3_trace_min                                 3
-        #define OD_241a_4_trace_max                                 4
-        #define OD_241a_5_trace_plot                                5
-        #define OD_241a_6_trace_triggerTime                         6
-
-/*241b */
-        #define OD_241b_trace                                       0x241b
-
-        #define OD_241b_0_trace_maxSubIndex                         0
-        #define OD_241b_1_trace_size                                1
-        #define OD_241b_2_trace_value                               2
-        #define OD_241b_3_trace_min                                 3
-        #define OD_241b_4_trace_max                                 4
-        #define OD_241b_5_trace_plot                                5
-        #define OD_241b_6_trace_triggerTime                         6
-
-/*241c */
-        #define OD_241c_trace                                       0x241c
-
-        #define OD_241c_0_trace_maxSubIndex                         0
-        #define OD_241c_1_trace_size                                1
-        #define OD_241c_2_trace_value                               2
-        #define OD_241c_3_trace_min                                 3
-        #define OD_241c_4_trace_max                                 4
-        #define OD_241c_5_trace_plot                                5
-        #define OD_241c_6_trace_triggerTime                         6
-
-/*241d */
-        #define OD_241d_trace                                       0x241d
-
-        #define OD_241d_0_trace_maxSubIndex                         0
-        #define OD_241d_1_trace_size                                1
-        #define OD_241d_2_trace_value                               2
-        #define OD_241d_3_trace_min                                 3
-        #define OD_241d_4_trace_max                                 4
-        #define OD_241d_5_trace_plot                                5
-        #define OD_241d_6_trace_triggerTime                         6
-
-/*241e */
-        #define OD_241e_trace                                       0x241e
-
-        #define OD_241e_0_trace_maxSubIndex                         0
-        #define OD_241e_1_trace_size                                1
-        #define OD_241e_2_trace_value                               2
-        #define OD_241e_3_trace_min                                 3
-        #define OD_241e_4_trace_max                                 4
-        #define OD_241e_5_trace_plot                                5
-        #define OD_241e_6_trace_triggerTime                         6
-
-/*241f */
-        #define OD_241f_trace                                       0x241f
-
-        #define OD_241f_0_trace_maxSubIndex                         0
-        #define OD_241f_1_trace_size                                1
-        #define OD_241f_2_trace_value                               2
-        #define OD_241f_3_trace_min                                 3
-        #define OD_241f_4_trace_max                                 4
-        #define OD_241f_5_trace_plot                                5
-        #define OD_241f_6_trace_triggerTime                         6
-
-/*2420 */
-        #define OD_2420_trace                                       0x2420
-
-        #define OD_2420_0_trace_maxSubIndex                         0
-        #define OD_2420_1_trace_size                                1
-        #define OD_2420_2_trace_value                               2
-        #define OD_2420_3_trace_min                                 3
-        #define OD_2420_4_trace_max                                 4
-        #define OD_2420_5_trace_plot                                5
-        #define OD_2420_6_trace_triggerTime                         6
-
-/*6000 */
-        #define OD_6000_readInput8Bit                               0x6000
-
-        #define OD_6000_0_readInput8Bit_maxSubIndex                 0
-        #define OD_6000_1_readInput8Bit_input                       1
-        #define OD_6000_2_readInput8Bit_input                       2
-        #define OD_6000_3_readInput8Bit_input                       3
-        #define OD_6000_4_readInput8Bit_input                       4
-        #define OD_6000_5_readInput8Bit_input                       5
-        #define OD_6000_6_readInput8Bit_input                       6
-        #define OD_6000_7_readInput8Bit_input                       7
-        #define OD_6000_8_readInput8Bit_input                       8
-
-/*6040 */
-        #define OD_6040_controlWords                                0x6040
-
-        #define OD_6040_0_controlWords_maxSubIndex                  0
-        #define OD_6040_1_controlWords_motor1                       1
-        #define OD_6040_2_controlWords_motor2                       2
-        #define OD_6040_3_controlWords_motor3                       3
-        #define OD_6040_4_controlWords_motor4                       4
-        #define OD_6040_5_controlWords_motor5                       5
-        #define OD_6040_6_controlWords_motor6                       6
-
-/*6041 */
-        #define OD_6041_statusWords                                 0x6041
-
-        #define OD_6041_0_statusWords_maxSubIndex                   0
-        #define OD_6041_1_statusWords_motor1                        1
-        #define OD_6041_2_statusWords_motor2                        2
-        #define OD_6041_3_statusWords_motor3                        3
-        #define OD_6041_4_statusWords_motor4                        4
-        #define OD_6041_5_statusWords_motor5                        5
-        #define OD_6041_6_statusWords_motor6                        6
-
-/*6064 */
-        #define OD_6064_actualMotorPositions                        0x6064
-
-        #define OD_6064_0_actualMotorPositions_maxSubIndex          0
-        #define OD_6064_1_actualMotorPositions_motor1               1
-        #define OD_6064_2_actualMotorPositions_motor2               2
-        #define OD_6064_3_actualMotorPositions_motor3               3
-        #define OD_6064_4_actualMotorPositions_motor4               4
-        #define OD_6064_5_actualMotorPositions_motor5               5
-        #define OD_6064_6_actualMotorPositions_motor6               6
-
-/*606c */
-        #define OD_606c_actualMotorVelocities                       0x606c
-
-        #define OD_606c_0_actualMotorVelocities_maxSubIndex         0
-        #define OD_606c_1_actualMotorVelocities_motor1              1
-        #define OD_606c_2_actualMotorVelocities_motor2              2
-        #define OD_606c_3_actualMotorVelocities_motor3              3
-        #define OD_606c_4_actualMotorVelocities_motor4              4
-        #define OD_606c_5_actualMotorVelocities_motor5              5
-        #define OD_606c_6_actualMotorVelocities_motor6              6
-
-/*6077 */
-        #define OD_6077_actualMotorTorques                          0x6077
-
-        #define OD_6077_0_actualMotorTorques_maxSubIndex            0
-        #define OD_6077_1_actualMotorTorques_motor1                 1
-        #define OD_6077_2_actualMotorTorques_motor2                 2
-        #define OD_6077_3_actualMotorTorques_motor3                 3
-        #define OD_6077_4_actualMotorTorques_motor4                 4
-
-/*607a */
-        #define OD_607a_targetMotorPositions                        0x607a
-
-        #define OD_607a_0_targetMotorPositions_maxSubIndex          0
-        #define OD_607a_1_targetMotorPositions_motor1               1
-        #define OD_607a_2_targetMotorPositions_motor2               2
-        #define OD_607a_3_targetMotorPositions_motor3               3
-        #define OD_607a_4_targetMotorPositions_motor4               4
-        #define OD_607a_5_targetMotorPositions_motor5               5
-        #define OD_607a_6_targetMotorPositions_motor6               6
-
-/*60ff */
-        #define OD_60ff_targetMotorVelocities                       0x60ff
-
-        #define OD_60ff_0_targetMotorVelocities_maxSubIndex         0
-        #define OD_60ff_1_targetMotorVelocities_motor1              1
-        #define OD_60ff_2_targetMotorVelocities_motor2              2
-        #define OD_60ff_3_targetMotorVelocities_motor3              3
-        #define OD_60ff_4_targetMotorVelocities_motor4              4
-        #define OD_60ff_5_targetMotorVelocities_motor5              5
-        #define OD_60ff_6_targetMotorVelocities_motor6              6
-
-/*6200 */
-        #define OD_6200_writeOutput8Bit                             0x6200
-
-        #define OD_6200_0_writeOutput8Bit_maxSubIndex               0
-        #define OD_6200_1_writeOutput8Bit_output                    1
-        #define OD_6200_2_writeOutput8Bit_output                    2
-        #define OD_6200_3_writeOutput8Bit_output                    3
-        #define OD_6200_4_writeOutput8Bit_output                    4
-        #define OD_6200_5_writeOutput8Bit_output                    5
-        #define OD_6200_6_writeOutput8Bit_output                    6
-        #define OD_6200_7_writeOutput8Bit_output                    7
-        #define OD_6200_8_writeOutput8Bit_output                    8
-
-/*6401 */
-        #define OD_6401_readAnalogueInput16Bit                      0x6401
-
-        #define OD_6401_0_readAnalogueInput16Bit_maxSubIndex        0
-        #define OD_6401_1_readAnalogueInput16Bit_input              1
-        #define OD_6401_2_readAnalogueInput16Bit_input              2
-        #define OD_6401_3_readAnalogueInput16Bit_input              3
-        #define OD_6401_4_readAnalogueInput16Bit_input              4
-        #define OD_6401_5_readAnalogueInput16Bit_input              5
-        #define OD_6401_6_readAnalogueInput16Bit_input              6
-        #define OD_6401_7_readAnalogueInput16Bit_input              7
-        #define OD_6401_8_readAnalogueInput16Bit_input              8
-        #define OD_6401_9_readAnalogueInput16Bit_input              9
-        #define OD_6401_10_readAnalogueInput16Bit_input             10
-        #define OD_6401_11_readAnalogueInput16Bit_input             11
-        #define OD_6401_12_readAnalogueInput16Bit_input             12
-
-/*6411 */
-        #define OD_6411_writeAnalogueOutput16Bit                    0x6411
-
-        #define OD_6411_0_writeAnalogueOutput16Bit_maxSubIndex      0
-        #define OD_6411_1_writeAnalogueOutput16Bit_output           1
-        #define OD_6411_2_writeAnalogueOutput16Bit_output           2
-        #define OD_6411_3_writeAnalogueOutput16Bit_output           3
-        #define OD_6411_4_writeAnalogueOutput16Bit_output           4
-        #define OD_6411_5_writeAnalogueOutput16Bit_output           5
-        #define OD_6411_6_writeAnalogueOutput16Bit_output           6
-        #define OD_6411_7_writeAnalogueOutput16Bit_output           7
-        #define OD_6411_8_writeAnalogueOutput16Bit_output           8
-
-/*******************************************************************************
-   STRUCTURES FOR VARIABLES IN DIFFERENT MEMORY LOCATIONS
-*******************************************************************************/
-#define  CO_OD_FIRST_LAST_WORD     0x55 //Any value from 0x01 to 0xFE. If changed, EEPROM will be reinitialized.
-
-/***** Structure for ROM variables ********************************************/
-struct sCO_OD_ROM{
-               UNSIGNED32     FirstWord;
-
-
-               UNSIGNED32     LastWord;
-};
-
-/***** Structure for RAM variables ********************************************/
-struct sCO_OD_RAM{
-               UNSIGNED32     FirstWord;
-
-/*1000      */ UNSIGNED32      deviceType;
-/*1001      */ UNSIGNED8       errorRegister;
-/*1002      */ UNSIGNED32      manufacturerStatusRegister;
-/*1003      */ UNSIGNED32      preDefinedErrorField[8];
-/*1005      */ UNSIGNED32      COB_ID_SYNCMessage;
-/*1006      */ UNSIGNED32      communicationCyclePeriod;
-/*1007      */ UNSIGNED32      synchronousWindowLength;
-/*1008      */ VISIBLE_STRING  manufacturerDeviceName[11];
-/*1009      */ VISIBLE_STRING  manufacturerHardwareVersion[4];
-/*100a      */ VISIBLE_STRING  manufacturerSoftwareVersion[4];
-/*1010      */ UNSIGNED32      storeParameters[1];
-/*1011      */ UNSIGNED32      restoreDefaultParameters[1];
-/*1014      */ UNSIGNED32      COB_ID_EMCY;
-/*1015      */ UNSIGNED16      inhibitTimeEMCY;
-/*1016      */ UNSIGNED32      consumerHeartbeatTime[4];
-/*1017      */ UNSIGNED16      producerHeartbeatTime;
-/*1018      */ OD_identity_t   identity;
-/*1019      */ UNSIGNED8       synchronousCounterOverflowValue;
-/*1029      */ UNSIGNED8       errorBehavior[6];
-/*1200      */ OD_SDOServerParameter_t SDOServerParameter[1];
-/*1280      */ OD_SDOClientParameter_t SDOClientParameter[1];
-/*1400      */ OD_RPDOCommunicationParameter_t RPDOCommunicationParameter[16];
-/*1600      */ OD_RPDOMappingParameter_t RPDOMappingParameter[16];
-/*1800      */ OD_TPDOCommunicationParameter_t TPDOCommunicationParameter[16];
-/*1a00      */ OD_TPDOMappingParameter_t TPDOMappingParameter[16];
-/*1f80      */ UNSIGNED32      NMTStartup;
-/*2000      */ UNSIGNED16      buttons;
-/*2100      */ OCTET_STRING    errorStatusBits[10];
-/*2101      */ UNSIGNED8       CANNodeID;
-/*2102      */ UNSIGNED16      CANBitRate;
-/*2103      */ UNSIGNED16      SYNCCounter;
-/*2104      */ UNSIGNED16      SYNCTime;
-/*2106      */ UNSIGNED32      powerOnCounter;
-/*2107      */ UNSIGNED16      performance[5];
-/*2108      */ INTEGER16       temperature[1];
-/*2109      */ INTEGER16       voltage[1];
-/*2110      */ INTEGER32       variableInt32[32];
-/*2111      */ INTEGER32       variableROM_Int32[16];
-/*2112      */ INTEGER32       variableNV_Int32[16];
-/*2120      */ OD_testVar_t    testVar;
-/*2130      */ OD_time_t       time;
-/*2301      */ OD_traceConfig_t traceConfig[32];
-/*2400      */ UNSIGNED8       traceEnable;
-/*2401      */ OD_trace_t      trace[32];
-/*6000      */ UNSIGNED8       readInput8Bit[8];
-/*6040      */ OD_controlWords_t controlWords;
-/*6041      */ OD_statusWords_t statusWords;
-/*6064      */ OD_actualMotorPositions_t actualMotorPositions;
-/*606c      */ OD_actualMotorVelocities_t actualMotorVelocities;
-/*6077      */ OD_actualMotorTorques_t actualMotorTorques;
-/*607a      */ OD_targetMotorPositions_t targetMotorPositions;
-/*60ff      */ OD_targetMotorVelocities_t targetMotorVelocities;
-/*6200      */ UNSIGNED8       writeOutput8Bit[8];
-/*6401      */ INTEGER16       readAnalogueInput16Bit[12];
-/*6411      */ INTEGER16       writeAnalogueOutput16Bit[8];
-
-               UNSIGNED32     LastWord;
-};
-
-/***** Structure for EEPROM variables ********************************************/
-struct sCO_OD_EEPROM{
-               UNSIGNED32     FirstWord;
-
-
-               UNSIGNED32     LastWord;
-};
-
-/***** Declaration of Object Dictionary variables *****************************/
-extern struct sCO_OD_ROM CO_OD_ROM;
-
-extern struct sCO_OD_RAM CO_OD_RAM;
-
-extern struct sCO_OD_EEPROM CO_OD_EEPROM;
-
-/*******************************************************************************
-   ALIASES FOR OBJECT DICTIONARY VARIABLES
-*******************************************************************************/
-/*1000, Data Type: UNSIGNED32 */
-        #define OD_deviceType                                       CO_OD_RAM.deviceType
-
-/*1001, Data Type: UNSIGNED8 */
-        #define OD_errorRegister                                    CO_OD_RAM.errorRegister
-
-/*1002, Data Type: UNSIGNED32 */
-        #define OD_manufacturerStatusRegister                       CO_OD_RAM.manufacturerStatusRegister
-
-/*1003, Data Type: UNSIGNED32, Array[8] */
-        #define OD_preDefinedErrorField                             CO_OD_RAM.preDefinedErrorField
-        #define ODL_preDefinedErrorField_arrayLength                8
-        #define ODA_preDefinedErrorField_standardErrorField         0
-
-/*1005, Data Type: UNSIGNED32 */
-        #define OD_COB_ID_SYNCMessage                               CO_OD_RAM.COB_ID_SYNCMessage
-
-/*1006, Data Type: UNSIGNED32 */
-        #define OD_communicationCyclePeriod                         CO_OD_RAM.communicationCyclePeriod
-
-/*1007, Data Type: UNSIGNED32 */
-        #define OD_synchronousWindowLength                          CO_OD_RAM.synchronousWindowLength
-
-/*1008, Data Type: VISIBLE_STRING */
-        #define OD_manufacturerDeviceName                           CO_OD_RAM.manufacturerDeviceName
-        #define ODL_manufacturerDeviceName_stringLength             11
-
-/*1009, Data Type: VISIBLE_STRING */
-        #define OD_manufacturerHardwareVersion                      CO_OD_RAM.manufacturerHardwareVersion
-        #define ODL_manufacturerHardwareVersion_stringLength        4
-
-/*100a, Data Type: VISIBLE_STRING */
-        #define OD_manufacturerSoftwareVersion                      CO_OD_RAM.manufacturerSoftwareVersion
-        #define ODL_manufacturerSoftwareVersion_stringLength        4
-
-/*1010, Data Type: UNSIGNED32, Array[1] */
-        #define OD_storeParameters                                  CO_OD_RAM.storeParameters
-        #define ODL_storeParameters_arrayLength                     1
-        #define ODA_storeParameters_saveAllParameters               0
-
-/*1011, Data Type: UNSIGNED32, Array[1] */
-        #define OD_restoreDefaultParameters                         CO_OD_RAM.restoreDefaultParameters
-        #define ODL_restoreDefaultParameters_arrayLength            1
-        #define ODA_restoreDefaultParameters_restoreAllDefaultParameters 0
-
-/*1014, Data Type: UNSIGNED32 */
-        #define OD_COB_ID_EMCY                                      CO_OD_RAM.COB_ID_EMCY
-
-/*1015, Data Type: UNSIGNED16 */
-        #define OD_inhibitTimeEMCY                                  CO_OD_RAM.inhibitTimeEMCY
-
-/*1016, Data Type: UNSIGNED32, Array[4] */
-        #define OD_consumerHeartbeatTime                            CO_OD_RAM.consumerHeartbeatTime
-        #define ODL_consumerHeartbeatTime_arrayLength               4
-        #define ODA_consumerHeartbeatTime_consumerHeartbeatTime     0
-
-/*1017, Data Type: UNSIGNED16 */
-        #define OD_producerHeartbeatTime                            CO_OD_RAM.producerHeartbeatTime
-
-/*1018, Data Type: identity_t */
-        #define OD_identity                                         CO_OD_RAM.identity
-
-/*1019, Data Type: UNSIGNED8 */
-        #define OD_synchronousCounterOverflowValue                  CO_OD_RAM.synchronousCounterOverflowValue
-
-/*1029, Data Type: UNSIGNED8, Array[6] */
-        #define OD_errorBehavior                                    CO_OD_RAM.errorBehavior
-        #define ODL_errorBehavior_arrayLength                       6
-        #define ODA_errorBehavior_communication                     0
-        #define ODA_errorBehavior_communicationOther                1
-        #define ODA_errorBehavior_communicationPassive              2
-        #define ODA_errorBehavior_generic                           3
-        #define ODA_errorBehavior_deviceProfile                     4
-        #define ODA_errorBehavior_manufacturerSpecific              5
-
-/*1200, Data Type: SDOServerParameter_t */
-        #define OD_SDOServerParameter                               CO_OD_RAM.SDOServerParameter
-
-/*1280, Data Type: SDOClientParameter_t */
-        #define OD_SDOClientParameter                               CO_OD_RAM.SDOClientParameter
-
-/*1400, Data Type: RPDOCommunicationParameter_t */
-        #define OD_RPDOCommunicationParameter                       CO_OD_RAM.RPDOCommunicationParameter
-
-/*1600, Data Type: RPDOMappingParameter_t */
-        #define OD_RPDOMappingParameter                             CO_OD_RAM.RPDOMappingParameter
-
-/*1800, Data Type: TPDOCommunicationParameter_t */
-        #define OD_TPDOCommunicationParameter                       CO_OD_RAM.TPDOCommunicationParameter
-
-/*1a00, Data Type: TPDOMappingParameter_t */
-        #define OD_TPDOMappingParameter                             CO_OD_RAM.TPDOMappingParameter
-
-/*1f80, Data Type: UNSIGNED32 */
-        #define OD_NMTStartup                                       CO_OD_RAM.NMTStartup
-
-/*2000, Data Type: UNSIGNED16 */
-        #define OD_buttons                                          CO_OD_RAM.buttons
-
-/*2100, Data Type: OCTET_STRING */
-        #define OD_errorStatusBits                                  CO_OD_RAM.errorStatusBits
-        #define ODL_errorStatusBits_stringLength                    10
-
-/*2101, Data Type: UNSIGNED8 */
-        #define OD_CANNodeID                                        CO_OD_RAM.CANNodeID
-
-/*2102, Data Type: UNSIGNED16 */
-        #define OD_CANBitRate                                       CO_OD_RAM.CANBitRate
-
-/*2103, Data Type: UNSIGNED16 */
-        #define OD_SYNCCounter                                      CO_OD_RAM.SYNCCounter
-
-/*2104, Data Type: UNSIGNED16 */
-        #define OD_SYNCTime                                         CO_OD_RAM.SYNCTime
-
-/*2106, Data Type: UNSIGNED32 */
-        #define OD_powerOnCounter                                   CO_OD_RAM.powerOnCounter
-
-/*2107, Data Type: UNSIGNED16, Array[5] */
-        #define OD_performance                                      CO_OD_RAM.performance
-        #define ODL_performance_arrayLength                         5
-        #define ODA_performance_cyclesPerSecond                     0
-        #define ODA_performance_timerCycleTime                      1
-        #define ODA_performance_timerCycleMaxTime                   2
-        #define ODA_performance_mainCycleTime                       3
-        #define ODA_performance_mainCycleMaxTime                    4
-
-/*2108, Data Type: INTEGER16, Array[1] */
-        #define OD_temperature                                      CO_OD_RAM.temperature
-        #define ODL_temperature_arrayLength                         1
-        #define ODA_temperature_mainPCB                             0
-
-/*2109, Data Type: INTEGER16, Array[1] */
-        #define OD_voltage                                          CO_OD_RAM.voltage
-        #define ODL_voltage_arrayLength                             1
-        #define ODA_voltage_mainPCBSupply                           0
-
-/*2110, Data Type: INTEGER32, Array[32] */
-        #define OD_variableInt32                                    CO_OD_RAM.variableInt32
-        #define ODL_variableInt32_arrayLength                       32
-        #define ODA_variableInt32_int32                             0
-
-/*2111, Data Type: INTEGER32, Array[16] */
-        #define OD_variableROM_Int32                                CO_OD_RAM.variableROM_Int32
-        #define ODL_variableROM_Int32_arrayLength                   16
-        #define ODA_variableROM_Int32_int32                         0
-
-/*2112, Data Type: INTEGER32, Array[16] */
-        #define OD_variableNV_Int32                                 CO_OD_RAM.variableNV_Int32
-        #define ODL_variableNV_Int32_arrayLength                    16
-        #define ODA_variableNV_Int32_int32                          0
-
-/*2120, Data Type: testVar_t */
-        #define OD_testVar                                          CO_OD_RAM.testVar
-
-/*2130, Data Type: time_t */
-        #define OD_time                                             CO_OD_RAM.time
-
-/*2301, Data Type: traceConfig_t */
-        #define OD_traceConfig                                      CO_OD_RAM.traceConfig
-
-/*2400, Data Type: UNSIGNED8 */
-        #define OD_traceEnable                                      CO_OD_RAM.traceEnable
-
-/*2401, Data Type: trace_t */
-        #define OD_trace                                            CO_OD_RAM.trace
-
-/*6000, Data Type: UNSIGNED8, Array[8] */
-        #define OD_readInput8Bit                                    CO_OD_RAM.readInput8Bit
-        #define ODL_readInput8Bit_arrayLength                       8
-        #define ODA_readInput8Bit_input                             0
-
-/*6040, Data Type: controlWords_t */
-        #define OD_controlWords                                     CO_OD_RAM.controlWords
-
-/*6041, Data Type: statusWords_t */
-        #define OD_statusWords                                      CO_OD_RAM.statusWords
-
-/*6064, Data Type: actualMotorPositions_t */
-        #define OD_actualMotorPositions                             CO_OD_RAM.actualMotorPositions
-
-/*606c, Data Type: actualMotorVelocities_t */
-        #define OD_actualMotorVelocities                            CO_OD_RAM.actualMotorVelocities
-
-/*6077, Data Type: actualMotorTorques_t */
-        #define OD_actualMotorTorques                               CO_OD_RAM.actualMotorTorques
-
-/*607a, Data Type: targetMotorPositions_t */
-        #define OD_targetMotorPositions                             CO_OD_RAM.targetMotorPositions
-
-/*60ff, Data Type: targetMotorVelocities_t */
-        #define OD_targetMotorVelocities                            CO_OD_RAM.targetMotorVelocities
-
-/*6200, Data Type: UNSIGNED8, Array[8] */
-        #define OD_writeOutput8Bit                                  CO_OD_RAM.writeOutput8Bit
-        #define ODL_writeOutput8Bit_arrayLength                     8
-        #define ODA_writeOutput8Bit_output                          0
-
-/*6401, Data Type: INTEGER16, Array[12] */
-        #define OD_readAnalogueInput16Bit                           CO_OD_RAM.readAnalogueInput16Bit
-        #define ODL_readAnalogueInput16Bit_arrayLength              12
-        #define ODA_readAnalogueInput16Bit_input                    0
-
-/*6411, Data Type: INTEGER16, Array[8] */
-        #define OD_writeAnalogueOutput16Bit                         CO_OD_RAM.writeAnalogueOutput16Bit
-        #define ODL_writeAnalogueOutput16Bit_arrayLength            8
-        #define ODA_writeAnalogueOutput16Bit_output                 0
-
diff --git a/canopend/objDict/_project.xml b/canopend/objDict/_project.xml
new file mode 100644
index 0000000..6247fef
--- /dev/null
+++ b/canopend/objDict/_project.xml
@@ -0,0 +1,2060 @@
+<?xml version="1.0"?>
+<device>
+  <features>
+    <feature name="SYNC" value="1">
+      <label lang="en">Synchronization object (Sync)</label>
+      <description lang="en" URI="http://www.can-cia.org/canopen/protocol/special.html">The Sync Object is broadcast periodically by the Sync Producer.
+
+Permissible value for SYNC is 0 or 1.</description>
+      <associatedObject index="1005"/>
+      <associatedObject index="1006"/>
+      <associatedObject index="1007"/>
+      <associatedObject index="2103"/>
+      <associatedObject index="2104"/>
+    </feature>
+    <feature name="Emergency" value="1">
+      <label lang="en">Emergency object (Emcy)</label>
+      <description lang="en" URI="http://www.can-cia.org/canopen/protocol/special.html">The Emergency message is triggered by the occurrence of a device internal error situation.
+
+Permissible value for Emergency is 0 or 1.</description>
+      <associatedObject index="1014"/>
+      <associatedObject index="1015"/>
+    </feature>
+    <feature name="SDO server" value="1">
+      <label lang="en">Service Data Object (SDO)</label>
+      <description lang="en" URI="http://www.can-cia.org/canopen/protocol/sdo.html">A Service Data Object (SDO) reads from entries or writes to entries of the Object Dictionary.
+SDO server is implemented on all CANopen devices.
+
+Permissible value for SDO sever is 0 or 1.</description>
+      <associatedObject index="1200" indexMax="1201" indexStep="1"/>
+    </feature>
+    <feature name="SDO client" value="1">
+      <label lang="en">Service Data Object (SDO)</label>
+      <description lang="en" URI="http://www.can-cia.org/canopen/protocol/sdo.html">A Service Data Object (SDO) reads from entries or writes to entries of the Object Dictionary.
+SDO client is usually a master device in a CANopen network.
+
+Permissible value for SDO client is 0 or 1.</description>
+      <associatedObject index="1280" indexMax="1281" indexStep="1"/>
+    </feature>
+    <feature name="RPDO" value="16">
+      <label lang="en">Recive Process Data Object (RPDO)</label>
+      <description lang="en" URI="http://www.can-cia.org/canopen/protocol/pdo.html">Process Data Objects (PDOs) are mapped to a single CAN frame using up to 8 bytes of the data field to transmit application objects. Each PDO has a unique identifier and is transmitted by only one node, but it can be received by more than one (producer/consumer communication).
+
+Permissible value for RPDO is 0 to 16. For larger value Max Index must be changed.</description>
+      <associatedObject index="1400" indexMax="140F" indexStep="1"/>
+      <associatedObject index="1600" indexMax="160F" indexStep="1"/>
+    </feature>
+    <feature name="TPDO" value="16">
+      <label lang="en">Transmit Process Data Object (TPDO)</label>
+      <description lang="en" URI="http://www.can-cia.org/canopen/protocol/pdo.html">Process Data Objects (PDOs) are mapped to a single CAN frame using up to 8 bytes of the data field to transmit application objects. Each PDO has a unique identifier and is transmitted by only one node, but it can be received by more than one (producer/consumer communication).
+
+Permissible value for TPDO is 0 to 16. For larger value Max Index must be changed.</description>
+      <associatedObject index="1800" indexMax="180F" indexStep="1"/>
+      <associatedObject index="1A00" indexMax="1A0F" indexStep="1"/>
+    </feature>
+    <feature name="NMT master" value="1">
+      <label lang="en">NMT master</label>
+      <description lang="en">NMT master can send CANopen NMT command, which can start, stop or reset nodes.</description>
+    </feature>
+    <feature name="Trace" value="32">
+      <label lang="en">Trace</label>
+      <description lang="en">Trace is used for recording variables.</description>
+      <associatedObject index="2301" indexMax="2340" indexStep="1"/>
+      <associatedObject index="2400"/>
+      <associatedObject index="2401" indexMax="2440" indexStep="1"/>
+    </feature>
+  </features>
+  <CANopenObjectList>
+    <CANopenObject index="1000" name="Device type" objectType="7" memoryType="ROM" dataType="07" accessType="ro" PDOmapping="no" defaultValue="0x00000000">
+      <label lang="en">Device type</label>
+      <description lang="en">bit  0-15: Device profile number
+bit 16-31: Additional information</description>
+    </CANopenObject>
+    <CANopenObject index="1001" name="Error register" objectType="7" memoryType="RAM" dataType="05" accessType="ro" PDOmapping="optional" defaultValue="0">
+      <label lang="en">Error register</label>
+      <description lang="en">bit 0: generic error
+bit 1: current
+bit 2: voltage
+bit 3: temperature
+bit 4: communication error (overrun, error state)
+bit 5: device profile specific
+bit 6: Reserved (always 0)
+bit 7: manufacturer specific</description>
+    </CANopenObject>
+    <CANopenObject index="1002" name="Manufacturer status register" objectType="7" memoryType="RAM" dataType="07" accessType="ro" PDOmapping="optional" defaultValue="0">
+      <label lang="en">Manufacturer status register</label>
+      <description lang="en">bit 0-31: Not used by stack (available for user)</description>
+    </CANopenObject>
+    <CANopenObject index="1003" name="Pre-defined error field" objectType="8" subNumber="9" memoryType="RAM" dataType="07" accessType="ro" PDOmapping="no" accessFunctionName="CO_ODF_1003">
+      <label lang="en">Pre-defined error field</label>
+      <description lang="en">Number of Errors
+bit 0-7: Zero can be written to erase error history
+
+Standard Error Field
+bit  0-15: Error code as transmited in the Emergency object
+bit 16-31: Manufacturer specific additional information</description>
+      <CANopenSubObject subIndex="00" name="Number of errors" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="Standard error field" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Standard error field" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Standard error field" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Standard error field" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Standard error field" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Standard error field" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Standard error field" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Standard error field" objectType="7" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="1005" name="COB-ID SYNC message" objectType="7" memoryType="ROM" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000080" accessFunctionName="CO_ODF_1005">
+      <label lang="en">COB-ID SYNC message</label>
+      <description lang="en">bit  0-10: COB-ID for SYNC object
+bit 11-29: set to 0
+bit    30: 1(0) - node generates (does NOT generate) SYNC object
+bit    31: set to 0</description>
+    </CANopenObject>
+    <CANopenObject index="1006" name="Communication cycle period" objectType="7" memoryType="ROM" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0" accessFunctionName="CO_ODF_1006">
+      <label lang="en">Communication cycle period</label>
+      <description lang="en">bit 0-31:  period of SYNC transmission in µs (0 = no transmission, no checking)</description>
+    </CANopenObject>
+    <CANopenObject index="1007" name="Synchronous window length" objectType="7" memoryType="ROM" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0">
+      <label lang="en">Synchronous window length</label>
+      <description lang="en">bit 0-31:  window leghth after SYNC when PDOS must be transmited in µs, (0 = not used)</description>
+    </CANopenObject>
+    <CANopenObject index="1008" name="Manufacturer device name" objectType="7" memoryType="ROM" dataType="09" accessType="const" PDOmapping="no" defaultValue="CANopenNode">
+      <label lang="en">Manufacturer device name</label>
+      <description lang="en">Name of the manufacturer as string</description>
+    </CANopenObject>
+    <CANopenObject index="1009" name="Manufacturer hardware version" objectType="7" memoryType="ROM" dataType="09" accessType="const" PDOmapping="no" defaultValue="3.00">
+      <label lang="en">Manufacturer hardware version</label>
+      <description lang="en">Name of the hardware version as string</description>
+    </CANopenObject>
+    <CANopenObject index="100A" name="Manufacturer software version" objectType="7" memoryType="ROM" dataType="09" accessType="const" PDOmapping="no" defaultValue="3.00">
+      <label lang="en">Manufacturer software version</label>
+      <description lang="en">Name of the software version as string.</description>
+    </CANopenObject>
+    <CANopenObject index="1010" name="Store parameters" objectType="8" subNumber="2" memoryType="RAM" dataType="07" accessType="rw" PDOmapping="no" accessFunctionName="CO_ODF_1010">
+      <label lang="en">Store parameters</label>
+      <description lang="en">Writing value 0x65766173 ('s','a','v','e' from LSB to MSB) into this location stores all ROM variables into EEPROM.</description>
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="1"/>
+      <CANopenSubObject subIndex="01" name="save all parameters" objectType="7" defaultValue="0x00000003"/>
+    </CANopenObject>
+    <CANopenObject index="1011" name="Restore default parameters" objectType="8" subNumber="2" memoryType="RAM" dataType="07" accessType="rw" PDOmapping="no" accessFunctionName="CO_ODF_1011">
+      <label lang="en">Restore default parameters</label>
+      <description lang="en">Writing value 0x64616F6C ('l','o','a','d' from LSB to MSB) into this location restores all ROM and EEPROM variables after reset. (After reset read form EEPROM is not performed, so default values are used.)</description>
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="1"/>
+      <CANopenSubObject subIndex="01" name="restore all default parameters" objectType="7" defaultValue="0x00000001"/>
+    </CANopenObject>
+    <CANopenObject index="1014" name="COB-ID EMCY" objectType="7" memoryType="ROM" dataType="07" accessType="ro" PDOmapping="no" defaultValue="$NODEID+0x80" accessFunctionName="CO_ODF_1014">
+      <label lang="en">COB-ID emergency message</label>
+      <description lang="en">bit  0-10: COB-ID
+bit 11-30: set to 0 for 11 bit COB-ID
+bit    31: 0(1) - node uses (does NOT use) Emergency object</description>
+    </CANopenObject>
+    <CANopenObject index="1015" name="inhibit time EMCY" objectType="7" memoryType="ROM" dataType="06" accessType="rw" PDOmapping="no" defaultValue="100">
+      <label lang="en">inhibit time emergency message</label>
+      <description lang="en">bit 0-15: Inhibit time of emergency message in 100µs</description>
+    </CANopenObject>
+    <CANopenObject index="1016" name="Consumer heartbeat time" objectType="8" subNumber="5" memoryType="ROM" dataType="07" accessType="rw" PDOmapping="no" accessFunctionName="CO_ODF_1016">
+      <label lang="en">Consumer heartbeat time</label>
+      <description lang="en">max sub-index
+
+Consumer Heartbeat Time
+bit  0-15: Heartbeat consumer time in ms (0 = node is not monitored)
+bit 16-23: Node ID
+bit 24-31: set to 0</description>
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="4"/>
+      <CANopenSubObject subIndex="01" name="Consumer heartbeat time" objectType="7" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="Consumer heartbeat time" objectType="7" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="Consumer heartbeat time" objectType="7" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="Consumer heartbeat time" objectType="7" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1017" name="Producer heartbeat time" objectType="7" memoryType="ROM" dataType="06" accessType="rw" PDOmapping="no" defaultValue="1000">
+      <label lang="en">Producer heartbeat time</label>
+      <description lang="en">bit 0-15: Heartbeat producer time in ms (0 = disable transmission)</description>
+    </CANopenObject>
+    <CANopenObject index="1018" name="Identity" objectType="9" subNumber="5" memoryType="ROM">
+      <label lang="en">Identity</label>
+      <description lang="en">max sub-index
+
+Vendor-ID
+bit 0-31: Assigned by CiA
+
+Product code
+bit 0-31: Manufacturer specific
+
+Revision number
+bit 0-15:  Minor revision num. (CANopen behavior has not changed)
+bit 16-31: Major revision number (CANopen behavior has changed)
+
+Serial number
+bit 0-31: Manufacturer specific</description>
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="4"/>
+      <CANopenSubObject subIndex="01" name="Vendor-ID" objectType="7" dataType="07" accessType="ro" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="Product code" objectType="7" dataType="07" accessType="ro" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="Revision number" objectType="7" dataType="07" accessType="ro" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="Serial number" objectType="7" dataType="07" accessType="ro" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1019" name="Synchronous counter overflow value" objectType="7" memoryType="ROM" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0" accessFunctionName="CO_ODF_1019">
+      <label lang="en">Synchronous counter overflow value</label>
+      <description lang="en">If value is zero, then SYNC message is transmitted with data length 0.
+
+If Value is from 2 to 240, then SYNC message has one data byte, which contains the counter.
+
+Other values are reserved.</description>
+    </CANopenObject>
+    <CANopenObject index="1029" name="Error behavior" objectType="8" subNumber="7" memoryType="ROM" dataType="05" accessType="rw" PDOmapping="no">
+      <label lang="en">Error behavior</label>
+      <description lang="en">If error is detected and operating NMT state is NMT operational, this object defines behavior of the device.
+
+Value definition for all subindexes:
+   0x00 - if operational, switch to NMT pre-operational
+   0x01 - do nothing
+   0x02 - switch to NMT stopped
+
+01 - Communication error - bus off or Heartbeat consumer error.
+02 - Communication other error (critical errors - see 'Error status bits') except CAN bus passive but including bus off or Heartbeat consumer.
+03 - Communication passive - any communication error including CAN bus passive.
+04 - Generic error (critical errors - see 'Error status bits').
+05 - Device profile error - bit 5 in error register is set.
+06 - Manufacturer specific error - bit 7 in error register is set.</description>
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Communication" objectType="7" defaultValue="0x00"/>
+      <CANopenSubObject subIndex="02" name="Communication other" objectType="7" defaultValue="0x00"/>
+      <CANopenSubObject subIndex="03" name="Communication passive" objectType="7" defaultValue="0x01"/>
+      <CANopenSubObject subIndex="04" name="Generic" objectType="7" defaultValue="0x00"/>
+      <CANopenSubObject subIndex="05" name="Device profile" objectType="7" defaultValue="0x00"/>
+      <CANopenSubObject subIndex="06" name="Manufacturer specific" objectType="7" defaultValue="0x00"/>
+    </CANopenObject>
+    <CANopenObject index="1200" name="SDO server parameter" objectType="9" subNumber="3" memoryType="ROM" accessFunctionName="CO_ODF_1200">
+      <label lang="en">SDO server parameter</label>
+      <description lang="en">0x1200 SDO server parameter
+max sub-index
+
+COB-ID client to server (Receive SDO)
+bit 0-31:  0x00000600 + Node ID
+
+COB-ID server to client (Transmit SDO)
+bit 0-31:  0x00000580 + Node ID
+
+
+
+0x1201 - 0x127F SDO server parameter
+max sub-index
+
+COB-ID client to server (Receive SDO)
+bit 0-10:  COB_ID
+bit 11-30: Set to 0
+bit 31*:   0(1) - node uses (does NOT use) SDO
+
+COB-ID server to client (Transmit SDO)
+bit 0-31:  same as previous
+
+Node-ID of the SDO client
+bit 0-7:   Node ID (optional)</description>
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="2"/>
+      <CANopenSubObject subIndex="01" name="COB-ID client to server" objectType="7" dataType="07" accessType="ro" PDOmapping="no" defaultValue="$NODEID+0x600"/>
+      <CANopenSubObject subIndex="02" name="COB-ID server to client" objectType="7" dataType="07" accessType="ro" PDOmapping="no" defaultValue="$NODEID+0x580"/>
+    </CANopenObject>
+    <CANopenObject index="1280" name="SDO client parameter" objectType="9" subNumber="4" memoryType="RAM">
+      <label lang="en">SDO client parameter</label>
+      <description lang="en">0x1280 - 0x12FF SDO client parameter
+max sub-index
+
+COB-ID client to server (Transmit SDO)
+bit 0-10:  COB_ID
+bit 11-30: Set to 0
+bit 31:    0(1) - node uses (does NOT use) SDO
+
+COB-ID server to client (Receive SDO)
+bit 0-31:  same as previous
+
+Node-ID of the SDO server
+0-7:   Node ID</description>
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="3"/>
+      <CANopenSubObject subIndex="01" name="COB-ID client to server" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="COB-ID server to client" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Node-ID of the SDO server" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="1400" name="RPDO communication parameter" objectType="9" subNumber="3" memoryType="ROM" accessFunctionName="CO_ODF_RPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="2"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by RPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="$NODEID+0x200"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="255"/>
+      <label lang="en">RPDO communication parameter</label>
+      <description lang="en">0x1400 - 0x15FF RPDO communication parameter
+max sub-index
+
+COB-ID
+bit  0-10: COB-ID for PDO, to change it bit 31 must be set
+bit 11-29: set to 0 for 11 bit COB-ID
+bit 30:    0(1) - rtr are allowed (are NOT allowed) for PDO
+bit 31:    0(1) - node uses (does NOT use) PDO
+
+Transmission type
+value = 0-240:   reciving is synchronous, process after next reception of SYNC object
+value = 241-253: not used
+value = 254:     manufacturer specific
+value = 255:     asynchronous</description>
+    </CANopenObject>
+    <CANopenObject index="1401" name="RPDO communication parameter" objectType="9" subNumber="3" memoryType="ROM" accessFunctionName="CO_ODF_RPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="2"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by RPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="$NODEID+0x300"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <label lang="en">RPDO communication parameter</label>
+      <description lang="en">0x1400 - 0x15FF RPDO communication parameter (see description for 0x1400)</description>
+    </CANopenObject>
+    <CANopenObject index="1402" name="RPDO communication parameter" objectType="9" subNumber="3" memoryType="ROM" accessFunctionName="CO_ODF_RPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="2"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by RPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="$NODEID+0x400"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <label lang="en">RPDO communication parameter</label>
+      <description lang="en">0x1400 - 0x15FF RPDO communication parameter (see description for 0x1400)</description>
+    </CANopenObject>
+    <CANopenObject index="1403" name="RPDO communication parameter" objectType="9" subNumber="3" memoryType="ROM" accessFunctionName="CO_ODF_RPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="2"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by RPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="$NODEID+0x500"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <label lang="en">RPDO communication parameter</label>
+      <description lang="en">0x1400 - 0x15FF RPDO communication parameter (see description for 0x1400)</description>
+    </CANopenObject>
+    <CANopenObject index="1404" name="RPDO communication parameter" objectType="9" subNumber="3" memoryType="ROM" accessFunctionName="CO_ODF_RPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="2"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by RPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <label lang="en">RPDO communication parameter</label>
+      <description lang="en">0x1400 - 0x15FF RPDO communication parameter (see description for 0x1400)</description>
+    </CANopenObject>
+    <CANopenObject index="1405" name="RPDO communication parameter" objectType="9" subNumber="3" memoryType="ROM" accessFunctionName="CO_ODF_RPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="2"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by RPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <label lang="en">RPDO communication parameter</label>
+      <description lang="en">0x1400 - 0x15FF RPDO communication parameter (see description for 0x1400)</description>
+    </CANopenObject>
+    <CANopenObject index="1406" name="RPDO communication parameter" objectType="9" subNumber="3" memoryType="ROM" accessFunctionName="CO_ODF_RPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="2"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by RPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <label lang="en">RPDO communication parameter</label>
+      <description lang="en">0x1400 - 0x15FF RPDO communication parameter (see description for 0x1400)</description>
+    </CANopenObject>
+    <CANopenObject index="1407" name="RPDO communication parameter" objectType="9" subNumber="3" memoryType="ROM" accessFunctionName="CO_ODF_RPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="2"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by RPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <label lang="en">RPDO communication parameter</label>
+      <description lang="en">0x1400 - 0x15FF RPDO communication parameter (see description for 0x1400)</description>
+    </CANopenObject>
+    <CANopenObject index="1408" name="RPDO communication parameter" objectType="9" subNumber="3" memoryType="ROM" accessFunctionName="CO_ODF_RPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="2"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by RPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <label lang="en">RPDO communication parameter</label>
+      <description lang="en">0x1400 - 0x15FF RPDO communication parameter (see description for 0x1400)</description>
+    </CANopenObject>
+    <CANopenObject index="1409" name="RPDO communication parameter" objectType="9" subNumber="3" memoryType="ROM" accessFunctionName="CO_ODF_RPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="2"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by RPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <label lang="en">RPDO communication parameter</label>
+      <description lang="en">0x1400 - 0x15FF RPDO communication parameter (see description for 0x1400)</description>
+    </CANopenObject>
+    <CANopenObject index="140A" name="RPDO communication parameter" objectType="9" subNumber="3" memoryType="ROM" accessFunctionName="CO_ODF_RPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="2"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by RPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <label lang="en">RPDO communication parameter</label>
+      <description lang="en">0x1400 - 0x15FF RPDO communication parameter (see description for 0x1400)</description>
+    </CANopenObject>
+    <CANopenObject index="140B" name="RPDO communication parameter" objectType="9" subNumber="3" memoryType="ROM" accessFunctionName="CO_ODF_RPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="2"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by RPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <label lang="en">RPDO communication parameter</label>
+      <description lang="en">0x1400 - 0x15FF RPDO communication parameter (see description for 0x1400)</description>
+    </CANopenObject>
+    <CANopenObject index="140C" name="RPDO communication parameter" objectType="9" subNumber="3" memoryType="ROM" accessFunctionName="CO_ODF_RPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="2"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by RPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <label lang="en">RPDO communication parameter</label>
+      <description lang="en">0x1400 - 0x15FF RPDO communication parameter (see description for 0x1400)</description>
+    </CANopenObject>
+    <CANopenObject index="140D" name="RPDO communication parameter" objectType="9" subNumber="3" memoryType="ROM" accessFunctionName="CO_ODF_RPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="2"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by RPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <label lang="en">RPDO communication parameter</label>
+      <description lang="en">0x1400 - 0x15FF RPDO communication parameter (see description for 0x1400)</description>
+    </CANopenObject>
+    <CANopenObject index="140E" name="RPDO communication parameter" objectType="9" subNumber="3" memoryType="ROM" accessFunctionName="CO_ODF_RPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="2"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by RPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <label lang="en">RPDO communication parameter</label>
+      <description lang="en">0x1400 - 0x15FF RPDO communication parameter (see description for 0x1400)</description>
+    </CANopenObject>
+    <CANopenObject index="140F" name="RPDO communication parameter" objectType="9" subNumber="3" memoryType="ROM" accessFunctionName="CO_ODF_RPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="2"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by RPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <label lang="en">RPDO communication parameter</label>
+      <description lang="en">0x1400 - 0x15FF RPDO communication parameter (see description for 0x1400)</description>
+    </CANopenObject>
+    <CANopenObject index="1600" name="RPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_RPDOmap">
+      <label lang="en">RPDO mapping parameter</label>
+      <description lang="en">0x1600 - 0x17FF RPDO mapping parameter (To change mapping, 'Number of mapped objects' must be set to 0)
+Number of mapped objects
+
+mapped object  (subindex 1...8)
+bit  0-7:  data length in bits
+bit 8-15:  subindex from OD
+bit 16-31: index from OD</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="2"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x62000108"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x62000208"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1601" name="RPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_RPDOmap">
+      <label lang="en">RPDO mapping parameter</label>
+      <description lang="en">0x1600 - 0x17FF RPDO mapping parameter (see description for 0x1600)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1602" name="RPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_RPDOmap">
+      <label lang="en">RPDO mapping parameter</label>
+      <description lang="en">0x1600 - 0x17FF RPDO mapping parameter (see description for 0x1600)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1603" name="RPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_RPDOmap">
+      <label lang="en">RPDO mapping parameter</label>
+      <description lang="en">0x1600 - 0x17FF RPDO mapping parameter (see description for 0x1600)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1604" name="RPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_RPDOmap">
+      <label lang="en">RPDO mapping parameter</label>
+      <description lang="en">0x1600 - 0x17FF RPDO mapping parameter (see description for 0x1600)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1605" name="RPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_RPDOmap">
+      <label lang="en">RPDO mapping parameter</label>
+      <description lang="en">0x1600 - 0x17FF RPDO mapping parameter (see description for 0x1600)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1606" name="RPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_RPDOmap">
+      <label lang="en">RPDO mapping parameter</label>
+      <description lang="en">0x1600 - 0x17FF RPDO mapping parameter (see description for 0x1600)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1607" name="RPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_RPDOmap">
+      <label lang="en">RPDO mapping parameter</label>
+      <description lang="en">0x1600 - 0x17FF RPDO mapping parameter (see description for 0x1600)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1608" name="RPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_RPDOmap">
+      <label lang="en">RPDO mapping parameter</label>
+      <description lang="en">0x1600 - 0x17FF RPDO mapping parameter (see description for 0x1600)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1609" name="RPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_RPDOmap">
+      <label lang="en">RPDO mapping parameter</label>
+      <description lang="en">0x1600 - 0x17FF RPDO mapping parameter (see description for 0x1600)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="160A" name="RPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_RPDOmap">
+      <label lang="en">RPDO mapping parameter</label>
+      <description lang="en">0x1600 - 0x17FF RPDO mapping parameter (see description for 0x1600)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="160B" name="RPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_RPDOmap">
+      <label lang="en">RPDO mapping parameter</label>
+      <description lang="en">0x1600 - 0x17FF RPDO mapping parameter (see description for 0x1600)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="160C" name="RPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_RPDOmap">
+      <label lang="en">RPDO mapping parameter</label>
+      <description lang="en">0x1600 - 0x17FF RPDO mapping parameter (see description for 0x1600)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="160D" name="RPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_RPDOmap">
+      <label lang="en">RPDO mapping parameter</label>
+      <description lang="en">0x1600 - 0x17FF RPDO mapping parameter (see description for 0x1600)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="160E" name="RPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_RPDOmap">
+      <label lang="en">RPDO mapping parameter</label>
+      <description lang="en">0x1600 - 0x17FF RPDO mapping parameter (see description for 0x1600)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="160F" name="RPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_RPDOmap">
+      <label lang="en">RPDO mapping parameter</label>
+      <description lang="en">0x1600 - 0x17FF RPDO mapping parameter (see description for 0x1600)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1800" name="TPDO communication parameter" objectType="9" subNumber="7" memoryType="ROM" accessFunctionName="CO_ODF_TPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by TPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="$NODEID+0x180"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="255"/>
+      <CANopenSubObject subIndex="03" name="inhibit time" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="100"/>
+      <CANopenSubObject subIndex="04" name="compatibility entry" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="event timer" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="SYNC start value" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <label lang="en">TPDO communication parameter</label>
+      <description lang="en">0x1800 - 0x19FF TPDO communication parameter
+max sub-index
+
+COB-ID
+bit  0-10: COB-ID for PDO, to change it bit 31 must be set
+bit 11-29: set to 0 for 11 bit COB-ID
+bit 30:    0(1) - rtr are allowed (are NOT allowed) for PDO
+bit 31:    0(1) - node uses (does NOT use) PDO
+
+Transmission type
+value = 0:       transmiting is synchronous, specification in device profile
+value = 1-240:   transmiting is synchronous after every N-th SYNC object
+value = 241-251: not used
+value = 252-253: Transmited only on reception of Remote Transmission Request
+value = 254:     manufacturer specific
+value = 255:     asinchronous, specification in device profile
+
+inhibit time
+bit 0-15:  Minimum time between transmissions of the PDO in 100µs. Zero disables functionality.
+
+compatibility entry
+bit 0-7:   Not used.
+
+event timer
+bit 0-15:  Time between periodic transmissions of the PDO in ms. Zero disables functionality.
+
+SYNC start value
+value = 0:       Counter of the SYNC message shall not be processed.
+value = 1-240:   The SYNC message with the counter value equal to this value shall be regarded as the first received SYNC message.</description>
+    </CANopenObject>
+    <CANopenObject index="1801" name="TPDO communication parameter" objectType="9" subNumber="7" memoryType="ROM" accessFunctionName="CO_ODF_TPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by TPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="$NODEID+0x280"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <CANopenSubObject subIndex="03" name="inhibit time" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="compatibility entry" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="event timer" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="SYNC start value" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <label lang="en">TPDO communication parameter</label>
+      <description lang="en">0x1800 - 0x19FF TPDO communication parameter (see description for 0x1800)</description>
+    </CANopenObject>
+    <CANopenObject index="1802" name="TPDO communication parameter" objectType="9" subNumber="7" memoryType="ROM" accessFunctionName="CO_ODF_TPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by TPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="$NODEID+0x380"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <CANopenSubObject subIndex="03" name="inhibit time" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="compatibility entry" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="event timer" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="SYNC start value" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <label lang="en">TPDO communication parameter</label>
+      <description lang="en">0x1800 - 0x19FF TPDO communication parameter (see description for 0x1800)</description>
+    </CANopenObject>
+    <CANopenObject index="1803" name="TPDO communication parameter" objectType="9" subNumber="7" memoryType="ROM" accessFunctionName="CO_ODF_TPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by TPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="$NODEID+0x480"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <CANopenSubObject subIndex="03" name="inhibit time" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="compatibility entry" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="event timer" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="SYNC start value" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <label lang="en">TPDO communication parameter</label>
+      <description lang="en">0x1800 - 0x19FF TPDO communication parameter (see description for 0x1800)</description>
+    </CANopenObject>
+    <CANopenObject index="1804" name="TPDO communication parameter" objectType="9" subNumber="7" memoryType="ROM" accessFunctionName="CO_ODF_TPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by TPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <CANopenSubObject subIndex="03" name="inhibit time" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="compatibility entry" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="event timer" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="SYNC start value" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <label lang="en">TPDO communication parameter</label>
+      <description lang="en">0x1800 - 0x19FF TPDO communication parameter (see description for 0x1800)</description>
+    </CANopenObject>
+    <CANopenObject index="1805" name="TPDO communication parameter" objectType="9" subNumber="7" memoryType="ROM" accessFunctionName="CO_ODF_TPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by TPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <CANopenSubObject subIndex="03" name="inhibit time" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="compatibility entry" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="event timer" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="SYNC start value" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <label lang="en">TPDO communication parameter</label>
+      <description lang="en">0x1800 - 0x19FF TPDO communication parameter (see description for 0x1800)</description>
+    </CANopenObject>
+    <CANopenObject index="1806" name="TPDO communication parameter" objectType="9" subNumber="7" memoryType="ROM" accessFunctionName="CO_ODF_TPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by TPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <CANopenSubObject subIndex="03" name="inhibit time" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="compatibility entry" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="event timer" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="SYNC start value" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <label lang="en">TPDO communication parameter</label>
+      <description lang="en">0x1800 - 0x19FF TPDO communication parameter (see description for 0x1800)</description>
+    </CANopenObject>
+    <CANopenObject index="1807" name="TPDO communication parameter" objectType="9" subNumber="7" memoryType="ROM" accessFunctionName="CO_ODF_TPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by TPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <CANopenSubObject subIndex="03" name="inhibit time" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="compatibility entry" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="event timer" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="SYNC start value" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <label lang="en">TPDO communication parameter</label>
+      <description lang="en">0x1800 - 0x19FF TPDO communication parameter (see description for 0x1800)</description>
+    </CANopenObject>
+    <CANopenObject index="1808" name="TPDO communication parameter" objectType="9" subNumber="7" memoryType="ROM" accessFunctionName="CO_ODF_TPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by TPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <CANopenSubObject subIndex="03" name="inhibit time" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="compatibility entry" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="event timer" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="SYNC start value" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <label lang="en">TPDO communication parameter</label>
+      <description lang="en">0x1800 - 0x19FF TPDO communication parameter (see description for 0x1800)</description>
+    </CANopenObject>
+    <CANopenObject index="1809" name="TPDO communication parameter" objectType="9" subNumber="7" memoryType="ROM" accessFunctionName="CO_ODF_TPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by TPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <CANopenSubObject subIndex="03" name="inhibit time" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="compatibility entry" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="event timer" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="SYNC start value" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <label lang="en">TPDO communication parameter</label>
+      <description lang="en">0x1800 - 0x19FF TPDO communication parameter (see description for 0x1800)</description>
+    </CANopenObject>
+    <CANopenObject index="180A" name="TPDO communication parameter" objectType="9" subNumber="7" memoryType="ROM" accessFunctionName="CO_ODF_TPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by TPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <CANopenSubObject subIndex="03" name="inhibit time" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="compatibility entry" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="event timer" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="SYNC start value" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <label lang="en">TPDO communication parameter</label>
+      <description lang="en">0x1800 - 0x19FF TPDO communication parameter (see description for 0x1800)</description>
+    </CANopenObject>
+    <CANopenObject index="180B" name="TPDO communication parameter" objectType="9" subNumber="7" memoryType="ROM" accessFunctionName="CO_ODF_TPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by TPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <CANopenSubObject subIndex="03" name="inhibit time" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="compatibility entry" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="event timer" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="SYNC start value" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <label lang="en">TPDO communication parameter</label>
+      <description lang="en">0x1800 - 0x19FF TPDO communication parameter (see description for 0x1800)</description>
+    </CANopenObject>
+    <CANopenObject index="180C" name="TPDO communication parameter" objectType="9" subNumber="7" memoryType="ROM" accessFunctionName="CO_ODF_TPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by TPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <CANopenSubObject subIndex="03" name="inhibit time" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="compatibility entry" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="event timer" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="SYNC start value" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <label lang="en">TPDO communication parameter</label>
+      <description lang="en">0x1800 - 0x19FF TPDO communication parameter (see description for 0x1800)</description>
+    </CANopenObject>
+    <CANopenObject index="180D" name="TPDO communication parameter" objectType="9" subNumber="7" memoryType="ROM" accessFunctionName="CO_ODF_TPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by TPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <CANopenSubObject subIndex="03" name="inhibit time" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="compatibility entry" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="event timer" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="SYNC start value" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <label lang="en">TPDO communication parameter</label>
+      <description lang="en">0x1800 - 0x19FF TPDO communication parameter (see description for 0x1800)</description>
+    </CANopenObject>
+    <CANopenObject index="180E" name="TPDO communication parameter" objectType="9" subNumber="7" memoryType="ROM" accessFunctionName="CO_ODF_TPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by TPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <CANopenSubObject subIndex="03" name="inhibit time" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="compatibility entry" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="event timer" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="SYNC start value" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <label lang="en">TPDO communication parameter</label>
+      <description lang="en">0x1800 - 0x19FF TPDO communication parameter (see description for 0x1800)</description>
+    </CANopenObject>
+    <CANopenObject index="180F" name="TPDO communication parameter" objectType="9" subNumber="7" memoryType="ROM" accessFunctionName="CO_ODF_TPDOcom">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="COB-ID used by TPDO" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x80000000"/>
+      <CANopenSubObject subIndex="02" name="transmission type" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="254"/>
+      <CANopenSubObject subIndex="03" name="inhibit time" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="compatibility entry" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="event timer" objectType="7" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="SYNC start value" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <label lang="en">TPDO communication parameter</label>
+      <description lang="en">0x1800 - 0x19FF TPDO communication parameter (see description for 0x1800)</description>
+    </CANopenObject>
+    <CANopenObject index="1A00" name="TPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_TPDOmap">
+      <label lang="en">TPDO mapping parameter</label>
+      <description lang="en">0x1A00 - 0x1BFF TPDO mapping parameter. (To change mapping, 'Number of mapped objects' must be set to 0).
+Number of mapped objects
+
+mapped object  (subindex 1...8)
+bit   0-7: data length in bits
+bit  8-15: subindex from OD
+bit 16-31: index from OD</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="2"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x60000108"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x60000208"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1A01" name="TPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_TPDOmap">
+      <label lang="en">TPDO mapping parameter</label>
+      <description lang="en">0x1A00 - 0x1BFF TPDO mapping parameter (see description for 0x1A00)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1A02" name="TPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_TPDOmap">
+      <label lang="en">TPDO mapping parameter</label>
+      <description lang="en">0x1A00 - 0x1BFF TPDO mapping parameter (see description for 0x1A00)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1A03" name="TPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_TPDOmap">
+      <label lang="en">TPDO mapping parameter</label>
+      <description lang="en">0x1A00 - 0x1BFF TPDO mapping parameter (see description for 0x1A00)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1A04" name="TPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_TPDOmap">
+      <label lang="en">TPDO mapping parameter</label>
+      <description lang="en">0x1A00 - 0x1BFF TPDO mapping parameter (see description for 0x1A00)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1A05" name="TPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_TPDOmap">
+      <label lang="en">TPDO mapping parameter</label>
+      <description lang="en">0x1A00 - 0x1BFF TPDO mapping parameter (see description for 0x1A00)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1A06" name="TPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_TPDOmap">
+      <label lang="en">TPDO mapping parameter</label>
+      <description lang="en">0x1A00 - 0x1BFF TPDO mapping parameter (see description for 0x1A00)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1A07" name="TPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_TPDOmap">
+      <label lang="en">TPDO mapping parameter</label>
+      <description lang="en">0x1A00 - 0x1BFF TPDO mapping parameter (see description for 0x1A00)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1A08" name="TPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_TPDOmap">
+      <label lang="en">TPDO mapping parameter</label>
+      <description lang="en">0x1A00 - 0x1BFF TPDO mapping parameter (see description for 0x1A00)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1A09" name="TPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_TPDOmap">
+      <label lang="en">TPDO mapping parameter</label>
+      <description lang="en">0x1A00 - 0x1BFF TPDO mapping parameter (see description for 0x1A00)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1A0A" name="TPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_TPDOmap">
+      <label lang="en">TPDO mapping parameter</label>
+      <description lang="en">0x1A00 - 0x1BFF TPDO mapping parameter (see description for 0x1A00)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1A0B" name="TPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_TPDOmap">
+      <label lang="en">TPDO mapping parameter</label>
+      <description lang="en">0x1A00 - 0x1BFF TPDO mapping parameter (see description for 0x1A00)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1A0C" name="TPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_TPDOmap">
+      <label lang="en">TPDO mapping parameter</label>
+      <description lang="en">0x1A00 - 0x1BFF TPDO mapping parameter (see description for 0x1A00)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1A0D" name="TPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_TPDOmap">
+      <label lang="en">TPDO mapping parameter</label>
+      <description lang="en">0x1A00 - 0x1BFF TPDO mapping parameter (see description for 0x1A00)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1A0E" name="TPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_TPDOmap">
+      <label lang="en">TPDO mapping parameter</label>
+      <description lang="en">0x1A00 - 0x1BFF TPDO mapping parameter (see description for 0x1A00)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1A0F" name="TPDO mapping parameter" objectType="9" subNumber="9" memoryType="ROM" accessFunctionName="CO_ODF_TPDOmap">
+      <label lang="en">TPDO mapping parameter</label>
+      <description lang="en">0x1A00 - 0x1BFF TPDO mapping parameter (see description for 0x1A00)</description>
+      <CANopenSubObject subIndex="00" name="Number of mapped objects" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="01" name="mapped object 1" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="02" name="mapped object 2" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="03" name="mapped object 3" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="04" name="mapped object 4" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="05" name="mapped object 5" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="mapped object 6" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="07" name="mapped object 7" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="08" name="mapped object 8" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+    </CANopenObject>
+    <CANopenObject index="1F80" name="NMT startup" objectType="7" memoryType="ROM" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000">
+      <label lang="en">NMT Startup</label>
+      <description lang="en">Only bit 2 is implemented.
+
+bit 0: 0(1) - device is not (is) NMT master
+bit 1: 0(1) - if bit3=0, start explicitly assigned (all) nodes
+bit 2: 0(1) - automaticaly enter (DO NOT automaticaly enter) the operational state on bootup
+bit 3: 0(1) - NMT master may (may not) start nodes automatically
+bit 4: 0(1) - if monitored node fails heartbeat handle that (all) node(s)
+bit 5: 0(1) - flying master process not (yes) supported
+bit 6: 0(1) - use bit 4 (ignore bit 4, stop all nodes)
+bit 7-31: reserved, set to 0</description>
+    </CANopenObject>
+    <CANopenObject index="2100" name="Error status bits" objectType="7" memoryType="RAM" dataType="0A" accessType="ro" PDOmapping="optional" defaultValue="00 00 00 00 00 00 00 00 00 00">
+      <label lang="en">Error Status Bits</label>
+      <description lang="en">Error Status Bits indicates error conditions inside stack or inside application. Specific bit is set by CO_errorReport() function, when error occurs in program. It can be reset by CO_errorReset() function, if error is solved. Emergency message is sent on each change of any Error Status Bit. If critical bits are set, node will not be able to stay in operational state. For more information see file CO_Emergency.h.
+
+Default error status bits are:
+
+Communication or protocol errors from driver (informative):
+00 - ERROR_NO_ERROR - Error Reset or No Error.
+01 - ERROR_CAN_BUS_WARNING - CAN bus warning.
+02 - ERROR_RXMSG_WRONG_LENGTH - Wrong data length of received CAN message.
+03 - ERROR_RXMSG_OVERFLOW - Previous received CAN message wasn't processed yet.
+04 - ERROR_RPDO_WRONG_LENGTH - Wrong data length of received PDO.
+05 - ERROR_RPDO_OVERFLOW - Previous received PDO wasn't processed yet.
+06 - ERROR_CAN_RX_BUS_PASSIVE - CAN receive bus is passive.
+07 - ERROR_CAN_TX_BUS_PASSIVE - CAN transmit bus is passive.
+
+Communication or protocol errors from driver (critical):
+08 - ERROR_08_reserved - (reserved)
+09 - ERROR_09_reserved - (reserved)
+0A - ERROR_CAN_TX_BUS_OFF - CAN transmit bus is off.
+0B - ERROR_CAN_RXB_OVERFLOW - CAN module receive buffer has overflowed.
+0C - ERROR_CAN_TX_OVERFLOW - CAN transmit buffer has overflowed.
+0D - ERROR_TPDO_OUTSIDE_WINDOW - TPDO is outside SYNC window.
+0E - ERROR_CAN_CONFIGURATION_FAILED - Configuration of CAN module CAN failed (Rx or Tx).
+0F - ERROR_0F_reserved - (reserved)
+
+Communication or protocol errors (informative):
+10 - ERROR_NMT_WRONG_COMMAND - Wrong NMT command received.
+11 - ERROR_SYNC_EARLY - SYNC message was too early.
+12 - ERROR_12_reserved - (reserved)
+13 - ERROR_13_reserved - (reserved)
+14 - ERROR_14_reserved - (reserved)
+15 - ERROR_15_reserved - (reserved)
+16 - ERROR_16_reserved - (reserved)
+17 - ERROR_17_reserved - (reserved)
+
+Communication or protocol errors (critical):
+18 - ERROR_SYNC_TIME_OUT - SYNC message timeout.
+19 - ERROR_SYNC_LENGTH - Unexpected SYNC data length
+1A - ERROR_PDO_WRONG_MAPPING - Error with PDO mapping.
+1B - ERROR_HEARTBEAT_CONSUMER - Heartbeat consumer timeout.
+1C - ERROR_HEARTBEAT_CONSUMER_REMOTE_RESET - Heartbeat consumer detected remote node reset.
+1D - ERROR_1D_reserved - (reserved)
+1E - ERROR_1E_reserved - (reserved)
+1F - ERROR_1F_reserved - (reserved)
+
+Generic errors (informative):
+20 - ERROR_20_reserved - (reserved)
+21 - ERROR_21_reserved - (reserved)
+22 - ERROR_22_reserved - (reserved)
+23 - ERROR_23_reserved - (reserved)
+24 - ERROR_24_reserved - (reserved)
+25 - ERROR_25_reserved - (reserved)
+26 - ERROR_26_reserved - (reserved)
+27 - ERROR_27_reserved - (reserved)
+
+Generic errors (critical):
+28 - ERROR_WRONG_ERROR_REPORT - Wrong parameters to &lt;CO_errorReport()&gt; function.
+29 - ERROR_ISR_TIMER_OVERFLOW - Timer task has overflowed.
+2A - ERROR_MEMORY_ALLOCATION_ERROR - Unable to allocate memory for objects.
+2B - ERROR_GENERIC_ERROR - Generic error, test usage.
+2C - ERROR_MAIN_TIMER_OVERFLOW - Mainline function exceeded maximum execution time.
+2D - ERROR_INTERNAL_STATE_APPL - Error in application software internal state.
+2E - ERROR_2E_reserved - (reserved)
+2F - ERROR_2F_reserved - (reserved)
+
+Manufacturer specific errors:
+Manufacturer may define its own constants up to index 0xFF. Of course, he must then define large enough buffer for error status bits (up to 32 bytes).</description>
+    </CANopenObject>
+    <CANopenObject index="2101" name="CAN node ID" objectType="7" memoryType="ROM" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0x20">
+      <accessFunctionPreCode>if(WRITING){
+  UNSIGNED8 var = *((UNSIGNED8*)dataBuff);
+  if(var &lt; 1)   return 0x06090032L;  //Value of parameter written too low.
+  if(var &gt; 127) return 0x06090031L;  //Value of parameter written too high.
+}</accessFunctionPreCode>
+      <label lang="en">CAN Node ID</label>
+      <description lang="en">CAN Node ID is CANopenNode specific variable. It sets node-ID for device on CANopen network. Node-ID can be set on other ways too, for example with DIP switches. More advanced solution is use of LSS.
+
+Valid values are from 1 to 127:</description>
+    </CANopenObject>
+    <CANopenObject index="2102" name="CAN bit rate" objectType="7" memoryType="ROM" dataType="06" accessType="rw" PDOmapping="no" defaultValue="250">
+      <accessFunctionPreCode>if(WRITING){
+  UNSIGNED16 var;
+  memcpySwap2((UNSIGNED8*)&amp;var, (UNSIGNED8*)dataBuff);
+  if(!(var == 10 || var == 20 || var == 50 || var == 125 || var == 250 || var == 500 || var == 800 || var == 1000)) return 0x06090030L;  //Invalid value for the parameter
+}</accessFunctionPreCode>
+      <label lang="en">CAN Bit-Rate</label>
+      <description lang="en">CAN Bit-Rate is CANopenNode specific variable. It sets CAN Bit-Rate for device on CANopen network.
+
+Valid values are in [kbps]:
+10, 20, 50, 125, 250, 500, 800, 1000</description>
+    </CANopenObject>
+    <CANopenObject index="2103" name="SYNC counter" objectType="7" memoryType="RAM" dataType="06" accessType="rw" PDOmapping="no" defaultValue="0">
+      <label lang="en">SYNC Counter</label>
+      <description lang="en">SYNC Counter is incremented each time, SYNC message is received or transmitted.</description>
+    </CANopenObject>
+    <CANopenObject index="2104" name="SYNC time" objectType="7" memoryType="RAM" dataType="06" accessType="ro" PDOmapping="no" defaultValue="0">
+      <label lang="en">SYNC Time</label>
+      <description lang="en">SYNC Time is incremented each timer period and reset to zero, each time SYNC is received or transmitted.</description>
+    </CANopenObject>
+    <CANopenObject index="2106" name="Power-on counter" objectType="7" memoryType="EEPROM" dataType="07" accessType="ro" PDOmapping="no" defaultValue="0">
+      <label lang="en">Power on Counter</label>
+      <description lang="en">Power on Counter counts total microcontroller resets in it's lifetime. Variable is an example of EEPROM usage.</description>
+    </CANopenObject>
+    <CANopenObject index="2107" name="Performance" objectType="8" subNumber="6" memoryType="RAM" dataType="06" accessType="rw" PDOmapping="optional">
+      <accessFunctionPreCode>if(WRITING){
+  UNSIGNED16 var;
+  memcpySwap2((UNSIGNED8*)&amp;var, (UNSIGNED8*)dataBuff);
+  if(!((subIndex == 3 || subIndex == 5) &amp;&amp; var == 0))
+    return 0x06090030; //Invalid value for parameter
+}</accessFunctionPreCode>
+      <label lang="en">Performance</label>
+      <description lang="en">Internal performance of the microcontroller.
+
+cycles per second - cycle frequency of internal timer.
+timer cycle time - current timer cycle time in percent of timer period.
+timer cycle max time - maximum timer cycle time in percent of timer period.
+main cycle time - current mainline function cycle time in percent of timer period.
+main cycle max time - maximum mainline function cycle time in percent of timer period.</description>
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="5"/>
+      <CANopenSubObject subIndex="01" name="cycles per second" objectType="7" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="timer cycle time" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="timer cycle max time" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="main cycle time" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="main cycle max time" objectType="7" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2108" name="Temperature" objectType="8" subNumber="2" memoryType="RAM" dataType="03" accessType="ro" PDOmapping="optional">
+      <label lang="en">Temperature</label>
+      <description lang="en">Current temperature on device in 0,1°C.</description>
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="1"/>
+      <CANopenSubObject subIndex="01" name="main PCB" objectType="7" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2109" name="Voltage" objectType="8" subNumber="2" memoryType="RAM" dataType="03" accessType="ro" PDOmapping="optional">
+      <label lang="en">Voltage</label>
+      <description lang="en">Current voltage on device in 0,1V.</description>
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="1"/>
+      <CANopenSubObject subIndex="01" name="main PCB supply" objectType="7" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2110" name="Variable Int32" objectType="8" subNumber="33" memoryType="RAM" dataType="04" accessType="rw" PDOmapping="optional" TPDOdetectCOS="true">
+      <label lang="en">Variable Integer 32bit</label>
+      <description lang="en">Vartiable is free to use by application.</description>
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="32"/>
+      <CANopenSubObject subIndex="01" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="09" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0A" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0B" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0C" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0D" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0E" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0F" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="10" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="11" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="12" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="13" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="14" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="15" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="16" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="17" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="18" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="19" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="1A" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="1B" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="1C" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="1D" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="1E" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="1F" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="20" name="int32" objectType="7" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2111" name="Variable ROM Int32" objectType="8" subNumber="17" memoryType="ROM" dataType="04" accessType="rw" PDOmapping="optional" TPDOdetectCOS="true">
+      <label lang="en">Variable ROM Integer 32bit</label>
+      <description lang="en">Vartiable is free to use by application.</description>
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="16"/>
+      <CANopenSubObject subIndex="01" name="int32" objectType="7" defaultValue="1"/>
+      <CANopenSubObject subIndex="02" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="09" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0A" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0B" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0C" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0D" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0E" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0F" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="10" name="int32" objectType="7" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2112" name="Variable NV Int32" objectType="8" subNumber="17" memoryType="EEPROM" dataType="04" accessType="rw" PDOmapping="optional" TPDOdetectCOS="true">
+      <label lang="en">Variable nonvolatile Integer 32bit</label>
+      <description lang="en">Vartiable is free to use by application. Variable is stored to internal baterry powered SRAM.</description>
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="16"/>
+      <CANopenSubObject subIndex="01" name="int32" objectType="7" defaultValue="1"/>
+      <CANopenSubObject subIndex="02" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="09" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0A" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0B" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0C" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0D" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0E" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0F" name="int32" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="10" name="int32" objectType="7" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2120" name="test var" objectType="9" subNumber="6" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="5"/>
+      <CANopenSubObject subIndex="01" name="I64" objectType="7" dataType="15" accessType="rw" PDOmapping="optional" defaultValue="0x1234567890ABCDEFLL"/>
+      <CANopenSubObject subIndex="02" name="U64" objectType="7" dataType="1B" accessType="rw" PDOmapping="optional" defaultValue="0x234567890ABCDEF1LL"/>
+      <CANopenSubObject subIndex="03" name="R32" objectType="7" dataType="08" accessType="rw" PDOmapping="optional" defaultValue="12.345"/>
+      <CANopenSubObject subIndex="04" name="R64" objectType="7" dataType="11" accessType="rw" PDOmapping="optional" defaultValue="456.789"/>
+      <CANopenSubObject subIndex="05" name="domain" objectType="7" dataType="0F" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2130" name="Time" objectType="9" subNumber="4" memoryType="RAM">
+      <label lang="en">Time</label>
+      <description lang="en">Variable displays current time.
+
+String - returns current time as string.
+
+Epoch time ms - Milliseconds since unix epoch (1.1.1970, 00:00:00, UTC). It is calculated as base + offset. Base is calculated on startup of program and offset increments continuously since then. 'Epoch time offset ms' overflows each 49,7 days. 'Epoch time base ms' is recalculated in case of overflow or in case of write to 'Epoch time offset ms'. It is rounded to one minute.</description>
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="3"/>
+      <CANopenSubObject subIndex="01" name="String" objectType="7" dataType="09" accessType="ro" PDOmapping="no" defaultValue="-                             "/>
+      <CANopenSubObject subIndex="02" name="Epoch time base ms" objectType="7" dataType="1B" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Epoch time offset ms" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2301" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <label lang="en">Trace config</label>
+      <description lang="en">Trace is used for recording variables.
+
+See also Trace.
+
+Size - Maximum number of trace records in circular buffer. By reading it returns actual buffer size (If zero, malloc may had been failed at startup). By writing it sets the size, which will be valid after next reboot. (It is necessary to store parameters before (0x1010).)
+
+Axis no - If value is different than zero, trace is enabled. Value is informative and describes group of traces (Multiple traces can belong to single axis.). By reading it returns zero if trace is disabled or if it is not configured properly. When trace is enabled, internal buffer is cleared.
+
+Name - name of the trace as a string (informative).
+
+Color - color of the trace as a string (informative).
+
+Map - Map to variable in object dictionary, similar as PDO map(two bytes of index, one byte of subindex and 1 byte of bitlength. It's value will be copied to trace.value in case index and subindex are correct. If map index and subindex is zero, RPDO may be mapped to trace.value, for example. Valid values of map.bitlength is 08, 10 or 20 or 00, which indicates 8-bit, 16bit, 32-bit or default-size variable. Trace must be disabled, if mapping is written (Axis no set to 0). 
+
+Format - If first bit is zero, then value is used as signed integer otherwise as unsigned integer. If format is 0 or 1, text points are generated for time and value: "123;321\n140;345\n..." If format is 2 or 3, binary data is generated: 4-byte timestamp and 4-byte value. If format is 4 or 5, SVG path is generated: "M123,321H140V345...".
+
+Trigger - 0=disabled, 1=rising edge, 2=falling edge, 3=both edges.
+
+Threshold - If integer value passes threshold (based on trigger setting), time is recorded into 'trigger time'.</description>
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="Trace1                        "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2302" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="Trace2                        "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="green               "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2303" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2304" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2305" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2306" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2307" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2308" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2309" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="230A" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="230B" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="230C" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="230D" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="230E" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="230F" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2310" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2311" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2312" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2313" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2314" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2315" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2316" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2317" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2318" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2319" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="231A" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="231B" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="231C" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="231D" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="231E" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="231F" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2320" name="Trace config" objectType="9" subNumber="9" memoryType="ROM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="1000"/>
+      <CANopenSubObject subIndex="02" name="Axis no" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Name" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="name                          "/>
+      <CANopenSubObject subIndex="04" name="Color" objectType="7" dataType="09" accessType="rw" PDOmapping="no" defaultValue="red                 "/>
+      <CANopenSubObject subIndex="05" name="Map" objectType="7" dataType="07" accessType="rw" PDOmapping="no" defaultValue="0x00000000"/>
+      <CANopenSubObject subIndex="06" name="Format" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Trigger" objectType="7" dataType="05" accessType="rw" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Threshold" objectType="7" dataType="04" accessType="rw" PDOmapping="no" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2400" name="Trace enable" objectType="7" memoryType="RAM" dataType="05" accessType="rw" PDOmapping="optional" defaultValue="0">
+      <label lang="en">Trace enable</label>
+      <description lang="en">This object controls, how many trace objects (beginning from index 0x2401) are enabled. If zero, all traces are disabled.</description>
+    </CANopenObject>
+    <CANopenObject index="2401" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <label lang="en">Trace</label>
+      <description lang="en">Trace is used for recording variables.
+
+See also Trace config.
+
+Size - Number of current records in buffer.
+
+Value - Latest value. If traceConfig.map (index and subindex) is valid, then mapped variable will be copied here.
+
+Min, Max - Minimum and maximum value.
+
+Plot - SVG path generated from the values from circular buffer. For time axis is used Time-&gt;'Epoch time offset ms'. When Plot is read, internal buffer is emptied.
+
+Trigger time - If integer value passes 'TraceConfig-&gt;threshold', then time is recorded into this variable.</description>
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2402" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2403" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2404" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2405" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2406" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2407" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2408" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2409" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="240A" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="240B" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="240C" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="240D" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="240E" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="240F" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2410" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2411" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2412" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2413" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2414" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2415" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2416" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2417" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2418" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2419" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="241A" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="241B" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="241C" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="241D" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="241E" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="241F" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="2420" name="Trace" objectType="9" subNumber="7" memoryType="RAM">
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="6"/>
+      <CANopenSubObject subIndex="01" name="Size" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Value" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Min" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Max" objectType="7" dataType="04" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Plot" objectType="7" dataType="0F" accessType="ro" PDOmapping="no" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Trigger time" objectType="7" dataType="07" accessType="rw" PDOmapping="optional" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="6000" name="Read input 8 bit" objectType="8" subNumber="9" memoryType="RAM" dataType="05" accessType="ro" PDOmapping="optional" TPDOdetectCOS="true">
+      <label lang="en">Read input 8 bit</label>
+      <description lang="en">Digital inputs from hardware.</description>
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Input" objectType="7" defaultValue="0x00"/>
+      <CANopenSubObject subIndex="02" name="Input" objectType="7" defaultValue="0x00"/>
+      <CANopenSubObject subIndex="03" name="Input" objectType="7" defaultValue="0x00"/>
+      <CANopenSubObject subIndex="04" name="Input" objectType="7" defaultValue="0x00"/>
+      <CANopenSubObject subIndex="05" name="Input" objectType="7" defaultValue="0x00"/>
+      <CANopenSubObject subIndex="06" name="Input" objectType="7" defaultValue="0x00"/>
+      <CANopenSubObject subIndex="07" name="Input" objectType="7" defaultValue="0x00"/>
+      <CANopenSubObject subIndex="08" name="Input" objectType="7" defaultValue="0x00"/>
+    </CANopenObject>
+    <CANopenObject index="6200" name="Write output 8 bit" objectType="8" subNumber="9" memoryType="RAM" dataType="05" accessType="rw" PDOmapping="optional">
+      <label lang="en">Write output 8 bit</label>
+      <description lang="en">Digital outputs on hardware.</description>
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Output" objectType="7" defaultValue="0x00"/>
+      <CANopenSubObject subIndex="02" name="Output" objectType="7" defaultValue="0x00"/>
+      <CANopenSubObject subIndex="03" name="Output" objectType="7" defaultValue="0x00"/>
+      <CANopenSubObject subIndex="04" name="Output" objectType="7" defaultValue="0x00"/>
+      <CANopenSubObject subIndex="05" name="Output" objectType="7" defaultValue="0x00"/>
+      <CANopenSubObject subIndex="06" name="Output" objectType="7" defaultValue="0x00"/>
+      <CANopenSubObject subIndex="07" name="Output" objectType="7" defaultValue="0x00"/>
+      <CANopenSubObject subIndex="08" name="Output" objectType="7" defaultValue="0x00"/>
+    </CANopenObject>
+    <CANopenObject index="6401" name="Read analogue input 16 bit" objectType="8" subNumber="13" memoryType="RAM" dataType="03" accessType="ro" PDOmapping="optional">
+      <label lang="en">Read analogue input 16 bit</label>
+      <description lang="en">Analogue inputs from hardware. The integer value is left adjusted.</description>
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="12"/>
+      <CANopenSubObject subIndex="01" name="Input" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Input" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Input" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Input" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Input" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Input" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Input" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Input" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="09" name="Input" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0A" name="Input" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0B" name="Input" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="0C" name="Input" objectType="7" defaultValue="0"/>
+    </CANopenObject>
+    <CANopenObject index="6411" name="Write analogue output 16 bit" objectType="8" subNumber="9" memoryType="RAM" dataType="03" accessType="rw" PDOmapping="optional">
+      <label lang="en">Write analogue output 16 bit</label>
+      <description lang="en">Analogue outputs on hardware. The integer value is left adjusted.</description>
+      <CANopenSubObject subIndex="00" name="max sub-index" objectType="7" dataType="05" accessType="ro" PDOmapping="no" defaultValue="8"/>
+      <CANopenSubObject subIndex="01" name="Output" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="02" name="Output" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="03" name="Output" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="04" name="Output" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="05" name="Output" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="06" name="Output" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="07" name="Output" objectType="7" defaultValue="0"/>
+      <CANopenSubObject subIndex="08" name="Output" objectType="7" defaultValue="0"/>
+    </CANopenObject>
+  </CANopenObjectList>
+  <other>
+    <file fileName="CANopenSocket" fileCreator="JP" fileCreationDate="2016-07-26" fileCreationTime="12:05:34" fileVersion="-"/>
+    <DeviceIdentity>
+      <vendorName>CANopenNode</vendorName>
+      <productName>CANopenNode</productName>
+      <productText>
+        <label lang="en">CANopenNode</label>
+        <description lang="en" URI="http://canopennode.sourceforge.net">CANopenNode is an open source software stack used for serial communication of multiple devices over the CAN/CANopen Network.</description>
+      </productText>
+    </DeviceIdentity>
+    <capabilities>
+      <characteristicsList>
+        <characteristic>
+          <characteristicName>
+            <label lang="en"/>
+          </characteristicName>
+          <characteristicContent>
+            <label lang="en"/>
+          </characteristicContent>
+        </characteristic>
+      </characteristicsList>
+    </capabilities>
+    <baudRate>
+      <supportedBaudRate value="10 Kbps"/>
+      <supportedBaudRate value="20 Kbps"/>
+      <supportedBaudRate value="50 Kbps"/>
+      <supportedBaudRate value="125 Kbps"/>
+      <supportedBaudRate value="250 Kbps"/>
+      <supportedBaudRate value="500 Kbps"/>
+      <supportedBaudRate value="800 Kbps"/>
+      <supportedBaudRate value="1000 Kbps"/>
+    </baudRate>
+    <dummyUsage>
+      <dummy entry="Dummy0001=0"/>
+      <dummy entry="Dummy0002=1"/>
+      <dummy entry="Dummy0003=1"/>
+      <dummy entry="Dummy0004=1"/>
+      <dummy entry="Dummy0005=1"/>
+      <dummy entry="Dummy0006=1"/>
+      <dummy entry="Dummy0007=1"/>
+    </dummyUsage>
+  </other>
+</device>
diff --git a/canopend/od4_storage b/canopend/od4_storage
deleted file mode 100644
index 39cdd0d..0000000
--- a/canopend/od4_storage
+++ /dev/null
@@ -1 +0,0 @@
--
diff --git a/canopend/od4_storage_auto b/canopend/od4_storage_auto
deleted file mode 100644
index 48d19cc..0000000
Binary files a/canopend/od4_storage_auto and /dev/null differ
diff --git a/canopend/src/CO_LSS_master.c b/canopend/src/CO_LSS_master.c
new file mode 100644
index 0000000..4b10f69
--- /dev/null
+++ b/canopend/src/CO_LSS_master.c
@@ -0,0 +1,478 @@
+/*
+ * CANopen LSS master functions
+ *
+ * @file        CO_LSS_master.c
+ * @author      Janez Paternoster, Martin Wagner
+ * @copyright   2015 Janez Paternoster, 2017 Neuberger Gebäudeautomation GmbH
+ *
+ * This file is part of CANopenSocket, a Linux implementation of CANopen
+ * stack with master functionality. Project home page is
+ * <https://github.com/CANopenNode/CANopenSocket>. CANopenSocket is based
+ * on CANopenNode: <https://github.com/CANopenNode/CANopenNode>.
+ *
+ * CANopenSocket is free and open source software: you can redistribute
+ * it and/or modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation, either version 2 of the
+ * License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program. If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#include <string.h>
+
+#include "CO_LSS_master.h"
+
+
+/******************************************************************************/
+int lssSwitchStateSelect(
+        CO_LSSmaster_t *LSSmaster,
+        bool_t          global,
+        uint32_t        vendorId,
+        uint32_t        productCode,
+        uint32_t        revisionNo,
+        uint32_t        serialNo)
+{
+    uint16_t timer1ms;
+    uint16_t timer1msDiff;
+    uint16_t timer1msPrev;
+    CO_LSSmaster_return_t ret;
+    CO_LSS_address_t lssAddress;
+    CO_LSS_address_t *p;
+    struct timespec sleepTime;
+
+    /* stay here, if CAN is not configured */
+    pthread_mutex_lock(&CO_CAN_VALID_mtx);
+
+    /* Fill LSS address struct */
+    if (global != true) {
+      lssAddress.vendorID = vendorId;
+      lssAddress.productCode = productCode;
+      lssAddress.revisionNumber = revisionNo;
+      lssAddress.serialNumber = serialNo;
+      p = &lssAddress;
+    }
+    else {
+      p = NULL;
+    }
+
+    /* Select Slave. Loop in 10 ms intervals. */
+
+    timer1msPrev = CO_timer1ms;
+    sleepTime.tv_sec = 0;
+    sleepTime.tv_nsec = 10000000;
+
+    timer1msDiff = 0;
+    do {
+        ret = CO_LSSmaster_switchStateSelect(LSSmaster, timer1msDiff, p);
+        if (ret != CO_LSSmaster_WAIT_SLAVE) {
+            break;
+        }
+
+        /* Calculate time difference */
+        timer1ms = CO_timer1ms;
+        timer1msDiff = timer1ms - timer1msPrev;
+        timer1msPrev = timer1ms;
+        nanosleep(&sleepTime, NULL);
+    } while(1);
+
+    pthread_mutex_unlock(&CO_CAN_VALID_mtx);
+
+    return ret;
+}
+
+
+int lssSwitchStateDeselect(
+        CO_LSSmaster_t *LSSmaster)
+{
+    CO_LSSmaster_return_t ret;
+
+    /* stay here, if CAN is not configured */
+    pthread_mutex_lock(&CO_CAN_VALID_mtx);
+
+    ret = CO_LSSmaster_switchStateDeselect(LSSmaster);
+
+    pthread_mutex_unlock(&CO_CAN_VALID_mtx);
+
+    return ret;
+}
+
+
+int lssConfigureBitTiming(
+        CO_LSSmaster_t *LSSmaster,
+        uint16_t         bit)
+{
+    uint16_t timer1ms;
+    uint16_t timer1msDiff;
+    uint16_t timer1msPrev;
+    CO_LSSmaster_return_t ret;
+    struct timespec sleepTime;
+
+    /* stay here, if CAN is not configured */
+    pthread_mutex_lock(&CO_CAN_VALID_mtx);
+
+    /* convert table to numbers */
+    bit = CO_LSS_bitTimingTableLookup[bit];
+
+    /* Configure Slave. Loop in 10 ms intervals. */
+
+    timer1msPrev = CO_timer1ms;
+    sleepTime.tv_sec = 0;
+    sleepTime.tv_nsec = 10000000;
+
+    timer1msDiff = 0;
+    do {
+        ret = CO_LSSmaster_configureBitTiming(LSSmaster, timer1msDiff, bit);
+        if (ret != CO_LSSmaster_WAIT_SLAVE) {
+            break;
+        }
+
+        /* Calculate time difference */
+        timer1ms = CO_timer1ms;
+        timer1msDiff = timer1ms - timer1msPrev;
+        timer1msPrev = timer1ms;
+        nanosleep(&sleepTime, NULL);
+    } while(1);
+
+    pthread_mutex_unlock(&CO_CAN_VALID_mtx);
+
+    return ret;
+}
+
+
+int lssConfigureNodeId(
+        CO_LSSmaster_t *LSSmaster,
+        uint8_t         nodeId)
+{
+    uint16_t timer1ms;
+    uint16_t timer1msDiff;
+    uint16_t timer1msPrev;
+    CO_LSSmaster_return_t ret;
+    struct timespec sleepTime;
+
+    /* stay here, if CAN is not configured */
+    pthread_mutex_lock(&CO_CAN_VALID_mtx);
+
+    /* Configure Slave. Loop in 10 ms intervals. */
+
+    timer1msPrev = CO_timer1ms;
+    sleepTime.tv_sec = 0;
+    sleepTime.tv_nsec = 10000000;
+
+    timer1msDiff = 0;
+    do {
+        ret = CO_LSSmaster_configureNodeId(LSSmaster, timer1msDiff, nodeId);
+        if (ret != CO_LSSmaster_WAIT_SLAVE) {
+            break;
+        }
+
+        /* Calculate time difference */
+        timer1ms = CO_timer1ms;
+        timer1msDiff = timer1ms - timer1msPrev;
+        timer1msPrev = timer1ms;
+        nanosleep(&sleepTime, NULL);
+    } while(1);
+
+    pthread_mutex_unlock(&CO_CAN_VALID_mtx);
+
+    return ret;
+}
+
+
+int lssConfigureStore(
+        CO_LSSmaster_t *LSSmaster)
+{
+    uint16_t timer1ms;
+    uint16_t timer1msDiff;
+    uint16_t timer1msPrev;
+    CO_LSSmaster_return_t ret;
+    struct timespec sleepTime;
+
+    /* stay here, if CAN is not configured */
+    pthread_mutex_lock(&CO_CAN_VALID_mtx);
+
+    /* Configure Slave. Loop in 10 ms intervals. */
+
+    timer1msPrev = CO_timer1ms;
+    sleepTime.tv_sec = 0;
+    sleepTime.tv_nsec = 10000000;
+
+    timer1msDiff = 0;
+    do {
+        ret = CO_LSSmaster_configureStore(LSSmaster, timer1msDiff);
+        if (ret != CO_LSSmaster_WAIT_SLAVE) {
+            break;
+        }
+
+        /* Calculate time difference */
+        timer1ms = CO_timer1ms;
+        timer1msDiff = timer1ms - timer1msPrev;
+        timer1msPrev = timer1ms;
+        nanosleep(&sleepTime, NULL);
+    } while(1);
+
+    pthread_mutex_unlock(&CO_CAN_VALID_mtx);
+
+    return ret;
+}
+
+
+int lssActivateBit(
+        CO_LSSmaster_t *LSSmaster,
+        uint16_t        switchDelay_ms)
+{
+    CO_LSSmaster_return_t ret;
+    struct timespec sleepTime;
+
+    /* stay here, if CAN is not configured */
+    pthread_mutex_lock(&CO_CAN_VALID_mtx);
+
+    ret = CO_LSSmaster_ActivateBit(LSSmaster, switchDelay_ms);
+    if (ret == CO_LSSmaster_OK) {
+        /* Sleep until switchover is finished */
+        sleepTime.tv_sec = 0;
+        sleepTime.tv_nsec = switchDelay_ms * 1000000 * 2;
+        nanosleep(&sleepTime, NULL);
+    }
+
+    pthread_mutex_unlock(&CO_CAN_VALID_mtx);
+
+    return ret;
+}
+
+
+int lssInquireLssAddress(
+        CO_LSSmaster_t *LSSmaster,
+        uint32_t       *vendorId,
+        uint32_t       *productCode,
+        uint32_t       *revisionNo,
+        uint32_t       *serialNo)
+{
+    uint16_t timer1ms;
+    uint16_t timer1msDiff;
+    uint16_t timer1msPrev;
+    CO_LSSmaster_return_t ret;
+    CO_LSS_address_t lssAddress;
+    struct timespec sleepTime;
+
+    /* stay here, if CAN is not configured */
+    pthread_mutex_lock(&CO_CAN_VALID_mtx);
+
+    /* Read value. Loop in 10 ms intervals. */
+
+    timer1msPrev = CO_timer1ms;
+    sleepTime.tv_sec = 0;
+    sleepTime.tv_nsec = 10000000;
+
+    timer1msDiff = 0;
+    do {
+        ret = CO_LSSmaster_InquireLssAddress(LSSmaster, timer1msDiff, &lssAddress);
+        if (ret != CO_LSSmaster_WAIT_SLAVE) {
+            break;
+        }
+
+        /* Calculate time difference */
+        timer1ms = CO_timer1ms;
+        timer1msDiff = timer1ms - timer1msPrev;
+        timer1msPrev = timer1ms;
+        nanosleep(&sleepTime, NULL);
+    } while(1);
+
+    /* Fill LSS address struct */
+    *vendorId = lssAddress.vendorID;
+    *productCode = lssAddress.productCode;
+    *revisionNo = lssAddress.revisionNumber;
+    *serialNo = lssAddress.serialNumber;
+
+    pthread_mutex_unlock(&CO_CAN_VALID_mtx);
+
+    return ret;
+}
+
+
+int lssInquireNodeId(
+        CO_LSSmaster_t *LSSmaster,
+        uint8_t        *nodeId)
+{
+    uint16_t timer1ms;
+    uint16_t timer1msDiff;
+    uint16_t timer1msPrev;
+    CO_LSSmaster_return_t ret;
+    struct timespec sleepTime;
+
+    /* stay here, if CAN is not configured */
+    pthread_mutex_lock(&CO_CAN_VALID_mtx);
+
+    /* Read value. Loop in 10 ms intervals. */
+
+    timer1msPrev = CO_timer1ms;
+    sleepTime.tv_sec = 0;
+    sleepTime.tv_nsec = 10000000;
+
+    timer1msDiff = 0;
+    do {
+        ret = CO_LSSmaster_InquireNodeId(LSSmaster, timer1msDiff, nodeId);
+        if (ret != CO_LSSmaster_WAIT_SLAVE) {
+            break;
+        }
+
+        /* Calculate time difference */
+        timer1ms = CO_timer1ms;
+        timer1msDiff = timer1ms - timer1msPrev;
+        timer1msPrev = timer1ms;
+        nanosleep(&sleepTime, NULL);
+    } while(1);
+
+    pthread_mutex_unlock(&CO_CAN_VALID_mtx);
+
+    return ret;
+}
+
+
+int lssIdentifyFastscan(
+        CO_LSSmaster_t *LSSmaster,
+        uint16_t        timeout_ms,
+        uint8_t         scanVendorId,
+        uint32_t       *vendorId,
+        uint8_t         scanProductCode,
+        uint32_t       *productCode,
+        uint8_t         scanRevisionNumber,
+        uint32_t       *revisionNo,
+        uint8_t         scanSerialNo,
+        uint32_t       *serialNo)
+{
+    uint16_t timer1ms;
+    uint16_t timer1msDiff;
+    uint16_t timer1msPrev;
+    CO_LSSmaster_return_t ret;
+    struct timespec sleepTime;
+    CO_LSSmaster_fastscan_t fastscan;
+
+    /* stay here, if CAN is not configured */
+    pthread_mutex_lock(&CO_CAN_VALID_mtx);
+
+    fastscan.scan[CO_LSS_FASTSCAN_VENDOR_ID] = scanVendorId;
+    fastscan.match.vendorID = *vendorId;
+    fastscan.scan[CO_LSS_FASTSCAN_PRODUCT] = scanProductCode;
+    fastscan.match.productCode = *productCode;
+    fastscan.scan[CO_LSS_FASTSCAN_REV] = scanRevisionNumber;
+    fastscan.match.revisionNumber = *revisionNo;
+    fastscan.scan[CO_LSS_FASTSCAN_SERIAL] = scanSerialNo;
+    fastscan.match.serialNumber = *serialNo;
+    /* Do scan. Loop in 5 ms intervals. */
+
+    timer1msPrev = CO_timer1ms;
+    sleepTime.tv_sec = 0;
+    sleepTime.tv_nsec = 5000000;
+
+    CO_LSSmaster_changeTimeout(LSSmaster, timeout_ms);
+
+    timer1msDiff = 0;
+    do {
+        ret = CO_LSSmaster_IdentifyFastscan(LSSmaster, timer1msDiff, &fastscan);
+        if (ret != CO_LSSmaster_WAIT_SLAVE) {
+            break;
+        }
+
+        /* Calculate time difference */
+        timer1ms = CO_timer1ms;
+        timer1msDiff = timer1ms - timer1msPrev;
+        timer1msPrev = timer1ms;
+        nanosleep(&sleepTime, NULL);
+    } while(1);
+
+    CO_LSSmaster_changeTimeout(LSSmaster, CO_LSSmaster_DEFAULT_TIMEOUT);
+
+    *vendorId = fastscan.found.vendorID;
+    *productCode = fastscan.found.productCode;
+    *revisionNo = fastscan.found.revisionNumber;
+    *serialNo = fastscan.found.serialNumber;
+
+    pthread_mutex_unlock(&CO_CAN_VALID_mtx);
+
+    return ret;
+}
+
+
+int lssEnumerateFastscan(
+        CO_LSSmaster_t *LSSmaster,
+        uint16_t        timeout_ms,
+        uint8_t         nodeId,
+        uint8_t        *nodeCount,
+        bool_t          store,
+        uint8_t         scanVendorId,
+        uint32_t        vendorId,
+        uint8_t         scanProductCode,
+        uint32_t        productCode,
+        uint8_t         scanRevisionNumber,
+        uint32_t        revisionNo,
+        uint8_t         scanSerialNo,
+        uint32_t        serialNo)
+{
+    CO_LSSmaster_return_t ret;
+    /* scanning changes those values */
+    uint32_t tmpVendorId;
+    uint32_t tmpProductCode;
+    uint32_t tmpRevisionNo;
+    uint32_t tmpSerialNo;
+
+    /* we scan until no more nodes are found that match the scanning request */
+    *nodeCount = 0;
+    do {
+        /* If we can't assing more node IDs, quit scanning */
+        if (nodeId > 127) {
+            nodeId = 127;
+            ret = CO_LSSmaster_OK;
+            break;
+        }
+
+        /* scanning changes those values */
+        tmpVendorId = vendorId;
+        tmpProductCode = productCode;
+        tmpRevisionNo = revisionNo;
+        tmpSerialNo = serialNo;
+
+        ret = lssIdentifyFastscan(LSSmaster, timeout_ms,
+                  scanVendorId, &tmpVendorId,
+                  scanProductCode, &tmpProductCode,
+                  scanRevisionNumber, &tmpRevisionNo,
+                  scanSerialNo, &tmpSerialNo);
+        if (ret == CO_LSSmaster_SCAN_NOACK) {
+            /* no (more) nodes found */
+            ret = CO_LSSmaster_OK;
+            break;
+        }
+        else if (ret != CO_LSSmaster_SCAN_FINISHED) {
+            /* error occured */
+            break;
+        }
+
+        ret = lssConfigureNodeId(LSSmaster, nodeId);
+        if (ret != CO_LSSmaster_OK) {
+            break;
+        }
+
+        if (store == true) {
+            ret = lssConfigureStore(LSSmaster);
+            if (ret != CO_LSSmaster_OK) {
+                break;
+            }
+        }
+
+        ret = lssSwitchStateDeselect(LSSmaster);
+        if (ret != CO_LSSmaster_OK) {
+            break;
+        }
+
+        nodeId ++;
+        (*nodeCount) ++;
+    } while(1);
+
+    return ret;
+}
+
diff --git a/canopend/src/CO_LSS_master.h b/canopend/src/CO_LSS_master.h
new file mode 100644
index 0000000..50d6146
--- /dev/null
+++ b/canopend/src/CO_LSS_master.h
@@ -0,0 +1,249 @@
+/**
+ * CANopen LSS master functions
+ *
+ * @file        CO_LSS_master.h
+ * @author      Janez Paternoster, Martin Wagner
+ * @copyright   2015 Janez Paternoster, 2017 Neuberger Gebäudeautomation GmbH
+ *
+ * This file is part of CANopenSocket, a Linux implementation of CANopen
+ * stack with master functionality. Project home page is
+ * <https://github.com/CANopenNode/CANopenSocket>. CANopenSocket is based
+ * on CANopenNode: <https://github.com/CANopenNode/CANopenNode>.
+ *
+ * CANopenSocket is free and open source software: you can redistribute
+ * it and/or modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation, either version 2 of the
+ * License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program. If not, see <http://www.gnu.org/licenses/>.
+ */
+
+
+#ifndef CO_LSS_MASTER_H
+#define CO_LSS_MASTER_H
+
+#include "CANopen.h"
+#include "CO_LSSmaster.h"
+
+#include "CO_driver.h"
+#include <pthread.h>
+
+
+extern pthread_mutex_t CO_CAN_VALID_mtx; /* from main */
+extern volatile uint16_t CO_timer1ms;    /* from main */
+
+/**
+ * Request LSS switch state select.
+ *
+ * For further details see CANopenNode/stack/CO_LSSmaster.h file.
+ * This is blocking function.
+ *
+ * @param LSSmaster Pointer to CANopen LSS client object.
+ * @param global do global select if #true
+ * @param vendorId LSS address vendor ID
+ * @param productCode LSS address product code
+ * @param revisionNo LSS address software revision number
+ * @param serialNo LSS address device serial number
+ * @return 0 on success, others see #CO_LSSmaster_return_t
+ */
+int lssSwitchStateSelect(
+        CO_LSSmaster_t *LSSmaster,
+        bool_t          global,
+        uint32_t        vendorId,
+        uint32_t        productCode,
+        uint32_t        revisionNo,
+        uint32_t        serialNo);
+
+/**
+ * Request LSS switch state deselect.
+ *
+ * For further details see CANopenNode/stack/CO_LSSmaster.h file.
+ *
+ * @param LSSmaster Pointer to CANopen LSS client object.
+ * @return 0 on success, others see #CO_LSSmaster_return_t
+ */
+int lssSwitchStateDeselect(
+        CO_LSSmaster_t *LSSmaster);
+
+
+/**
+ * Request LSS configure Bit Timing
+ *
+ * For further details see CANopenNode/stack/CO_LSSmaster.h file.
+ * This is blocking function.
+ *
+ * @param LSSmaster Pointer to CANopen LSS client object.
+ * @param bit bit rate entry from CiA301 bit timing table
+ * @return 0 on success, others see #CO_LSSmaster_return_t
+ */
+int lssConfigureBitTiming(
+        CO_LSSmaster_t *LSSmaster,
+        uint16_t        bit);
+
+
+/**
+ * Request LSS configure node ID
+ *
+ * For further details see CANopenNode/stack/CO_LSSmaster.h file.
+ * This is blocking function.
+ *
+ * @param LSSmaster Pointer to CANopen LSS client object.
+ * @param nodeId new node ID
+ * @return 0 on success, others see #CO_LSSmaster_return_t
+ */
+int lssConfigureNodeId(
+        CO_LSSmaster_t *LSSmaster,
+        uint8_t         nodeId);
+
+
+/**
+ * Request LSS configure node ID
+ *
+ * For further details see CANopenNode/stack/CO_LSSmaster.h file.
+ * This is blocking function.
+ *
+ * @param LSSmaster Pointer to CANopen LSS client object.
+ * @return 0 on success, others see #CO_LSSmaster_return_t
+ */
+int lssConfigureStore(
+        CO_LSSmaster_t *LSSmaster);
+
+
+/**
+ * Request LSS activate bit timing
+ *
+ * For further details see CANopenNode/stack/CO_LSSmaster.h file.
+ * This is blocking function.
+ *
+ * @param LSSmaster Pointer to CANopen LSS client object.
+ * @return 0 on success, others see #CO_LSSmaster_return_t
+ */
+int lssActivateBit(
+        CO_LSSmaster_t *LSSmaster,
+        uint16_t        switchDelay_ms);
+
+
+/**
+ * Request LSS inquire LSS address
+ *
+ * For further details see CANopenNode/stack/CO_LSSmaster.h file.
+ * This is blocking function.
+ *
+ * @param LSSmaster Pointer to CANopen LSS client object.
+ * @param vendorId [out] LSS address vendor ID
+ * @param productCode [out] LSS address product code
+ * @param revisionNo [out] LSS address software revision number
+ * @param serialNo [out] LSS address device serial number
+ * @return 0 on success, others see #CO_LSSmaster_return_t
+ */
+int lssInquireLssAddress(
+        CO_LSSmaster_t *LSSmaster,
+        uint32_t       *vendorId,
+        uint32_t       *productCode,
+        uint32_t       *revisionNo,
+        uint32_t       *serialNo);
+
+
+
+/**
+ * Request LSS inquire node ID
+ *
+ * For further details see CANopenNode/stack/CO_LSSmaster.h file.
+ * This is blocking function.
+ *
+ * @param LSSmaster Pointer to CANopen LSS client object.
+ * @param nodeId [out] CANopen Node ID
+ * @return 0 on success, others see #CO_LSSmaster_return_t
+ */
+int lssInquireNodeId(
+        CO_LSSmaster_t *LSSmaster,
+        uint8_t        *nodeId);
+
+/**
+ * Request LSS identify fastscan
+ *
+ * If this function returns successfully one node is selected and waiting
+ * for commands. There is no further selection available
+ *
+ * For further details see CANopenNode/stack/CO_LSSmaster.h file.
+ * This is blocking function.
+ *
+ * @param LSSmaster Pointer to CANopen LSS client object.
+ * @param timeout_ms LSS master timeout.
+ * @param scanVendorId see #CO_LSSmaster_scantype_t
+ * @param vendorId [in] [out] (found) LSS address vendor ID
+ * @param scanProductCode see #CO_LSSmaster_scantype_t
+ * @param productCode [in] [out] (found) LSS address product code
+ * @param scanRevisionNumber see #CO_LSSmaster_scantype_t
+ * @param revisionNo [in] [out] (found) LSS address software revision number
+ * @param scanSerialNo see #CO_LSSmaster_scantype_t
+ * @param serialNo [in] [out] (found) LSS address device serial number
+ * @return CO_LSSmaster_SCAN_FINISHED on success, others see
+ * #CO_LSSmaster_return_t
+ */
+int lssIdentifyFastscan(
+        CO_LSSmaster_t *LSSmaster,
+        uint16_t        timeout_ms,
+        uint8_t         scanVendorId,
+        uint32_t       *vendorId,
+        uint8_t         scanProductCode,
+        uint32_t       *productCode,
+        uint8_t         scanRevisionNumber,
+        uint32_t       *revisionNo,
+        uint8_t         scanSerialNo,
+        uint32_t       *serialNo);
+
+/**
+ * Request node enumeration by LSS identify fastscan
+ *
+ * This initiates node enumeration by the means of LSS fastscan mechanism.
+ * When this function is finished
+ * - all nodes that match the given criteria are assigned a node ID beginning
+ *   with #nodeId. If 127 is reached, the assignment process is stopped, no
+ *   matter if there are nodes remaining or not.
+ * - no IDs are assigned because the given criteria do not match any node
+ * - no IDs are assigned because all nodes are already configured
+ *
+ * This function needs that no node is selected when starting the scan process.
+ *
+ * This is blocking function.
+ *
+ * @param LSSmaster Pointer to CANopen LSS client object.
+ * @param timeout_ms LSS master timeout.
+ * @param nodeId ID to assign to the first found node
+ * @param nodeCount [out] number of found nodes
+ * @param store if set to "true",  LSS store configuration command is executed
+ * @param scanVendorId see #CO_LSSmaster_scantype_t
+ * @param vendorId LSS address vendor ID
+ * @param scanProductCode see #CO_LSSmaster_scantype_t
+ * @param productCode LSS address product code
+ * @param scanRevisionNumber see #CO_LSSmaster_scantype_t
+ * @param revisionNo LSS address software revision number
+ * @param scanSerialNo see #CO_LSSmaster_scantype_t
+ * @param serialNo LSS address device serial number
+ * @return 0 on success, others see #CO_LSSmaster_return_t
+ */
+int lssEnumerateFastscan(
+        CO_LSSmaster_t *LSSmaster,
+        uint16_t        timeout_ms,
+        uint8_t         nodeId,
+        uint8_t        *nodeCount,
+        bool_t          store,
+        uint8_t         scanVendorId,
+        uint32_t        vendorId,
+        uint8_t         scanProductCode,
+        uint32_t        productCode,
+        uint8_t         scanRevisionNumber,
+        uint32_t        revisionNo,
+        uint8_t         scanSerialNo,
+        uint32_t        serialNo);
+
+
+
+#endif
diff --git a/canopend/src/CO_comm_helpers.c b/canopend/src/CO_comm_helpers.c
index 61086d0..7443892 100644
--- a/canopend/src/CO_comm_helpers.c
+++ b/canopend/src/CO_comm_helpers.c
@@ -31,6 +31,7 @@
 #include <string.h>
 #include <limits.h>
 #include <ctype.h>
+#include <inttypes.h>
 
 
 const char spaceDelim[] = " \t\n\r\f\v";
@@ -53,7 +54,7 @@ int dtpHex(char *strout, int stroutSize, char* bufSdo, int bufLen) {
         if(len >= stroutSize) {
             break;
         }
-        out += sprintf(out, "%02hhX ", bufSdo[i]);
+        out += sprintf(out, "%02"PRIX8" ", (uint8_t)bufSdo[i]);
     }
 
     len = strlen(strout);
@@ -94,16 +95,16 @@ static int dtpStr(char *strout, int stroutSize, char* bufSdo, int bufLen) {
     return n;
 }
 
-static int dtpU8 (char *strout, int stroutSize, char* bufSdo, int bufLen) {uint8_t   num; memcpy(&num, bufSdo, 1);      return sprintf(strout, "0x%02hhX", num);}
-static int dtpU16(char *strout, int stroutSize, char* bufSdo, int bufLen) {uint16_t  num; CO_memcpySwap2(&num, bufSdo); return sprintf(strout, "0x%04hX",  num);}
-static int dtpU32(char *strout, int stroutSize, char* bufSdo, int bufLen) {uint32_t  num; CO_memcpySwap4(&num, bufSdo); return sprintf(strout, "0x%08X",   num);}
-static int dtpU64(char *strout, int stroutSize, char* bufSdo, int bufLen) {uint64_t  num; CO_memcpySwap8(&num, bufSdo); return sprintf(strout, "0x%016lX", num);}
-static int dtpI8 (char *strout, int stroutSize, char* bufSdo, int bufLen) {int8_t    num; memcpy(&num, bufSdo, 1);      return sprintf(strout, "%hhd",     num);}
-static int dtpI16(char *strout, int stroutSize, char* bufSdo, int bufLen) {int16_t   num; CO_memcpySwap2(&num, bufSdo); return sprintf(strout, "%hd",      num);}
-static int dtpI32(char *strout, int stroutSize, char* bufSdo, int bufLen) {int32_t   num; CO_memcpySwap4(&num, bufSdo); return sprintf(strout, "%d",       num);}
-static int dtpI64(char *strout, int stroutSize, char* bufSdo, int bufLen) {int64_t   num; CO_memcpySwap8(&num, bufSdo); return sprintf(strout, "%ld",      num);}
-static int dtpR32(char *strout, int stroutSize, char* bufSdo, int bufLen) {float32_t num; CO_memcpySwap4(&num, bufSdo); return sprintf(strout, "%g",       num);}
-static int dtpR64(char *strout, int stroutSize, char* bufSdo, int bufLen) {float64_t num; CO_memcpySwap8(&num, bufSdo); return sprintf(strout, "%g",       num);}
+static int dtpU8 (char *strout, int stroutSize, char* bufSdo, int bufLen) {uint8_t   num; memcpy(&num, bufSdo, 1);      return sprintf(strout, "0x%02"PRIX8   ,num);}
+static int dtpU16(char *strout, int stroutSize, char* bufSdo, int bufLen) {uint16_t  num; CO_memcpySwap2(&num, bufSdo); return sprintf(strout, "0x%04"PRIX16  ,num);}
+static int dtpU32(char *strout, int stroutSize, char* bufSdo, int bufLen) {uint32_t  num; CO_memcpySwap4(&num, bufSdo); return sprintf(strout, "0x%08"PRIX32  ,num);}
+static int dtpU64(char *strout, int stroutSize, char* bufSdo, int bufLen) {uint64_t  num; CO_memcpySwap8(&num, bufSdo); return sprintf(strout, "0x%016"PRIX64 ,num);}
+static int dtpI8 (char *strout, int stroutSize, char* bufSdo, int bufLen) {int8_t    num; memcpy(&num, bufSdo, 1);      return sprintf(strout, "%"PRId8       ,num);}
+static int dtpI16(char *strout, int stroutSize, char* bufSdo, int bufLen) {int16_t   num; CO_memcpySwap2(&num, bufSdo); return sprintf(strout, "%"PRId16      ,num);}
+static int dtpI32(char *strout, int stroutSize, char* bufSdo, int bufLen) {int32_t   num; CO_memcpySwap4(&num, bufSdo); return sprintf(strout, "%"PRId32      ,num);}
+static int dtpI64(char *strout, int stroutSize, char* bufSdo, int bufLen) {int64_t   num; CO_memcpySwap8(&num, bufSdo); return sprintf(strout, "%"PRId64      ,num);}
+static int dtpR32(char *strout, int stroutSize, char* bufSdo, int bufLen) {float32_t num; CO_memcpySwap4(&num, bufSdo); return sprintf(strout, "%g"           ,num);}
+static int dtpR64(char *strout, int stroutSize, char* bufSdo, int bufLen) {float64_t num; CO_memcpySwap8(&num, bufSdo); return sprintf(strout, "%g"           ,num);}
 
 
 /******************************************************************************/
@@ -204,16 +205,16 @@ static int dtsStr(char* bufSdo, int bufSdoSize, char *strin) {
     return out;
 }
 
-static int dtsU8 (char* bufSdo, int bufSdoSize, char *strin) {int err = 0; uint8_t   num = (uint8_t) getU32(strin, 0,        UCHAR_MAX, &err); if(err != 0) return 0; memcpy(bufSdo, &num, 1);      return 1;}
-static int dtsU16(char* bufSdo, int bufSdoSize, char *strin) {int err = 0; uint16_t  num = (uint16_t)getU32(strin, 0,        USHRT_MAX, &err); if(err != 0) return 0; CO_memcpySwap2(bufSdo, &num); return 2;}
-static int dtsU32(char* bufSdo, int bufSdoSize, char *strin) {int err = 0; uint32_t  num =           getU64(strin, 0,        UINT_MAX,  &err); if(err != 0) return 0; CO_memcpySwap4(bufSdo, &num); return 4;}
-static int dtsU64(char* bufSdo, int bufSdoSize, char *strin) {int err = 0; uint64_t  num =           getU64(strin, 0,        ULONG_MAX, &err); if(err != 0) return 0; CO_memcpySwap8(bufSdo, &num); return 8;}
-static int dtsI8 (char* bufSdo, int bufSdoSize, char *strin) {int err = 0; int8_t    num = (int8_t)  getI32(strin, CHAR_MIN, CHAR_MAX,  &err); if(err != 0) return 0; memcpy(bufSdo, &num, 1);      return 1;}
-static int dtsI16(char* bufSdo, int bufSdoSize, char *strin) {int err = 0; int16_t   num = (int16_t) getI32(strin, SHRT_MIN, SHRT_MAX,  &err); if(err != 0) return 0; CO_memcpySwap2(bufSdo, &num); return 2;}
-static int dtsI32(char* bufSdo, int bufSdoSize, char *strin) {int err = 0; int32_t   num =           getI64(strin, INT_MIN,  INT_MAX,   &err); if(err != 0) return 0; CO_memcpySwap4(bufSdo, &num); return 4;}
-static int dtsI64(char* bufSdo, int bufSdoSize, char *strin) {int err = 0; int64_t   num =           getI64(strin, LONG_MIN, LONG_MAX,  &err); if(err != 0) return 0; CO_memcpySwap8(bufSdo, &num); return 8;}
-static int dtsR32(char* bufSdo, int bufSdoSize, char *strin) {int err = 0; float32_t num =           getR32(strin,                      &err); if(err != 0) return 0; CO_memcpySwap4(bufSdo, &num); return 4;}
-static int dtsR64(char* bufSdo, int bufSdoSize, char *strin) {int err = 0; float64_t num =           getR64(strin,                      &err); if(err != 0) return 0; CO_memcpySwap8(bufSdo, &num); return 8;}
+static int dtsU8 (char* bufSdo, int bufSdoSize, char *strin) {int err = 0; uint8_t   num = (uint8_t) getU32(strin, 0,         UINT8_MAX,  &err); if(err != 0) return 0; memcpy(bufSdo, &num, 1);      return 1;}
+static int dtsU16(char* bufSdo, int bufSdoSize, char *strin) {int err = 0; uint16_t  num = (uint16_t)getU32(strin, 0,         UINT16_MAX, &err); if(err != 0) return 0; CO_memcpySwap2(bufSdo, &num); return 2;}
+static int dtsU32(char* bufSdo, int bufSdoSize, char *strin) {int err = 0; uint32_t  num =           getU64(strin, 0,         UINT32_MAX, &err); if(err != 0) return 0; CO_memcpySwap4(bufSdo, &num); return 4;}
+static int dtsU64(char* bufSdo, int bufSdoSize, char *strin) {int err = 0; uint64_t  num =           getU64(strin, 0,         UINT64_MAX, &err); if(err != 0) return 0; CO_memcpySwap8(bufSdo, &num); return 8;}
+static int dtsI8 (char* bufSdo, int bufSdoSize, char *strin) {int err = 0; int8_t    num = (int8_t)  getI32(strin, INT8_MIN,  INT8_MAX,   &err); if(err != 0) return 0; memcpy(bufSdo, &num, 1);      return 1;}
+static int dtsI16(char* bufSdo, int bufSdoSize, char *strin) {int err = 0; int16_t   num = (int16_t) getI32(strin, INT16_MIN, INT16_MAX,  &err); if(err != 0) return 0; CO_memcpySwap2(bufSdo, &num); return 2;}
+static int dtsI32(char* bufSdo, int bufSdoSize, char *strin) {int err = 0; int32_t   num =           getI64(strin, INT32_MIN, INT32_MAX,  &err); if(err != 0) return 0; CO_memcpySwap4(bufSdo, &num); return 4;}
+static int dtsI64(char* bufSdo, int bufSdoSize, char *strin) {int err = 0; int64_t   num =           getI64(strin, INT64_MIN, INT64_MAX,  &err); if(err != 0) return 0; CO_memcpySwap8(bufSdo, &num); return 8;}
+static int dtsR32(char* bufSdo, int bufSdoSize, char *strin) {int err = 0; float32_t num =           getR32(strin,                        &err); if(err != 0) return 0; CO_memcpySwap4(bufSdo, &num); return 4;}
+static int dtsR64(char* bufSdo, int bufSdoSize, char *strin) {int err = 0; float64_t num =           getR64(strin,                        &err); if(err != 0) return 0; CO_memcpySwap8(bufSdo, &num); return 8;}
 
 
 static const dataType_t dataTypes[] = {
diff --git a/canopend/src/CO_comm_helpers.h b/canopend/src/CO_comm_helpers.h
index ef62381..798c096 100644
--- a/canopend/src/CO_comm_helpers.h
+++ b/canopend/src/CO_comm_helpers.h
@@ -39,13 +39,19 @@ extern const char spaceDelim[];
 
 /** Response errors as specified by CiA 309-3. */
 typedef enum {
-     respErrorNone              = 0,
-     respErrorReqNotSupported   = 100,
-     respErrorSyntax            = 101,
-     respErrorInternalState     = 102,
-     respErrorNoDefaultNodeSet  = 105,
-     respErrorUnsupportedNet    = 106,
-     respErrorUnsupportedNode   = 107
+     respErrorNone                      = 0,
+     respErrorReqNotSupported           = 100,
+     respErrorSyntax                    = 101,
+     respErrorInternalState             = 102,
+     respErrorTimeOut                   = 103,
+     respErrorNoDefaultNodeSet          = 105,
+     respErrorUnsupportedNet            = 106,
+     respErrorUnsupportedNode           = 107,
+     respErrorLSSmanufacturer           = 501,
+     respErrorLSSnodeIdNotSupported     = 502,
+     respErrorLSSbitRateNotSupported    = 503,
+     respErrorLSSparameterStoringFailed = 504,
+     respErrorLSSmediaError             = 505
 } respErrorCode_t;
 
 
diff --git a/canopend/src/CO_command.c b/canopend/src/CO_command.c
index 9ac0670..4812810 100644
--- a/canopend/src/CO_command.c
+++ b/canopend/src/CO_command.c
@@ -29,6 +29,7 @@
 #include "CO_command.h"
 #include "CO_comm_helpers.h"
 #include "CO_master.h"
+#include "CO_LSS_master.h"
 #include <stdio.h>
 #include <stdlib.h>
 #include <unistd.h>
@@ -39,7 +40,6 @@
 #include <pthread.h>
 #include <sys/un.h>
 #include <sys/socket.h>
-#include <string.h>
 
 
 /* Maximum size of Object Dictionary variable transmitted via SDO. */
@@ -64,6 +64,7 @@ static uint16_t             comm_net = 1;   /* default CAN net number */
 static uint8_t              comm_node_default = 0xFF;  /* CANopen Node ID number is undefined at startup. */
 static uint16_t             SDOtimeoutTime = 500; /* Timeout time for SDO transfer in milliseconds, if no response */
 static uint8_t              blockTransferEnable = 0; /* SDO block transfer enabled? */
+static bool_t               tcpMode = false;
 static volatile int         endProgram = 0;
 
 
@@ -104,6 +105,49 @@ int CO_command_init(void) {
 }
 
 
+/******************************************************************************/
+int CO_command_init_tcp(in_port_t port) {
+    struct sockaddr_in addr;
+
+    if(CO == NULL || CO->SDOclient == NULL){
+        CO_errExit("CO_command_init - Wrong arguments");
+    }
+
+    /* Create, bind and listen socket */
+    fdSocket = socket(AF_INET, SOCK_STREAM, 0);
+    if(fdSocket == -1) {
+        CO_errExit("CO_command_init - socket failed");
+    }
+
+    const int yes = 1;
+    setsockopt(fdSocket, SOL_SOCKET, SO_REUSEADDR, &yes, sizeof(int));
+
+    memset(&addr, 0, sizeof(struct sockaddr_in));
+    addr.sin_family = AF_INET;
+    addr.sin_port = htons(port);
+    addr.sin_addr.s_addr = INADDR_ANY;
+    //strncpy(addr.sin_port, CO_command_socketPath, sizeof(addr.sin_port) - 1);
+
+    if(bind(fdSocket, (struct sockaddr *) &addr, sizeof(struct sockaddr_in)) == -1) {
+        fprintf(stderr, "Can't bind Socket to path '%s'\n", CO_command_socketPath);
+        CO_errExit("CO_command_init");
+    }
+
+    if(listen(fdSocket, LISTEN_BACKLOG) == -1) {
+        CO_errExit("CO_command_init - listen failed");
+    }
+
+    /* Create thread */
+    endProgram = 0;
+    if(pthread_create(&command_thread_id, NULL, command_thread, NULL) != 0) {
+        CO_errExit("CO_command_init - thread creation failed");
+    }
+
+    tcpMode = true;
+    return 0;
+}
+
+
 /******************************************************************************/
 int CO_command_clear(void) {
 
@@ -143,6 +187,41 @@ int CO_command_clear(void) {
     return 0;
 }
 
+/******************************************************************************/
+int CO_command_clear_tcp(in_port_t port) {
+
+    static struct sockaddr_in addr;
+    int fd;
+
+    endProgram = 1;
+
+    /* Establish a client socket connection to finish the command_thread. */
+    fd = socket(AF_INET, SOCK_STREAM, 0);
+    if(fd == -1) {
+        return -1;
+    }
+
+    memset(&addr, 0, sizeof(struct sockaddr_un));
+    addr.sin_family = AF_INET;
+    addr.sin_port = htons(port);
+    //addr.sin_addr.s_addr = INADDR_ANY;
+
+    if(connect(fd, (struct sockaddr *) &addr, sizeof(struct sockaddr_un)) == -1) {
+        return -1;
+    }
+
+    close(fd);
+
+    /* Wait for thread to finish. */
+    if(pthread_join(command_thread_id, NULL) != 0) {
+        return -1;
+    }
+
+    close(fdSocket);
+
+    return 0;
+}
+
 
 /******************************************************************************/
 static void* command_thread(void* arg) {
@@ -177,17 +256,10 @@ static void* command_thread(void* arg) {
 
     return NULL;
 }
-/******************************************************************************/
-static void* initNodes() {
 
-}
 
 /******************************************************************************/
-static void* homeCalibration(int nodeID) {
-}
-
-/******************************************************************************/
-static void command_process(int fd, char* command, size_t commandLength) {        
+static void command_process(int fd, char* command, size_t commandLength) {
     int err = 0; /* syntax or other error, true or false */
     int emptyLine = 0;
     char *token;
@@ -200,7 +272,7 @@ static void command_process(int fd, char* command, size_t commandLength) {
     respErrorCode_t respErrorCode = respErrorNone;
 
     uint32_t sequence = 0;
-    
+
 
     /* parse mandatory token '"["<sequence>"]"' */
     if((token = getTok(command, spaceDelim, &err)) == NULL) {
@@ -549,391 +621,317 @@ static void command_process(int fd, char* command, size_t commandLength) {
             }
         }
 
-        /* Unknown command */
-        else {
-            respErrorCode = respErrorReqNotSupported;
-            err = 1;
-        }
-    }
+        /* LSS command */
+        else if (strstr(token, "lss_") != NULL) {
+            err = 0;
+            respLen = 0;
 
+            /* Switch state global command */
+            if(strcmp(token, "lss_switch_glob") == 0) {
+                uint8_t select;
 
-    /* Generate error response (or leave empty line response) */
-    if(err != 0 && emptyLine == 0) {
-        if(respErrorCode == respErrorNone) {
-            respErrorCode = respErrorSyntax;
-        }
-        respLen = sprintf(resp, "[%d] ERROR: %d", sequence, respErrorCode);
-    }
-
-
-    /* Terminate string and send response */
-    resp[respLen++] = '\r';
-    resp[respLen++] = '\n';
-    resp[respLen++] = '\0';
-
-    if(write(fd, resp, respLen) != respLen) {
-        CO_error(0x15200000L);
-    }
-}
-/******************************************************************************/
-void cancomm_socketFree(char* command, char* ret) {
-    int err = 0; /* syntax or other error, true or false */
-    int emptyLine = 0;
-    char *token;
-    int i;
-    uint32_t ui[3];
-    uint8_t comm_node = 0xFF; /* undefined */
-
-    char resp[STRING_BUFFER_SIZE];
-    int respLen = 0;
-    respErrorCode_t respErrorCode = respErrorNone;
-
-    uint32_t sequence = 0;
-    
-
-    /* parse mandatory token '"["<sequence>"]"' */
-    if((token = getTok(command, spaceDelim, &err)) == NULL) {
-        /* If empty line, respond with empty line. */
-        emptyLine = 1;
-    }
-    if(err == 0) {
-        if(token[0] != '[' || token[strlen(token)-1] != ']') {
-            err = 1;
-            if(token[0] == '#') {
-                /* If comment, respond with empty line. */
-                emptyLine = 1;
-            }
-        }
-        else {
-            token[strlen(token)-1] = '\0';
-            sequence = getU32(token+1, 0, 0xFFFFFFFF, &err);
-        }
-    }
+                token = getTok(NULL, spaceDelim, &err);
+                select = (uint8_t)getU32(token, 0, 1, &err);
 
+                lastTok(NULL, spaceDelim, &err);
 
-    /* parse optional tokens '[[<net>] <node>]', both numerical. Then follows
-     *  mandatory token <command>, which is not numerical. */
-    if(err == 0) {
-        for(i=0; i<3; i++) {
-            if((token = getTok(NULL, spaceDelim, &err)) == NULL) {
-                break;
-            }
-            if(isdigit(token[0]) == 0) {
-                break;
-            }
-            ui[i] = getU32(token, 0, 0xFFFFFFFF, &err);
-        }
-    }
-    if(err == 0) {
-        switch(i) {
-        case 0: /* only <command> (pointed by token) */
-            comm_node = comm_node_default; /* may be undefined */
-            break;
-        case 1: /* <node> and <command> tokens */
-            if(ui[0] < 0 || ui[0] > 127) {
-                err = 1;
-                respErrorCode = respErrorUnsupportedNode;
-            }
-            else {
-                comm_node = (uint8_t) ui[0];
-            }
-            break;
-        case 2: /* <net>, <node> and <command> tokens */
-            if(ui[0] < 1 || ui[0] > 1) {
-                err = 1;
-                respErrorCode = respErrorUnsupportedNet;
-            }
-            else if(ui[1] < 0 || ui[1] > 127) {
-                err = 1;
-                respErrorCode = respErrorUnsupportedNode;
-            }
-            else {
-                comm_net = (uint16_t) ui[0];
-                comm_node = (uint8_t) ui[1];
+                if(err == 0) {
+                    if (select == 0) {
+                        err = lssSwitchStateDeselect(CO->LSSmaster);
+                    }
+                    else {
+                        err = lssSwitchStateSelect(CO->LSSmaster, true, 0, 0, 0, 0);
+                    }
+                }
             }
-            break;
-        case 3: /* <command> token contains digit */
-            err = 1;
-            break;
-        }
-    }
-    /* Execute command */
-    if(err == 0) {
-        printf("Error is 0\n");
 
-        /* Upload SDO command - 'r[ead] <index> <subindex> <datatype>' */
-        if(strcmp(token, "r") == 0 || strcmp(token, "read") == 0) {
-            uint16_t idx;
-            uint8_t subidx;
-            const dataType_t *datatype; /* optional token */
-            int errTokDt = 0;
-            int errDt = 0;
-            uint32_t SDOabortCode = 1;
+            /* Switch state selective command */
+            else if(strcmp(token, "lss_switch_sel") == 0) {
+                uint32_t vendorId;
+                uint32_t productCode;
+                uint32_t revisionNo;
+                uint32_t serialNo;
 
-            uint8_t dataRx[CO_COMMAND_SDO_BUFFER_SIZE]; /* SDO receive buffer */
-            uint32_t dataRxLen;  /* Length of received data */
+                token = getTok(NULL, spaceDelim, &err);
+                vendorId = getU32(token, 0, 0xFFFFFFFF, &err);
 
-            token = getTok(NULL, spaceDelim, &err);
-            idx = (uint16_t)getU32(token, 0, 0xFFFF, &err);
+                token = getTok(NULL, spaceDelim, &err);
+                productCode = getU32(token, 0, 0xFFFFFFFF, &err);
 
-            token = getTok(NULL, spaceDelim, &err);
-            subidx = (uint8_t)getU32(token, 0, 0xFF, &err);
+                token = getTok(NULL, spaceDelim, &err);
+                revisionNo = getU32(token, 0, 0xFFFFFFFF, &err);
 
-            token = getTok(NULL, spaceDelim, &errTokDt);
-            datatype = getDataType(token, &errDt);
+                token = getTok(NULL, spaceDelim, &err);
+                serialNo = getU32(token, 0, 0xFFFFFFFF, &err);
 
-            /* Datatype must be correct, if present. */
-            if(errTokDt == 0 && errDt != 0) {
-                err = 1;
-            }
+                lastTok(NULL, spaceDelim, &err);
 
-            lastTok(NULL, spaceDelim, &err);
-
-            if(err == 0 && (comm_node < 1 || comm_node > 127)) {
-                err = 1;
-                if(comm_node == 0xFF) {
-                    respErrorCode = respErrorNoDefaultNodeSet;
-                } else {
-                    respErrorCode = respErrorUnsupportedNode;
+                if(err == 0) {
+                    err = lssSwitchStateSelect(CO->LSSmaster, false,
+                              vendorId, productCode, revisionNo, serialNo);
                 }
             }
 
-            /* Make CANopen SDO transfer */
-            if(err == 0) {
-                err = sdoClientUpload(
-                        CO->SDOclient,
-                        comm_node,
-                        idx,
-                        subidx,
-                        dataRx,
-                        sizeof(dataRx),
-                        &dataRxLen,
-                        &SDOabortCode,
-                        SDOtimeoutTime,
-                        blockTransferEnable);
+            /* LSS configure node-ID command */
+            else if(strcmp(token, "lss_set_node") == 0) {
+                uint8_t nid;
 
-                if(err != 0){
-                    respErrorCode = respErrorInternalState;
-                }
-            }
+                token = getTok(NULL, spaceDelim, &err);
+                nid = (uint8_t)getU32(token, 0, 0xFF, &err);
 
-            /* output result */
-            if(err == 0){
-                if(SDOabortCode == 0) {
-                    respLen = sprintf(resp, "[%d] ", sequence);
+                lastTok(NULL, spaceDelim, &err);
 
-                    if(datatype == NULL || (datatype->length != 0 && datatype->length != dataRxLen)) {
-                        respLen += dtpHex(resp+respLen, sizeof(resp)-respLen, (char*)dataRx, dataRxLen);
-                    }
-                    else {
-                        respLen += datatype->dataTypePrint(
-                                resp+respLen, sizeof(resp)-respLen, (char*)dataRx, dataRxLen);
+                if(err == 0) {
+                    err = lssConfigureNodeId(CO->LSSmaster, nid);
+                    if(err == CO_LSSmaster_OK_ILLEGAL_ARGUMENT){
+                        respErrorCode = respErrorLSSnodeIdNotSupported;
                     }
                 }
-                else{
-                    respLen = sprintf(resp, "[%d] ERROR: 0x%08X", sequence, SDOabortCode);
-                }
             }
-        }
 
-        /* Download SDO command - w[rite] <index> <subindex> <datatype> <value> */
-        else if(strcmp(token, "w") == 0 || strcmp(token, "write") == 0) {
-            uint16_t idx;
-            uint8_t subidx;
-            const dataType_t *datatype;
-            uint32_t SDOabortCode = 1;
+            /* LSS configure bit-rate command */
+            else if(strcmp(token, "lss_conf_bitrate") == 0) {
+                uint8_t tableIndex;
 
-            uint8_t dataTx[CO_COMMAND_SDO_BUFFER_SIZE]; /* SDO transmit buffer */
-            uint32_t dataTxLen = 0;  /* Length of data to transmit. */
+                /* First parameter is table selector. We only support the CiA
+                 * bit timing table from CiA301 ("0") */
+                token = getTok(NULL, spaceDelim, &err);
+                (void)getU32(token, 0, 0, &err);
 
-            token = getTok(NULL, spaceDelim, &err);
-            idx = (uint16_t)getU32(token, 0, 0xFFFF, &err);
+                /* the table has entries from 0..9 */
+                token = getTok(NULL, spaceDelim, &err);
+                tableIndex = (uint8_t)getU32(token, 0, 9, &err);
 
-            token = getTok(NULL, spaceDelim, &err);
-            subidx = (uint8_t)getU32(token, 0, 0xFF, &err);
+                lastTok(NULL, spaceDelim, &err);
 
-            token = getTok(NULL, spaceDelim, &err);
-            datatype = getDataType(token, &err);
-
-            if(err == 0) {
-                /* take whole string or single token, depending on datatype. Comment may follow. */
-                token = getTok(NULL, (datatype->length == 0) ? "\n\r\f" : spaceDelim, &err);
+                if(err == 0) {
+                    err = lssConfigureBitTiming(CO->LSSmaster, tableIndex);
+                    if(err == CO_LSSmaster_OK_ILLEGAL_ARGUMENT){
+                        respErrorCode = respErrorLSSbitRateNotSupported;
+                    }
+                }
             }
 
-            if(err == 0) {
-                dataTxLen = datatype->dataTypeScan((char*)dataTx, sizeof(dataTx), token);
+            /* LSS activate new bit-rate command */
+            else if(strcmp(token, "lss_activate_bitrate") == 0) {
+                uint16_t switchDelay;
 
-                /* Length must match and must not be zero. */
-                if((datatype->length != 0 && datatype->length != dataTxLen) || dataTxLen == 0) {
-                    err = 1;
-                }
-            }
+                token = getTok(NULL, spaceDelim, &err);
+                switchDelay = (uint16_t)getU32(token, 0, 0xFFFF, &err);
 
-            lastTok(NULL, spaceDelim, &err);
+                lastTok(NULL, spaceDelim, &err);
 
-            if(err == 0 && (comm_node < 1 || comm_node > 127)) {
-                err = 1;
-                if(comm_node == 0xFF) {
-                    respErrorCode = respErrorNoDefaultNodeSet;
-                } else {
-                    respErrorCode = respErrorUnsupportedNode;
+                if(err == 0) {
+                    err = lssActivateBit(CO->LSSmaster, switchDelay);
                 }
             }
 
-            /* Make CANopen SDO transfer */
-            if(err == 0) {
-                err = sdoClientDownload(
-                        CO->SDOclient,
-                        comm_node,
-                        idx,
-                        subidx,
-                        dataTx,
-                        dataTxLen,
-                        &SDOabortCode,
-                        SDOtimeoutTime,
-                        blockTransferEnable);
+            /* LSS store configuration command */
+            else if(strcmp(token, "lss_store") == 0) {
 
-                if(err != 0){
-                    respErrorCode = respErrorInternalState;
-                }
-            }
+                lastTok(NULL, spaceDelim, &err);
 
-            /* output result */
-            if(err == 0){
-                if(SDOabortCode == 0) {
-                    respLen = sprintf(resp, "[%d] OK", sequence);
-                }
-                else{
-                    respLen = sprintf(resp, "[%d] ERROR: 0x%08X", sequence, SDOabortCode);
+                if(err == 0) {
+                    err = lssConfigureStore(CO->LSSmaster);
+                    if(err == CO_LSSmaster_OK_ILLEGAL_ARGUMENT){
+                        respErrorCode = respErrorLSSparameterStoringFailed;
+                    }
                 }
             }
-        }
 
-        /* NMT start node */
-        else if(strcmp(token, "start") == 0) {
-            lastTok(NULL, spaceDelim, &err);
-            if(err == 0 && comm_node > 127) {
-                err = 1;
-                respErrorCode = respErrorNoDefaultNodeSet;
-            }
-            if(err == 0) {
-                err = CO_sendNMTcommand(CO, CO_NMT_ENTER_OPERATIONAL, comm_node) ? 1:0;
-                if(err == 0) respLen = sprintf(resp, "[%d] OK", sequence);
-            }
-        }
+            /* Inquire LSS address command */
+            else if(strcmp(token, "lss_inquire_addr") == 0) {
+                uint32_t vendorId;
+                uint32_t productCode;
+                uint32_t revisionNo;
+                uint32_t serialNo;
+                const dataType_t *datatype;
 
-        /* NMT stop node */
-        else if(strcmp(token, "stop") == 0) {
-            lastTok(NULL, spaceDelim, &err);
-            if(err == 0 && comm_node > 127) {
-                err = 1;
-                respErrorCode = respErrorNoDefaultNodeSet;
-            }
-            if(err == 0) {
-                err = CO_sendNMTcommand(CO, CO_NMT_ENTER_STOPPED, comm_node) ? 1:0;
-                if(err == 0) respLen = sprintf(resp, "[%d] OK", sequence);
-            }
-        }
+                datatype = getDataType("u32", &err);
 
-        /* NMT Set node to pre-operational */
-        else if(strcmp(token, "preop") == 0 || strcmp(token, "preoperational") == 0) {
-            lastTok(NULL, spaceDelim, &err);
-            if(err == 0 && comm_node > 127) {
-                err = 1;
-                respErrorCode = respErrorNoDefaultNodeSet;
-            }
-            if(err == 0) {
-                err = CO_sendNMTcommand(CO, CO_NMT_ENTER_PRE_OPERATIONAL, comm_node) ? 1:0;
-                if(err == 0) respLen = sprintf(resp, "[%d] OK", sequence);
-            }
-        }
+                lastTok(NULL, spaceDelim, &err);
 
-        /* NMT reset (node or communication) */
-        else if(strcmp(token, "reset") == 0) {
-
-            token = getTok(NULL, spaceDelim, &err);
-            if(err == 0 && comm_node > 127) {
-                err = 1;
-                respErrorCode = respErrorNoDefaultNodeSet;
-            }
-            if(err == 0) {
-                if(strcmp(token, "node") == 0) {
-                    lastTok(NULL, spaceDelim, &err);
-                    if(err == 0) {
-                        err = CO_sendNMTcommand(CO, CO_NMT_RESET_NODE, comm_node) ? 1:0;
-                        if(err == 0) respLen = sprintf(resp, "[%d] OK", sequence);
-                    }
-                }
-                else if(strcmp(token, "comm") == 0 || strcmp(token, "communication") == 0) {
-                    lastTok(NULL, spaceDelim, &err);
-                    if(err == 0) {
-                        err = CO_sendNMTcommand(CO, CO_NMT_RESET_COMMUNICATION, comm_node) ? 1:0;
-                        if(err == 0) respLen = sprintf(resp, "[%d] OK", sequence);
-                    }
+                if(err == 0) {
+                    err = lssInquireLssAddress(CO->LSSmaster,
+                              &vendorId, &productCode, &revisionNo, &serialNo);
                 }
+                if (err == 0) {
+                    respLen = sprintf(resp, "[%d] ", sequence);
 
-                else {
-                    err = 1;
+                    respLen += datatype->dataTypePrint(resp+respLen, sizeof(resp)-respLen,
+                                   (char*)&vendorId, sizeof(vendorId));
+                    respLen += sprintf(resp+respLen, " ");
+                    respLen += datatype->dataTypePrint(resp+respLen, sizeof(resp)-respLen,
+                                   (char*)&productCode, sizeof(productCode));
+                    respLen += sprintf(resp+respLen, " ");
+                    respLen += datatype->dataTypePrint(resp+respLen, sizeof(resp)-respLen,
+                                   (char*)&revisionNo, sizeof(revisionNo));
+                    respLen += sprintf(resp+respLen, " ");
+                    respLen += datatype->dataTypePrint(resp+respLen, sizeof(resp)-respLen,
+                                   (char*)&serialNo, sizeof(serialNo));
                 }
             }
-        }
 
-        /* set command - multiple settings */
-        else if(strcmp(token, "set") == 0) {
+            /* LSS inquire node-ID command */
+            else if(strcmp(token, "lss_get_node") == 0) {
+                uint8_t nid;
 
-            token = getTok(NULL, spaceDelim, &err);
-            if(err == 0) {
-                /* sdo_timeout <value> */
-                if(strcmp(token, "sdo_timeout") == 0) {
-                    uint16_t tmout;
+                lastTok(NULL, spaceDelim, &err);
 
-                    token = getTok(NULL, spaceDelim, &err);
-                    tmout = (uint16_t)getU32(token, 0, 10000, &err);
+                if(err == 0) {
+                    err = lssInquireNodeId(CO->LSSmaster, &nid);
+                }
+                if (err == 0) {
+                    respLen = sprintf(resp, "[%d] %d", sequence, nid);
+                }
+            }
+            /* LSS identify fastscan. This is a manufacturer specific command as
+             * the one in DSP309 is quite useless */
+            else if(strcmp(token, "_lss_fastscan") == 0) {
+                uint32_t vendorId = 0;
+                uint32_t productCode = 0;
+                uint32_t revisionNo = 0;
+                uint32_t serialNo = 0;
+                uint16_t timeout;
+                const dataType_t *datatype;
 
-                    lastTok(NULL, spaceDelim, &err);
+                token = getTok(NULL, spaceDelim, &err);
+                timeout = (uint16_t)getU32(token, 0, 0xFFFF, &err);
+                if (timeout==0 || err!=0) {
+                    /* if no timeout was given, use 100ms. Should work in most
+                     * cases */
+                    err = 0;
+                    timeout = 100;
+                }
 
-                    /* Write to variable */
-                    if(err == 0) {
-                        SDOtimeoutTime = tmout;
-                        respLen = sprintf(resp, "[%d] OK", sequence);
+                lastTok(NULL, spaceDelim, &err);
+                datatype = getDataType("u32", &err);
+
+                if(err == 0) {
+                    err = lssIdentifyFastscan(CO->LSSmaster, timeout,
+                              0, &vendorId, 0, &productCode, 0, &revisionNo, 0, &serialNo);
+                    if (err == CO_LSSmaster_SCAN_FINISHED) {
+                        err = 0;
                     }
                 }
+                if (err == 0) {
+                    respLen = sprintf(resp, "[%d] ", sequence);
 
-                /* sdo_block <value> */
-                else if(strcmp(token, "sdo_block") == 0) {
-                    uint8_t blk;
+                    respLen += datatype->dataTypePrint(resp+respLen, sizeof(resp)-respLen,
+                                   (char*)&vendorId, sizeof(vendorId));
+                    respLen += sprintf(resp+respLen, " ");
+                    respLen += datatype->dataTypePrint(resp+respLen, sizeof(resp)-respLen,
+                                   (char*)&productCode, sizeof(productCode));
+                    respLen += sprintf(resp+respLen, " ");
+                    respLen += datatype->dataTypePrint(resp+respLen, sizeof(resp)-respLen,
+                                   (char*)&revisionNo, sizeof(revisionNo));
+                    respLen += sprintf(resp+respLen, " ");
+                    respLen += datatype->dataTypePrint(resp+respLen, sizeof(resp)-respLen,
+                                   (char*)&serialNo, sizeof(serialNo));
+                }
+            }
+            /*  LSS complete node-ID configuration command */
+            else if(strcmp(token, "lss_allnodes") == 0) {
+                uint32_t vendorId;
+                uint32_t productCode;
+                uint32_t revisionNo;
+                uint32_t serialNo;
+                uint8_t scanType[4];
+                uint16_t timeout;
+                uint8_t nodeStart;
+                uint8_t nodeCount;
+                uint8_t store;
+
+                token = getTok(NULL, spaceDelim, &err);
+                timeout = (uint16_t)getU32(token, 0, 0xFFFF, &err);
+                if (timeout==0 || err!=0) {
+                    /* if no timeout was given, use 100ms. Should work in most
+                     * cases */
+                    err = 0;
+                    timeout = 100;
+                }
+
+                token = getTok(NULL, spaceDelim, &err);
+                if (err != 0) {
+                    /* CiA specification for this command takes no arguments. Do
+                     * full scan. */
+                    err = 0;
+                    vendorId = 0;
+                    productCode = 0;
+                    revisionNo = 0;
+                    serialNo = 0;
+                    /* use start node ID 2. Should work in most cases */
+                    nodeStart = 2;
+                    /* store node ID in node's NVM */
+                    store = 1;
+                    memset(scanType, 0, sizeof(scanType));
+                } else {
 
-                    token = getTok(NULL, spaceDelim, &err);
-                    blk = (uint8_t)getU32(token, 0, 1, &err);
+                    nodeStart = (uint8_t)getU32(token, 1, 127, &err);
 
-                    lastTok(NULL, spaceDelim, &err);
+                    token = getTok(NULL, spaceDelim, &err);
+                    store = (uint8_t)getU32(token, 0, 1, &err);
 
-                    /* Write to variable */
-                    if(err == 0) {
-                        blockTransferEnable = blk;
-                        respLen = sprintf(resp, "[%d] OK", sequence);
-                    }
-                }
+                    token = getTok(NULL, spaceDelim, &err);
+                    scanType[0] = (uint8_t)getU32(token, 0, 2, &err);
+                    token = getTok(NULL, spaceDelim, &err);
+                    vendorId = (uint32_t)getU32(token, 0, 0xFFFFFFFF, &err);
 
-                /* node <value> */
-                else if(strcmp(token, "node") == 0) {
-                    uint16_t node;
+                    token = getTok(NULL, spaceDelim, &err);
+                    scanType[1] = (uint8_t)getU32(token, 0, 2, &err);
+                    token = getTok(NULL, spaceDelim, &err);
+                    productCode = (uint32_t)getU32(token, 0, 0xFFFFFFFF, &err);
 
                     token = getTok(NULL, spaceDelim, &err);
-                    node = (uint16_t)getU32(token, 1, 127, &err);
+                    scanType[2] = (uint8_t)getU32(token, 0, 2, &err);
+                    token = getTok(NULL, spaceDelim, &err);
+                    revisionNo = (uint32_t)getU32(token, 0, 0xFFFFFFFF, &err);
 
-                    lastTok(NULL, spaceDelim, &err);
+                    token = getTok(NULL, spaceDelim, &err);
+                    scanType[3] = (uint8_t)getU32(token, 0, 2, &err);
+                    token = getTok(NULL, spaceDelim, &err);
+                    serialNo = (uint32_t)getU32(token, 0, 0xFFFFFFFF, &err);
+                }
+                lastTok(NULL, spaceDelim, &err);
 
-                    /* Write to variable */
-                    if(err == 0) {
-                        comm_node_default = node;
-                        respLen = sprintf(resp, "[%d] OK", sequence);
-                    }
+                if(err == 0) {
+                    err = lssEnumerateFastscan(CO->LSSmaster, timeout,
+                              nodeStart, &nodeCount, store,
+                              scanType[0], vendorId,
+                              scanType[1], productCode,
+                              scanType[2], revisionNo,
+                              scanType[3], serialNo);
+                }
+                if (err == 0) {
+                  respLen = sprintf(resp, "[%d] OK, found %d nodes starting at node ID %d. ",
+                                sequence, nodeCount, nodeStart);
+                  if ((nodeStart + nodeCount - 1) == 127) {
+                      respLen += sprintf(resp+respLen, "Assignment process was stopped"
+                                     " at ID 127. There still might be unconfigured"
+                                     " nodes remaining. Re-run with lower start ID to"
+                                     " find them.");
+                  }
                 }
+            }
+            else {
+                /* unknown LSS command */
+                respErrorCode = respErrorReqNotSupported;
+                err = 1;
+            }
 
-                /* Unknown command */
-                else {
-                    err = 1;
+            /* token / LSS default command result. This info is displayed when
+             * the processed LSS command did not print a specific output. */
+            if (respLen==0 && respErrorCode==0) {
+                if(err==CO_LSSmaster_TIMEOUT || err==CO_LSSmaster_SCAN_NOACK){
+                    respErrorCode = respErrorTimeOut;
+                }
+                else if (err == CO_LSSmaster_OK_MANUFACTURER) {
+                    respErrorCode = respErrorLSSmanufacturer;
+                }
+                else if (err < 0) {
+                    respErrorCode = respErrorInternalState;
+                } else {
+                    respLen = sprintf(resp, "[%d] OK", sequence);
                 }
             }
         }
@@ -958,7 +956,11 @@ void cancomm_socketFree(char* command, char* ret) {
     /* Terminate string and send response */
     resp[respLen++] = '\r';
     resp[respLen++] = '\n';
-    resp[respLen++] = '\0';
-    // Bug testing
-    printf("RESPONSE: %s\n", resp);
+    if(!tcpMode) {
+      resp[respLen++] = '\0';
+    }
+
+    if(write(fd, resp, respLen) != respLen) {
+        CO_error(0x15200000L);
+    }
 }
diff --git a/canopend/src/CO_command.h b/canopend/src/CO_command.h
index 9770ccd..7558a42 100644
--- a/canopend/src/CO_command.h
+++ b/canopend/src/CO_command.h
@@ -24,21 +24,27 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+
 #ifndef CO_COMMAND_H
 #define CO_COMMAND_H
 
+#include <netinet/in.h>
+
+
 /* Functions from external */
-void CO_errExit(char *msg);
+void CO_errExit(char* msg);
 void CO_error(const uint32_t info);
 
+
 /**
  * Path for local type  socket. External process can access command interface
  * over this socket. By default its path is "/tmp/CO_command_socket".
  */
 extern char *CO_command_socketPath;
 
+
 /**
- * Initialize thread and create socket for command interface.
+ * Initialize thread and create local domain socket for command interface.
  *
  * Make sure, that global variable CO was properly initialized before this call.
  *
@@ -47,33 +53,29 @@ extern char *CO_command_socketPath;
 int CO_command_init(void);
 
 /**
- * Terminate thread and remove socket.
+ * Initialize thread and create tcp socket for command interface.
+ * @param port tcp port to listen
  *
+ * Make sure, that global variable CO was properly initialized before this call.
  * @return 0 on success.
  */
-int CO_command_clear(void);
+int CO_command_init_tcp(in_port_t port);
+
+
 /**
- * Allow main thread to send SDO messages to nodes
+ * Terminate thread and remove socket.
  *
- * @return message recieved on success 
- * @return error on failure
+ * @return 0 on success.
  */
-void cancomm_socketFree(char *command, char *ret);
+int CO_command_clear(void);
+
 /**
- * Using cancomm_socketFree(char* command, char* ret)
- * initialize nodes for PDO messaging
+ * Terminate thread and remove tcp socket.
+ * @param port tcp port to connect to
  *
- * @return 0 on success
- * @return error on failure
+ * @return 0 on success.
  */
-// static void* initNodes()
-// /**
-//  * Perform homeCalibration of robot through SDOs
-//  * Question: Should most likely return a robot object in home state, to act as the ROBOT initializer.
-//  *
-//  * @return 0 on success
-//  * @return error on failure
-//  */
-// static void* homeCalibration(int nodeID)
+int CO_command_clear_tcp(in_port_t port);
+
 
 #endif
diff --git a/canopend/src/main.c b/canopend/src/main.c
new file mode 100644
index 0000000..583b13a
--- /dev/null
+++ b/canopend/src/main.c
@@ -0,0 +1,563 @@
+/*
+ * CANopen main program file for Linux SocketCAN.
+ *
+ * @file        main
+ * @author      Janez Paternoster
+ * @copyright   2015 Janez Paternoster
+ *
+ * This file is part of CANopenSocket, a Linux implementation of CANopen
+ * stack with master functionality. Project home page is
+ * <https://github.com/CANopenNode/CANopenSocket>. CANopenSocket is based
+ * on CANopenNode: <https://github.com/CANopenNode/CANopenNode>.
+ *
+ * CANopenSocket is free and open source software: you can redistribute
+ * it and/or modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation, either version 2 of the
+ * License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program. If not, see <http://www.gnu.org/licenses/>.
+ */
+
+
+#include "CANopen.h"
+#include "CO_OD_storage.h"
+#include "CO_Linux_tasks.h"
+#include "CO_time.h"
+#include "application.h"
+#include <stdio.h>
+#include <stdlib.h>
+#include <unistd.h>
+#include <string.h>
+#include <sched.h>
+#include <signal.h>
+#include <errno.h>
+#include <sys/epoll.h>
+#include <net/if.h>
+#include <linux/reboot.h>
+#include <sys/reboot.h>
+
+#ifndef CO_SINGLE_THREAD
+#include "CO_command.h"
+#include <pthread.h>
+#endif
+
+
+#define NSEC_PER_SEC            (1000000000)    /* The number of nanoseconds per second. */
+#define NSEC_PER_MSEC           (1000000)       /* The number of nanoseconds per millisecond. */
+#define TMR_TASK_INTERVAL_NS    (1000000)       /* Interval of taskTmr in nanoseconds */
+#define TMR_TASK_OVERFLOW_US    (5000)          /* Overflow detect limit for taskTmr in microseconds */
+#define INCREMENT_1MS(var)      (var++)         /* Increment 1ms variable in taskTmr */
+
+
+/* Global variable increments each millisecond. */
+volatile uint16_t           CO_timer1ms = 0U;
+
+/* Mutex is locked, when CAN is not valid (configuration state). May be used
+ *  from other threads. RT threads may use CO->CANmodule[0]->CANnormal instead. */
+#ifndef CO_SINGLE_THREAD
+pthread_mutex_t             CO_CAN_VALID_mtx = PTHREAD_MUTEX_INITIALIZER;
+#endif
+
+/* Other variables and objects */
+static int                  rtPriority = -1;    /* Real time priority, configurable by arguments. (-1=RT disabled) */
+static int                  mainline_epoll_fd;  /* epoll file descriptor for mainline */
+static CO_OD_storage_t      odStor;             /* Object Dictionary storage object for CO_OD_ROM */
+static CO_OD_storage_t      odStorAuto;         /* Object Dictionary storage object for CO_OD_EEPROM */
+static char                *odStorFile_rom    = "od_storage";       /* Name of the file */
+static char                *odStorFile_eeprom = "od_storage_auto";  /* Name of the file */
+static CO_time_t            CO_time;            /* Object for current time */
+static in_port_t            CO_command_socket_tcp_port = 60000; /* default port when used in tcp gateway mode */
+
+
+/* Realtime thread */
+#ifndef CO_SINGLE_THREAD
+static void*                rt_thread(void* arg);
+static pthread_t            rt_thread_id;
+static int                  rt_thread_epoll_fd;
+#endif
+
+
+/* Signal handler */
+volatile sig_atomic_t CO_endProgram = 0;
+static void sigHandler(int sig) {
+    CO_endProgram = 1;
+}
+
+
+/* Helper functions ***********************************************************/
+void CO_errExit(char* msg) {
+    perror(msg);
+    exit(EXIT_FAILURE);
+}
+
+/* send CANopen generic emergency message */
+void CO_error(const uint32_t info) {
+    CO_errorReport(CO->em, CO_EM_GENERIC_SOFTWARE_ERROR, CO_EMC_SOFTWARE_INTERNAL, info);
+    fprintf(stderr, "canopend generic error: 0x%X\n", info);
+}
+
+
+static void printUsage(char *progName) {
+fprintf(stderr,
+"Usage: %s <CAN device name> [options]\n", progName);
+fprintf(stderr,
+"\n"
+"Options:\n"
+"  -i <Node ID>        CANopen Node-id (1..127). If not specified, value from\n"
+"                      Object dictionary (0x2101) is used.\n"
+"  -p <RT priority>    Realtime priority of RT task (RT disabled by default).\n"
+"  -r                  Enable reboot on CANopen NMT reset_node command. \n"
+"  -s <ODstorage file> Set Filename for OD storage ('od_storage' is default).\n"
+"  -a <ODstorageAuto>  Set Filename for automatic storage variables from\n"
+"                      Object dictionary. ('od_storage_auto' is default).\n");
+#ifndef CO_SINGLE_THREAD
+fprintf(stderr,
+"  -c <Socket path>    Enable command interface for master functionality. \n"
+"                      If socket path is specified as empty string \"\",\n"
+"                      default '%s' will be used.\n"
+"                      Note that location of socket path may affect security.\n"
+"                      See 'canopencomm/canopencomm --help' for more info.\n"
+, CO_command_socketPath);
+fprintf(stderr,
+"  -t <port>           Enable command interface for master functionality over tcp, \n"
+"                      listen to <port>.\n"
+"                      Note that using this mode may affect security.\n"
+);
+#endif
+fprintf(stderr,
+"\n"
+"LICENSE\n"
+"    This program is part of CANopenSocket and can be downloaded from:\n"
+"    https://github.com/CANopenNode/CANopenSocket\n"
+"    Permission is granted to copy, distribute and/or modify this document\n"
+"    under the terms of the GNU General Public License, Version 2.\n"
+"\n");
+}
+
+
+/******************************************************************************/
+/** Mainline and RT thread                                                   **/
+/******************************************************************************/
+int main (int argc, char *argv[]) {
+    CO_NMT_reset_cmd_t reset = CO_RESET_NOT;
+    CO_ReturnError_t odStorStatus_rom, odStorStatus_eeprom;
+    int CANdevice0Index = 0;
+    int opt;
+    bool_t firstRun = true;
+
+    char* CANdevice = NULL;         /* CAN device, configurable by arguments. */
+    bool_t nodeIdFromArgs = false;  /* True, if program arguments are used for CANopen Node Id */
+    int nodeId = -1;                /* Use value from Object Dictionary or set to 1..127 by arguments */
+    bool_t rebootEnable = false;    /* Configurable by arguments */
+#ifndef CO_SINGLE_THREAD
+    typedef enum CMD_MODE {CMD_NONE, CMD_LOCAL, CMD_REMOTE} cmdMode_t;
+    cmdMode_t commandEnable = CMD_NONE;   /* Configurable by arguments */
+#endif
+
+    if(argc < 2 || strcmp(argv[1], "--help") == 0){
+        printUsage(argv[0]);
+        exit(EXIT_SUCCESS);
+    }
+
+
+    /* Get program options */
+    while((opt = getopt(argc, argv, "i:p:rc:t:s:a:")) != -1) {
+        switch (opt) {
+            case 'i':
+                nodeId = strtol(optarg, NULL, 0);
+                nodeIdFromArgs = true;
+                break;
+            case 'p': rtPriority = strtol(optarg, NULL, 0); break;
+            case 'r': rebootEnable = true;                  break;
+#ifndef CO_SINGLE_THREAD
+            case 'c':
+                /* In case of empty string keep default name, just enable interface. */
+                if(strlen(optarg) != 0) {
+                    CO_command_socketPath = optarg;
+                }
+                commandEnable = CMD_LOCAL;
+                break;
+            case 't':
+                /* In case of empty string keep default port, just enable interface. */
+                if(strlen(optarg) != 0) {
+                  //CO_command_socket_tcp_port = optarg;
+                  int scanResult = sscanf(optarg, "%hu", &CO_command_socket_tcp_port);
+                  if(scanResult != 1){ //expect one argument to be extracted
+                    printf("ERROR: -t argument \'%s\' is not a valid tcp port\n", optarg);
+                    exit(EXIT_FAILURE);
+                  }
+                }
+                commandEnable = CMD_REMOTE;
+                break;
+#endif
+            case 's': odStorFile_rom = optarg;              break;
+            case 'a': odStorFile_eeprom = optarg;           break;
+            default:
+                printUsage(argv[0]);
+                exit(EXIT_FAILURE);
+        }
+    }
+
+    if(optind < argc) {
+        CANdevice = argv[optind];
+        CANdevice0Index = if_nametoindex(CANdevice);
+    }
+
+    if(nodeIdFromArgs && (nodeId < 1 || nodeId > 127)) {
+        fprintf(stderr, "Wrong node ID (%d)\n", nodeId);
+        printUsage(argv[0]);
+        exit(EXIT_FAILURE);
+    }
+
+    if(rtPriority != -1 && (rtPriority < sched_get_priority_min(SCHED_FIFO)
+                         || rtPriority > sched_get_priority_max(SCHED_FIFO))) {
+        fprintf(stderr, "Wrong RT priority (%d)\n", rtPriority);
+        printUsage(argv[0]);
+        exit(EXIT_FAILURE);
+    }
+
+    if(CANdevice0Index == 0) {
+        char s[120];
+        snprintf(s, 120, "Can't find CAN device \"%s\"", CANdevice);
+        CO_errExit(s);
+    }
+
+
+    printf("%s - starting CANopen device with Node ID %d(0x%02X)", argv[0], nodeId, nodeId);
+
+
+    /* Verify, if OD structures have proper alignment of initial values */
+    if(CO_OD_RAM.FirstWord != CO_OD_RAM.LastWord) {
+        fprintf(stderr, "Program init - %s - Error in CO_OD_RAM.\n", argv[0]);
+        exit(EXIT_FAILURE);
+    }
+    if(CO_OD_EEPROM.FirstWord != CO_OD_EEPROM.LastWord) {
+        fprintf(stderr, "Program init - %s - Error in CO_OD_EEPROM.\n", argv[0]);
+        exit(EXIT_FAILURE);
+    }
+    if(CO_OD_ROM.FirstWord != CO_OD_ROM.LastWord) {
+        fprintf(stderr, "Program init - %s - Error in CO_OD_ROM.\n", argv[0]);
+        exit(EXIT_FAILURE);
+    }
+
+
+    /* initialize Object Dictionary storage */
+    odStorStatus_rom = CO_OD_storage_init(&odStor, (uint8_t*) &CO_OD_ROM, sizeof(CO_OD_ROM), odStorFile_rom);
+    odStorStatus_eeprom = CO_OD_storage_init(&odStorAuto, (uint8_t*) &CO_OD_EEPROM, sizeof(CO_OD_EEPROM), odStorFile_eeprom);
+
+
+    /* Catch signals SIGINT and SIGTERM */
+    if(signal(SIGINT, sigHandler) == SIG_ERR)
+        CO_errExit("Program init - SIGINIT handler creation failed");
+    if(signal(SIGTERM, sigHandler) == SIG_ERR)
+        CO_errExit("Program init - SIGTERM handler creation failed");
+
+    /* increase variable each startup. Variable is automatically stored in non-volatile memory. */
+    printf(", count=%u ...\n", ++OD_powerOnCounter);
+
+
+    while(reset != CO_RESET_APP && reset != CO_RESET_QUIT && CO_endProgram == 0) {
+/* CANopen communication reset - initialize CANopen objects *******************/
+        CO_ReturnError_t err;
+
+        printf("%s - communication reset ...\n", argv[0]);
+
+
+#ifndef CO_SINGLE_THREAD
+        /* Wait other threads (command interface). */
+        pthread_mutex_lock(&CO_CAN_VALID_mtx);
+#endif
+
+        /* Wait rt_thread. */
+        if(!firstRun) {
+            CO_LOCK_OD();
+            CO->CANmodule[0]->CANnormal = false;
+            CO_UNLOCK_OD();
+        }
+
+
+        /* Enter CAN configuration. */
+        CO_CANsetConfigurationMode(CANdevice0Index);
+
+
+        /* initialize CANopen */
+        if(!nodeIdFromArgs) {
+            /* use value from Object dictionary, if not set by program arguments */
+            nodeId = OD_CANNodeID;
+        }
+        err = CO_init(CANdevice0Index, nodeId, 0);
+        if(err != CO_ERROR_NO) {
+            char s[120];
+            snprintf(s, 120, "Communication reset - CANopen initialization failed, err=%d", err);
+            CO_errExit(s);
+        }
+
+
+        /* initialize OD objects 1010 and 1011 and verify errors. */
+        CO_OD_configure(CO->SDO[0], OD_H1010_STORE_PARAM_FUNC, CO_ODF_1010, (void*)&odStor, 0, 0U);
+        CO_OD_configure(CO->SDO[0], OD_H1011_REST_PARAM_FUNC, CO_ODF_1011, (void*)&odStor, 0, 0U);
+        if(odStorStatus_rom != CO_ERROR_NO) {
+            CO_errorReport(CO->em, CO_EM_NON_VOLATILE_MEMORY, CO_EMC_HARDWARE, (uint32_t)odStorStatus_rom);
+        }
+        if(odStorStatus_eeprom != CO_ERROR_NO) {
+            CO_errorReport(CO->em, CO_EM_NON_VOLATILE_MEMORY, CO_EMC_HARDWARE, (uint32_t)odStorStatus_eeprom + 1000);
+        }
+
+
+        /* Configure callback functions for task control */
+        CO_EM_initCallback(CO->em, taskMain_cbSignal);
+        CO_SDO_initCallback(CO->SDO[0], taskMain_cbSignal);
+        CO_SDOclient_initCallback(CO->SDOclient, taskMain_cbSignal);
+
+
+        /* Initialize time */
+        CO_time_init(&CO_time, CO->SDO[0], &OD_time.epochTimeBaseMs, &OD_time.epochTimeOffsetMs, 0x2130);
+
+
+        /* First time only initialization. */
+        if(firstRun) {
+            firstRun = false;
+
+            /* Configure epoll for mainline */
+            mainline_epoll_fd = epoll_create(4);
+            if(mainline_epoll_fd == -1)
+                CO_errExit("Program init - epoll_create mainline failed");
+
+            /* Init mainline */
+            taskMain_init(mainline_epoll_fd, &OD_performance[ODA_performance_mainCycleMaxTime]);
+
+
+#ifdef CO_SINGLE_THREAD
+            /* Init taskRT */
+            CANrx_taskTmr_init(mainline_epoll_fd, TMR_TASK_INTERVAL_NS, &OD_performance[ODA_performance_timerCycleMaxTime]);
+
+            OD_performance[ODA_performance_timerCycleTime] = TMR_TASK_INTERVAL_NS/1000; /* informative */
+
+            /* Set priority for mainline */
+            if(rtPriority > 0) {
+                struct sched_param param;
+
+                param.sched_priority = rtPriority;
+                if(sched_setscheduler(0, SCHED_FIFO, &param) != 0)
+                    CO_errExit("Program init - mainline set scheduler failed");
+            }
+#else
+            /* Configure epoll for rt_thread */
+            rt_thread_epoll_fd = epoll_create(2);
+            if(rt_thread_epoll_fd == -1)
+                CO_errExit("Program init - epoll_create rt_thread failed");
+
+            /* Init taskRT */
+            CANrx_taskTmr_init(rt_thread_epoll_fd, TMR_TASK_INTERVAL_NS, &OD_performance[ODA_performance_timerCycleMaxTime]);
+
+            OD_performance[ODA_performance_timerCycleTime] = TMR_TASK_INTERVAL_NS/1000; /* informative */
+
+            /* Create rt_thread */
+            if(pthread_create(&rt_thread_id, NULL, rt_thread, NULL) != 0)
+                CO_errExit("Program init - rt_thread creation failed");
+
+            /* Set priority for rt_thread */
+            if(rtPriority > 0) {
+                struct sched_param param;
+
+                param.sched_priority = rtPriority;
+                if(pthread_setschedparam(rt_thread_id, SCHED_FIFO, &param) != 0)
+                    CO_errExit("Program init - rt_thread set scheduler failed");
+            }
+#endif
+
+#ifndef CO_SINGLE_THREAD
+            /* Initialize socket command interface */
+            switch(commandEnable) {
+              case CMD_LOCAL:
+                if(CO_command_init() != 0) {
+                    CO_errExit("Socket command interface initialization failed");
+                }
+                printf("%s - Command interface on socket '%s' started ...\n", argv[0], CO_command_socketPath);
+                break;
+              case CMD_REMOTE:
+                if(CO_command_init_tcp(CO_command_socket_tcp_port) != 0) {
+                    CO_errExit("Socket command interface initialization failed");
+                }
+                printf("%s - Command interface on tcp port '%hu' started ...\n", argv[0], CO_command_socket_tcp_port);
+                break;
+              default:
+                break;
+            }
+#endif
+
+            /* Execute optional additional application code */
+            app_programStart();
+        }
+
+
+        /* Execute optional additional application code */
+        app_communicationReset();
+
+
+        /* start CAN */
+        CO_CANsetNormalMode(CO->CANmodule[0]);
+#ifndef CO_SINGLE_THREAD
+        pthread_mutex_unlock(&CO_CAN_VALID_mtx);
+#endif
+
+
+        reset = CO_RESET_NOT;
+
+        printf("%s - running ...\n", argv[0]);
+
+
+        while(reset == CO_RESET_NOT && CO_endProgram == 0) {
+/* loop for normal program execution ******************************************/
+            int ready;
+            struct epoll_event ev;
+
+            ready = epoll_wait(mainline_epoll_fd, &ev, 1, -1);
+
+            if(ready != 1) {
+                if(errno != EINTR) {
+                    CO_error(0x11100000L + errno);
+                }
+            }
+
+#ifdef CO_SINGLE_THREAD
+            else if(CANrx_taskTmr_process(ev.data.fd)) {
+                /* code was processed in the above function. Additional code process below */
+                INCREMENT_1MS(CO_timer1ms);
+                /* Detect timer large overflow */
+                if(OD_performance[ODA_performance_timerCycleMaxTime] > TMR_TASK_OVERFLOW_US && rtPriority > 0) {
+                    CO_errorReport(CO->em, CO_EM_ISR_TIMER_OVERFLOW, CO_EMC_SOFTWARE_INTERNAL, 0x22400000L | OD_performance[ODA_performance_timerCycleMaxTime]);
+                }
+            }
+#endif
+
+            else if(taskMain_process(ev.data.fd, &reset, CO_timer1ms)) {
+                uint16_t timer1msDiff;
+                static uint16_t tmr1msPrev = 0;
+
+                /* Calculate time difference */
+                timer1msDiff = CO_timer1ms - tmr1msPrev;
+                tmr1msPrev = CO_timer1ms;
+
+                /* code was processed in the above function. Additional code process below */
+
+                /* Execute optional additional application code */
+                app_programAsync(timer1msDiff);
+
+                CO_OD_storage_autoSave(&odStorAuto, CO_timer1ms, 60000);
+            }
+
+            else {
+                /* No file descriptor was processed. */
+                CO_error(0x11200000L);
+            }
+        }
+    }
+
+
+/* program exit ***************************************************************/
+    /* join threads */
+#ifndef CO_SINGLE_THREAD
+    switch (commandEnable)
+    {
+      case CMD_LOCAL:
+        if (CO_command_clear() != 0) {
+          CO_errExit("Socket command interface removal failed");
+        }
+        break;
+      case CMD_REMOTE:
+        //nothing to do yet
+        break;
+      default:
+        break;
+    }
+#endif
+
+    CO_endProgram = 1;
+#ifndef CO_SINGLE_THREAD
+    if(pthread_join(rt_thread_id, NULL) != 0) {
+        CO_errExit("Program end - pthread_join failed");
+    }
+#endif
+
+    /* Execute optional additional application code */
+    app_programEnd();
+
+    /* Store CO_OD_EEPROM */
+    CO_OD_storage_autoSave(&odStorAuto, 0, 0);
+    CO_OD_storage_autoSaveClose(&odStorAuto);
+
+    /* delete objects from memory */
+    CANrx_taskTmr_close();
+    taskMain_close();
+    CO_delete(CANdevice0Index);
+
+    printf("%s on %s (nodeId=0x%02X) - finished.\n\n", argv[0], CANdevice, nodeId);
+
+    /* Flush all buffers (and reboot) */
+    if(rebootEnable && reset == CO_RESET_APP) {
+        sync();
+        if(reboot(LINUX_REBOOT_CMD_RESTART) != 0) {
+            CO_errExit("Program end - reboot failed");
+        }
+    }
+
+    exit(EXIT_SUCCESS);
+}
+
+
+#ifndef CO_SINGLE_THREAD
+/* Realtime thread for CAN receive and taskTmr ********************************/
+static void* rt_thread(void* arg) {
+
+    /* Endless loop */
+    while(CO_endProgram == 0) {
+        int ready;
+        struct epoll_event ev;
+
+        ready = epoll_wait(rt_thread_epoll_fd, &ev, 1, -1);
+
+        if(ready != 1) {
+            if(errno != EINTR) {
+                CO_error(0x12100000L + errno);
+            }
+        }
+
+        else if(CANrx_taskTmr_process(ev.data.fd)) {
+            int i;
+
+            /* code was processed in the above function. Additional code process below */
+            INCREMENT_1MS(CO_timer1ms);
+
+            /* Monitor variables with trace objects */
+            CO_time_process(&CO_time);
+#if CO_NO_TRACE > 0
+            for(i=0; i<OD_traceEnable && i<CO_NO_TRACE; i++) {
+                CO_trace_process(CO->trace[i], *CO_time.epochTimeOffsetMs);
+            }
+#endif
+
+            /* Execute optional additional application code */
+            app_program1ms();
+
+            /* Detect timer large overflow */
+            if(OD_performance[ODA_performance_timerCycleMaxTime] > TMR_TASK_OVERFLOW_US && rtPriority > 0 && CO->CANmodule[0]->CANnormal) {
+                CO_errorReport(CO->em, CO_EM_ISR_TIMER_OVERFLOW, CO_EMC_SOFTWARE_INTERNAL, 0x22400000L | OD_performance[ODA_performance_timerCycleMaxTime]);
+            }
+        }
+
+        else {
+            /* No file descriptor was processed. */
+            CO_error(0x12200000L);
+        }
+    }
+
+    return NULL;
+}
+#endif
diff --git a/canopend/src/main.cpp b/canopend/src/main.cpp
deleted file mode 100644
index 8821543..0000000
--- a/canopend/src/main.cpp
+++ /dev/null
@@ -1,454 +0,0 @@
-/*
- * CANopen main program file for Linux SocketCAN.
- *
- * @file        main
- * @author      Janez Paternoster
- * @copyright   2015 Janez Paternoster
- *
- * This file is part of CANopenSocket, a Linux implementation of CANopen
- * stack with master functionality. Project home page is
- * <https://github.com/CANopenNode/CANopenSocket>. CANopenSocket is based
- * on CANopenNode: <https://github.com/CANopenNode/CANopenNode>.
- *
- * CANopenSocket is free and open source software: you can redistribute
- * it and/or modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation, either version 2 of the
- * License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program. If not, see <http://www.gnu.org/licenses/>.
- */
-
-#include "CANopen.h"
-#include "CO_OD_storage.h"
-#include "CO_Linux_tasks.h"
-#include "CO_time.h"
-#include "application.h"
-#include <stdio.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include <string.h>
-#include <sched.h>
-#include <signal.h>
-#include <errno.h>
-#include <sys/epoll.h>
-#include <net/if.h>
-#include <linux/reboot.h>
-#include <sys/reboot.h>
-#include "CO_command.h"
-#include <pthread.h>
-/*Non canopenNode + Socket libraries*/
-#include "Robot.h"
-#include "sitStand.h"
-
-/*For master-> code SDO direct messaging*/
-// #define CO_COMMAND_SDO_BUFFER_SIZE 100000
-// #define STRING_BUFFER_SIZE (CO_COMMAND_SDO_BUFFER_SIZE * 4 + 100)
-
-#define NSEC_PER_SEC (1000000000)      /* The number of nanoseconds per second. */
-#define NSEC_PER_MSEC (1000000)        /* The number of nanoseconds per millisecond. */
-#define TMR_TASK_INTERVAL_NS (1000000) /* Interval of taskTmr in nanoseconds */
-#define TMR_TASK_OVERFLOW_US (5000)    /* Overflow detect limit for taskTmr in microseconds */
-#define INCREMENT_1MS(var) (var++)     /* Increment 1ms variable in taskTmr */
-#define NODEID (100)
-#define CANMESSAGELENGTH (100)
-/* Global variable increments each millisecond. */
-volatile uint16_t CO_timer1ms = 0U;
-
-/* Mutex is locked, when CAN is not valid (configuration state). May be used
- *  from other threads. RT threads may use CO->CANmodule[0]->CANnormal instead. */
-pthread_mutex_t CO_CAN_VALID_mtx = PTHREAD_MUTEX_INITIALIZER;
-
-/* Other variables and objects */
-static int rtPriority = -1;                          /* Real time priority, configurable by arguments. (-1=RT disabled) */
-static int mainline_epoll_fd;                        /* epoll file descriptor for mainline */
-static CO_OD_storage_t odStor;                       /* Object Dictionary storage object for CO_OD_ROM */
-static CO_OD_storage_t odStorAuto;                   /* Object Dictionary storage object for CO_OD_EEPROM */
-static char *odStorFile_rom = "od4_storage";         /* Name of the file */
-static char *odStorFile_eeprom = "od4_storage_auto"; /* Name of the file */
-static CO_time_t CO_time;                            /* Object for current time */
-int commCount = 0;
-/* Realtime thread */
-static void *rt_thread(void *arg);
-static pthread_t rt_thread_id;
-static int rt_thread_epoll_fd;
-
-/* Signal handler */
-volatile sig_atomic_t CO_endProgram = 0;
-static void sigHandler(int sig)
-{
-    CO_endProgram = 1;
-}
-
-/* Helper functions ***********************************************************/
-void CO_errExit(char *msg)
-{
-    perror(msg);
-    exit(EXIT_FAILURE);
-}
-
-/* send CANopen generic emergency message */
-void CO_error(const uint32_t info)
-{
-    CO_errorReport(CO->em, CO_EM_GENERIC_SOFTWARE_ERROR, CO_EMC_SOFTWARE_INTERNAL, info);
-    fprintf(stderr, "canopend generic error: 0x%X\n", info);
-}
-
-/******************************************************************************/
-/** Mainline and RT thread                                                   **/
-/******************************************************************************/
-int main(int argc, char *argv[])
-{
-    CO_NMT_reset_cmd_t reset = CO_RESET_NOT;
-    CO_ReturnError_t odStorStatus_rom, odStorStatus_eeprom;
-    int CANdevice0Index = 0;
-    int opt;
-    bool_t firstRun = true;
-    bool_t nodeIdFromArgs = true; /* True, if program arguments are used for CANopen Node Id */
-    int nodeId = -1;              /* Use value from Object Dictionary or set to 1..127 by arguments */
-    bool_t rebootEnable = false;  /* Configurable by arguments */
-    /*GPIO pin set up*/
-    // GPIO::GPIOManager *gp = GPIO::GPIOManager::getInstance();
-    // int pin = GPIO::GPIOConst::getInstance()->getGpioByKey(BUTTON1);
-    // gp->setDirection(pin, GPIO::INPUT);
-
-    /*set up command line arguments as variables*/
-    char CANdevice[10] = "can1"; /* change to can1 for bbb vcan0 for virtual can*/
-    nodeId = NODEID;
-    CANdevice0Index = if_nametoindex(CANdevice);
-    bool_t commandEnable = false; /* Configurable by arguments */
-    opt = 'c';
-    /* Get program options */
-    switch (opt)
-    {
-
-    case 'p':
-        rtPriority = strtol(optarg, NULL, 0);
-        break;
-
-    case 'c':
-        /* In case of empty string keep default name, just enable interface. */
-        if (strlen(optarg) != 0)
-        {
-            // CO_command_socketPath = "/tmp/CO_command_socket";
-        }
-        commandEnable = true;
-        break;
-    }
-
-    if (nodeId < 1 || nodeId > 127)
-    {
-        fprintf(stderr, "Wrong node ID (%d)\n", nodeId);
-        exit(EXIT_FAILURE);
-    }
-
-    if (rtPriority != -1 && (rtPriority < sched_get_priority_min(SCHED_FIFO) || rtPriority > sched_get_priority_max(SCHED_FIFO)))
-    {
-        fprintf(stderr, "Wrong RT priority (%d)\n", rtPriority);
-        exit(EXIT_FAILURE);
-    }
-
-    if (CANdevice0Index == 0)
-    {
-        char s[120];
-        snprintf(s, 120, "Can't find CAN device \"%s\"", CANdevice);
-        CO_errExit(s);
-    }
-
-    printf("starting CANopen device with Node ID %d(0x%02X)", nodeId, nodeId);
-
-    /* Verify, if OD structures have proper alignment of initial values */
-    if (CO_OD_RAM.FirstWord != CO_OD_RAM.LastWord)
-    {
-        fprintf(stderr, "Program init - Canopend- Error in CO_OD_RAM.\n");
-        exit(EXIT_FAILURE);
-    }
-    if (CO_OD_EEPROM.FirstWord != CO_OD_EEPROM.LastWord)
-    {
-        fprintf(stderr, "Program init - Canopend - Error in CO_OD_EEPROM.\n");
-        exit(EXIT_FAILURE);
-    }
-    if (CO_OD_ROM.FirstWord != CO_OD_ROM.LastWord)
-    {
-        fprintf(stderr, "Program init - Canopend - Error in CO_OD_ROM.\n");
-        exit(EXIT_FAILURE);
-    }
-
-    /* initialize Object Dictionary storage */
-    odStorStatus_rom = CO_OD_storage_init(&odStor, (uint8_t *)&CO_OD_ROM, sizeof(CO_OD_ROM), odStorFile_rom);
-    odStorStatus_eeprom = CO_OD_storage_init(&odStorAuto, (uint8_t *)&CO_OD_EEPROM, sizeof(CO_OD_EEPROM), odStorFile_eeprom);
-
-    /* Catch signals SIGINT and SIGTERM */
-    if (signal(SIGINT, sigHandler) == SIG_ERR)
-        CO_errExit("Program init - SIGINIT handler creation failed");
-    if (signal(SIGTERM, sigHandler) == SIG_ERR)
-        CO_errExit("Program init - SIGTERM handler creation failed");
-
-    /* increase variable each startup. Variable is automatically stored in non-volatile memory. */
-    printf(", count=%u ...\n", ++OD_powerOnCounter);
-
-    while (reset != CO_RESET_APP && reset != CO_RESET_QUIT && CO_endProgram == 0)
-    {
-        /* CANopen communication reset - initialize CANopen objects *******************/
-        CO_ReturnError_t err;
-
-        printf("Canopend- communication reset ...\n");
-
-        /* Wait other threads (command interface). */
-        pthread_mutex_lock(&CO_CAN_VALID_mtx);
-
-        /* Wait rt_thread. */
-        if (!firstRun)
-        {
-            CO_LOCK_OD();
-            CO->CANmodule[0]->CANnormal = false;
-            CO_UNLOCK_OD();
-        }
-
-        /* Enter CAN configuration. */
-        CO_CANsetConfigurationMode(CANdevice0Index);
-
-        /* initialize CANopen */
-        if (!nodeIdFromArgs)
-        {
-            /* use value from Object dictionary, if not set by program arguments */
-            nodeId = OD_CANNodeID;
-        }
-        err = CO_init(CANdevice0Index, nodeId, 0);
-        if (err != CO_ERROR_NO)
-        {
-            char s[120];
-            snprintf(s, 120, "Communication reset - CANopen initialization failed, err=%d", err);
-            CO_errExit(s);
-        }
-
-        /* initialize OD objects 1010 and 1011 and verify errors. */
-        CO_OD_configure(CO->SDO[0], OD_H1010_STORE_PARAM_FUNC, CO_ODF_1010, (void *)&odStor, 0, 0U);
-        CO_OD_configure(CO->SDO[0], OD_H1011_REST_PARAM_FUNC, CO_ODF_1011, (void *)&odStor, 0, 0U);
-        if (odStorStatus_rom != CO_ERROR_NO)
-        {
-            CO_errorReport(CO->em, CO_EM_NON_VOLATILE_MEMORY, CO_EMC_HARDWARE, (uint32_t)odStorStatus_rom);
-        }
-        if (odStorStatus_eeprom != CO_ERROR_NO)
-        {
-            CO_errorReport(CO->em, CO_EM_NON_VOLATILE_MEMORY, CO_EMC_HARDWARE, (uint32_t)odStorStatus_eeprom + 1000);
-        }
-
-        /* Configure callback functions for task control */
-        CO_EM_initCallback(CO->em, taskMain_cbSignal);
-        CO_SDO_initCallback(CO->SDO[0], taskMain_cbSignal);
-        CO_SDOclient_initCallback(CO->SDOclient, taskMain_cbSignal);
-
-        /* Initialize time */
-        CO_time_init(&CO_time, CO->SDO[0], &OD_time.epochTimeBaseMs, &OD_time.epochTimeOffsetMs, 0x2130);
-
-        /* First time only initialization. */
-        if (firstRun)
-        {
-            firstRun = false;
-
-            /* Configure epoll for mainline */
-            mainline_epoll_fd = epoll_create(4);
-            if (mainline_epoll_fd == -1)
-                CO_errExit("Program init - epoll_create mainline failed");
-
-            /* Init mainline */
-            taskMain_init(mainline_epoll_fd, &OD_performance[ODA_performance_mainCycleMaxTime]);
-            /* Configure epoll for rt_thread */
-            rt_thread_epoll_fd = epoll_create(2);
-            if (rt_thread_epoll_fd == -1)
-                CO_errExit("Program init - epoll_create rt_thread failed");
-
-            /* Init taskRT */
-            CANrx_taskTmr_init(rt_thread_epoll_fd, TMR_TASK_INTERVAL_NS, &OD_performance[ODA_performance_timerCycleMaxTime]);
-
-            OD_performance[ODA_performance_timerCycleTime] = TMR_TASK_INTERVAL_NS / 1000; /* informative */
-
-            /* Create rt_thread */
-            if (pthread_create(&rt_thread_id, NULL, rt_thread, NULL) != 0)
-                CO_errExit("Program init - rt_thread creation failed");
-
-            /* Set priority for rt_thread */
-            if (rtPriority > 0)
-            {
-                struct sched_param param;
-
-                param.sched_priority = rtPriority;
-                if (pthread_setschedparam(rt_thread_id, SCHED_FIFO, &param) != 0)
-                    CO_errExit("Program init - rt_thread set scheduler failed");
-            }
-
-            /* Initialize socket command interface */
-            if (commandEnable)
-            {
-                if (CO_command_init() != 0)
-                {
-                    CO_errExit("Socket command interface initialization failed");
-                }
-                printf("Canopend - Command interface on socket '%s' started ...\n", CO_command_socketPath);
-            }
-
-            /* Execute optional additional application code */
-            app_programStart();
-        }
-
-        /* Execute optional additional application code */
-        app_communicationReset();
-
-        /* start CAN */
-        CO_CANsetNormalMode(CO->CANmodule[0]);
-        pthread_mutex_unlock(&CO_CAN_VALID_mtx);
-
-        reset = CO_RESET_NOT;
-        /*State machine testing 123*/
-        // Create Statemachine Object -> will be loaded by taskmanager in end program.
-        Robot exo;
-        sitStand sitStandMachine;
-        sitStandMachine.initRobot(&exo);
-        sitStandMachine.init();
-        sitStandMachine.activate();
-        printf("Canopend- running ...\n");
-        while (reset == CO_RESET_NOT && CO_endProgram == 0)
-        {
-            /* loop for normal program execution ******************************************/
-            int ready;
-            int first = 0;
-            struct epoll_event ev;
-
-            ready = epoll_wait(mainline_epoll_fd, &ev, 1, -1);
-
-            if (ready != 1)
-            {
-                if (errno != EINTR)
-                {
-                    CO_error(0x11100000L + errno);
-                }
-            }
-
-            else if (taskMain_process(ev.data.fd, &reset, CO_timer1ms))
-            {
-                uint16_t timer1msDiff;
-                static uint16_t tmr1msPrev = 0;
-
-                /* Calculate time difference */
-                timer1msDiff = CO_timer1ms - tmr1msPrev;
-                tmr1msPrev = CO_timer1ms;
-
-                /* Execute optional additional application code */
-                // Update loop counter -> Can run in Async or RT thread for faster execution.
-                sitStandMachine.hwStateUpdate();
-                sitStandMachine.update();
-                // app_programAsync(timer1msDiff);
-
-                CO_OD_storage_autoSave(&odStorAuto, CO_timer1ms, 60000);
-            }
-
-            else
-            {
-                /* No file descriptor was processed. */
-                CO_error(0x11200000L);
-                /* CHANGE TO FILE!*/
-            }
-        }
-    }
-
-    /* program exit ***************************************************************/
-    /* join threads */
-    if (commandEnable)
-    {
-        if (CO_command_clear() != 0)
-        {
-            CO_errExit("Socket command interface removal failed");
-        }
-    }
-
-    CO_endProgram = 1;
-    if (pthread_join(rt_thread_id, NULL) != 0)
-    {
-        CO_errExit("Program end - pthread_join failed");
-    }
-
-    /* Execute optional additional application code */
-    app_programEnd();
-
-    /* Store CO_OD_EEPROM */
-    CO_OD_storage_autoSave(&odStorAuto, 0, 0);
-    CO_OD_storage_autoSaveClose(&odStorAuto);
-
-    /* delete objects from memory */
-    CANrx_taskTmr_close();
-    taskMain_close();
-    CO_delete(CANdevice0Index);
-
-    printf("Canopend on %s (nodeId=0x%02X) - finished.\n\n", CANdevice, nodeId);
-    /* Flush all buffers (and reboot) */
-    if (rebootEnable && reset == CO_RESET_APP)
-    {
-        sync();
-        if (reboot(LINUX_REBOOT_CMD_RESTART) != 0)
-        {
-            CO_errExit("Program end - reboot failed");
-        }
-    }
-
-    exit(EXIT_SUCCESS);
-}
-
-/* Realtime thread for CAN receive and taskTmr ********************************/
-static void *rt_thread(void *arg)
-{
-    /* Endless loop */
-    while (CO_endProgram == 0)
-    {
-        int ready;
-        struct epoll_event ev;
-
-        ready = epoll_wait(rt_thread_epoll_fd, &ev, 1, -1);
-
-        if (ready != 1)
-        {
-            if (errno != EINTR)
-            {
-                CO_error(0x12100000L + errno);
-            }
-        }
-
-        else if (CANrx_taskTmr_process(ev.data.fd))
-        {
-
-            /* code was processed in the above function. Additional code process below */
-            INCREMENT_1MS(CO_timer1ms);
-
-            /* Monitor variables with trace objects */
-            CO_time_process(&CO_time);
-#if CO_NO_TRACE > 0
-            for (i = 0; i < OD_traceEnable && i < CO_NO_TRACE; i++)
-            {
-                CO_trace_process(CO->trace[i], *CO_time.epochTimeOffsetMs);
-            }
-#endif
-
-            /* Execute optional additional application code */
-            app_program1ms();
-
-            /* Detect timer large overflow */
-            if (OD_performance[ODA_performance_timerCycleMaxTime] > TMR_TASK_OVERFLOW_US && rtPriority > 0 && CO->CANmodule[0]->CANnormal)
-            {
-                CO_errorReport(CO->em, CO_EM_ISR_TIMER_OVERFLOW, CO_EMC_SOFTWARE_INTERNAL, 0x22400000L | OD_performance[ODA_performance_timerCycleMaxTime]);
-            }
-        }
-
-        else
-        {
-            /* No file descriptor was processed. */
-            CO_error(0x12200000L);
-        }
-    }
-
-    return NULL;
-}
diff --git a/canopend/src/pinread.cpp b/canopend/src/pinread.cpp
deleted file mode 100644
index 0662f83..0000000
--- a/canopend/src/pinread.cpp
+++ /dev/null
@@ -1,26 +0,0 @@
-//
-//
-//
-#include <iostream>
-#include "GPIO/GPIOManager.h"
-#include "GPIO/GPIOConst.h"
-#include <unistd.h> //for sleep
-stati char *BUTTON1 = "P9_23";
-
-void Read()
-{
-    GPIO::GPIOManager *gp = GPIO::GPIOManager::getInstance();
-    int pin = GPIO::GPIOConst::getInstance()->getGpioByKey(BUTTON1);
-
-    gp->setDirection(pin, GPIO::INPUT);
-
-    while (true)
-    {
-        printf("Pin 9.23 value: %d\n", gp->getValue(pin));
-        sleep(1);
-    }
-
-    gp->~GPIOManager();
-
-    return 0;
-}
\ No newline at end of file
diff --git a/robot/GPIOConst.cpp b/robot/GPIOConst.cpp
deleted file mode 100644
index e2d3463..0000000
--- a/robot/GPIOConst.cpp
+++ /dev/null
@@ -1,268 +0,0 @@
-/*
- * Copyright (c) 2013 Mateusz Kaczanowski
- * www.mkaczanowski.com
- *
- * Original BBIO Author Adafruit
- * Modified for BeagleBoneBlack-GPIO Mateusz Kaczanowski
- *
- * This file incorporates work covered by the following copyright and
- * permission notice, all modified code adopts the original license:
-
- * Copyright (c) 2013 Adafruit
-
- * Permission is hereby granted, free of charge, to any person obtaining a copy of
- * this software and associated documentation files (the "Software"), to deal in
- * the Software without restriction, including without limitation the rights to
- * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
- * of the Software, and to permit persons to whom the Software is furnished to do
- * so, subject to the following conditions:
-
- * The above copyright notice and this permission notice shall be included in all
- * copies or substantial portions of the Software.
-
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
- * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
- * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
- * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
- * SOFTWARE.
- */
-
-#include "./GPIOConst.h"
-#include <stdio.h>
-#include <string.h>
-
-
-namespace GPIO {
-
-/**
- * Values of the edge
- */
-const char *GPIOConst::strEdge[] = { "none", "rising", "falling", "both" };
-
-/**
- * GPIOConst singleton instance
- */
-GPIOConst* GPIOConst::instance = NULL;
-
-/**
- * Table of values for pins.
- * Table generated based on https://raw.github.com/jadonk/bonescript/master/node_modules/bonescript/bone.js
- */
-pins_t GPIOConst::pinTable[] = {
-    { "USR0", "USR0", 53, -1, -1, 1 },
-    { "USR1", "USR1", 54, -1, -1, 1 },
-    { "USR2", "USR2", 55, -1, -1, 1 },
-    { "USR3", "USR3", 56, -1, -1, 1 },
-    { "DGND", "P8_1", 0, -1, -1, -1 },
-    { "DGND", "P8_2", 0, -1, -1, -1 },
-    { "GPIO1_6", "P8_3", 38, -1, -1, 1 },
-    { "GPIO1_7", "P8_4", 39, -1, -1, 1 },
-    { "GPIO1_2", "P8_5", 34, -1, -1, 1 },
-    { "GPIO1_3", "P8_6", 35, -1, -1, 1 },
-    { "TIMER4", "P8_7", 66, -1, -1, 0 },
-    { "TIMER7", "P8_8", 67, -1, -1, 0 },
-    { "TIMER5", "P8_9", 69, -1, -1, 0 },
-    { "TIMER6", "P8_10", 68, -1, -1, 0 },
-    { "GPIO1_13", "P8_11", 45, -1, -1, 0 },
-    { "GPIO1_12", "P8_12", 44, -1, -1, 0 },
-    { "EHRPWM2B", "P8_13", 23, 4, -1, 0 },
-    { "GPIO0_26", "P8_14", 26, -1, -1, 0 },
-    { "GPIO1_15", "P8_15", 47, -1, -1, 0 },
-    { "GPIO1_14", "P8_16", 46, -1, -1, 0 },
-    { "GPIO0_27", "P8_17", 27, -1, -1, 0 },
-    { "GPIO2_1", "P8_18", 65, -1, -1, 0 },
-    { "EHRPWM2A", "P8_19", 22, 4, -1, 0 },
-    { "GPIO1_31", "P8_20", 63, -1, -1, 1 },
-    { "GPIO1_30", "P8_21", 62, -1, -1, 1 },
-    { "GPIO1_5", "P8_22", 37, -1, -1, 1 },
-    { "GPIO1_4", "P8_23", 36, -1, -1, 1 },
-    { "GPIO1_1", "P8_24", 33, -1, -1, 1 },
-    { "GPIO1_0", "P8_25", 32, -1, -1, 1 },
-    { "GPIO1_29", "P8_26", 61, -1, -1, 0 },
-    { "GPIO2_22", "P8_27", 86, -1, -1, 1 },
-    { "GPIO2_24", "P8_28", 88, -1, -1, 1 },
-    { "GPIO2_23", "P8_29", 87, -1, -1, 1 },
-    { "GPIO2_25", "P8_30", 89, -1, -1, 1 },
-    { "UART5_CTSN", "P8_31", 10, -1, -1, 1 },
-    { "UART5_RTSN", "P8_32", 11, -1, -1, 1 },
-    { "UART4_RTSN", "P8_33", 9, -1, -1, 1 },
-    { "UART3_RTSN", "P8_34", 81, 2, -1, 1 },
-    { "UART4_CTSN", "P8_35", 8, -1, -1, 1 },
-    { "UART3_CTSN", "P8_36", 80, 2, -1, 1 },
-    { "UART5_TXD", "P8_37", 78, -1, -1, 1 },
-    { "UART5_RXD", "P8_38", 79, -1, -1, 1 },
-    { "GPIO2_12", "P8_39", 76, -1, -1, 1 },
-    { "GPIO2_13", "P8_40", 77, -1, -1, 1 },
-    { "GPIO2_10", "P8_41", 74, -1, -1, 1 },
-    { "GPIO2_11", "P8_42", 75, -1, -1, 1 },
-    { "GPIO2_8", "P8_43", 72, -1, -1, 1 },
-    { "GPIO2_9", "P8_44", 73, -1, -1, 1 },
-    { "GPIO2_6", "P8_45", 70, 3, -1, 1 },
-    { "GPIO2_7", "P8_46", 71, 3, -1, 1 },
-    { "DGND", "P9_1", 0, -1, -1, -1 },
-    { "DGND", "P9_2", 0, -1, -1, -1 },
-    { "VDD_3V3", "P9_3", 0, -1, -1, -1 },
-    { "VDD_3V3", "P9_4", 0, -1, -1, -1 },
-    { "VDD_5V", "P9_5", 0, -1, -1, -1 },
-    { "VDD_5V", "P9_6", 0, -1, -1, -1 },
-    { "SYS_5V", "P9_7", 0, -1, -1, -1 },
-    { "SYS_5V", "P9_8", 0, -1, -1, -1 },
-    { "PWR_BUT", "P9_9", 0, -1, -1, -1 },
-    {"SYS_RESETn", "P9_10", 0, -1, -1, -1 },
-    { "UART4_RXD", "P9_11", 30, -1, -1, 0 },
-    { "GPIO1_28", "P9_12", 60, -1, -1, 0 },
-    { "UART4_TXD", "P9_13", 31, -1, -1, 0 },
-    { "EHRPWM1A", "P9_14", 50, 6, -1, 0 },
-    { "GPIO1_16", "P9_15", 48, -1, -1, 0 },
-    { "EHRPWM1B", "P9_16", 51, 6, -1, 0 },
-    { "I2C1_SCL", "P9_17", 5, -1, -1, 0 },
-    { "I2C1_SDA", "P9_18", 4, -1, -1, 0 },
-    { "I2C2_SCL", "P9_19", 13, -1, -1, 1 },
-    { "I2C2_SDA", "P9_20", 12, -1, -1, 1 },
-    { "UART2_TXD", "P9_21", 3, 3, -1, 0 },
-    { "UART2_RXD", "P9_22", 2, 3, -1, 0 },
-    { "GPIO1_17", "P9_23", 49, -1, -1, 0 },
-    { "UART1_TXD", "P9_24", 15, -1, -1, 0 },
-    { "GPIO3_21", "P9_25", 117, -1, -1, 1 },
-    { "UART1_RXD", "P9_26", 14, -1, -1, 0 },
-    { "GPIO3_19", "P9_27", 115, -1, -1, 0 },
-    { "SPI1_CS0", "P9_28", 113, 4, -1, 1 },
-    { "SPI1_D0", "P9_29", 111, 1, -1, 1 },
-    { "SPI1_D1", "P9_30", 112, -1, -1, 0 },
-    { "SPI1_SCLK", "P9_31", 110, 1, -1, 1 },
-    { "VDD_ADC", "P9_32", 0, -1, -1, -1 },
-    { "AIN4", "P9_33", 0, -1, 4, -1 },
-    { "GNDA_ADC", "P9_34", 0, -1, -1, -1 },
-    { "AIN6", "P9_35", 0, -1, 6, -1 },
-    { "AIN5", "P9_36", 0, -1, 5, -1 },
-    { "AIN2", "P9_37", 0, -1, 2, -1 },
-    { "AIN3", "P9_38", 0, -1, 3, -1 },
-    { "AIN0", "P9_39", 0, -1, 0, -1 },
-    { "AIN1", "P9_40", 0, -1, 1, -1 },
-    { "CLKOUT2", "P9_41", 20, -1, -1, 0 },
-    { "GPIO0_7", "P9_42", 7, 0, -1, 0 },
-    { "DGND", "P9_43", 0, -1, -1, -1 },
-    { "DGND", "P9_44", 0, -1, -1, -1 },
-    { "DGND", "P9_45", 0, -1, -1, -1 },
-    { "DGND", "P9_46", 0, -1, -1, -1 },
-    { NULL, NULL, 0 }
-};
-
-/**
- * Returns the GPIOConst instance
- */
-GPIOConst* GPIOConst::getInstance() {
-  if (instance == NULL) {
-    instance = new GPIOConst();
-  }
-
-  return instance;
-}
-
-/**
- * Constructor
- */
-GPIOConst::GPIOConst() {
-}
-
-/**
- * Destructor
- */
-GPIOConst::~GPIOConst() {
-}
-
-/**
- * Get gpio pin number by key i.e "P8_10"
- */
-int GPIOConst::getGpioByKey(const char *key) {
-  pins_t *p;
-  for (p = pinTable; p->key != NULL; ++p) {
-    if (strcmp(p->key, key) == 0) {
-      return p->gpio;
-    }
-  }
-
-  return 0;
-}
-
-/**
- * Get gpio number by name i.e "GPIO0_7"
- */
-int GPIOConst::getGpioByName(const char *name) {
-  pins_t *p;
-  for (p = pinTable; p->name != NULL; ++p) {
-    if (strcmp(p->name, name) == 0) {
-      return p->gpio;
-    }
-  }
-
-  return 0;
-}
-
-/**
- * Get GPIO name by pin number
- */
-const char* GPIOConst::getGpioNameByPin(unsigned int pin) {
-  pins_t *p;
-
-  for (p = pinTable; p->name != NULL; ++p) {
-    if (p->gpio == pin) {
-      return p->name;
-    }
-  }
-
-  return "";
-}
-
-/**
- * Get GPIO key by pin number
- */
-const char* GPIOConst::getGpioKeyByPin(unsigned int pin) {
-  pins_t *p;
-
-  for (p = pinTable; p->name != NULL; ++p) {
-    if (p->gpio == pin) {
-      return p->key;
-    }
-  }
-
-  return "";
-}
-
-/**
- * Get edge value by index [0, 3]
- */
-const char* GPIOConst::getEdgeValueByIndex(unsigned int index) {
-  return strEdge[index];
-}
-
-/**
- * Get edge index by edge name
- */
-int GPIOConst::getEdgeIndexByValue(const char* value) {
-  for (int i = 0; i < static_cast<int>(sizeof(strEdge)); i++) {
-    if (strcmp(strEdge[i], value) == 0)
-      return i;
-  }
-
-  return -1;
-}
-
-/**
- * Is the pin allocated by default
- * refering to https://github.com/derekmolloy/boneDeviceTree/tree/master/docs
- */
-int GPIOConst::isPinAllocatedByDefault(unsigned int pin) {
-  pins_t *p;
-
-  for (p = pinTable; p->name != NULL; ++p) {
-    if (p->gpio == pin) {
-      return p->isAllocatedByDefault;
-    }
-  }
-
-  return 0;
-}
-} /* namespace GPIO */
diff --git a/robot/GPIOConst.h b/robot/GPIOConst.h
deleted file mode 100644
index 7e86602..0000000
--- a/robot/GPIOConst.h
+++ /dev/null
@@ -1,76 +0,0 @@
-/*
- * Copyright (c) 2013 Mateusz Kaczanowski
- * www.mkaczanowski.com
- *
- * Original BBIO Author Adafruit
- * Modified for BeagleBoneBlack-GPIO Mateusz Kaczanowski
- *
- * This file incorporates work covered by the following copyright and
- * permission notice, all modified code adopts the original license:
-
- * Copyright (c) 2013 Adafruit
-
- * Permission is hereby granted, free of charge, to any person obtaining a copy of
- * this software and associated documentation files (the "Software"), to deal in
- * the Software without restriction, including without limitation the rights to
- * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
- * of the Software, and to permit persons to whom the Software is furnished to do
- * so, subject to the following conditions:
-
- * The above copyright notice and this permission notice shall be included in all
- * copies or substantial portions of the Software.
-
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
- * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
- * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
- * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
- * SOFTWARE.
- */
-
-#ifndef BEAGLEBONEBLACK_GPIO_SRC_GPIO_GPIOCONST_H_
-#define BEAGLEBONEBLACK_GPIO_SRC_GPIO_GPIOCONST_H_
-
-#ifdef QBEAGLEBONEBLACKGPIO_LIBRARY
-    #include <qbeagleboneblackgpio_global.h>
-#endif
-
-namespace GPIO {
-
-typedef struct pins_t {
-  const char *name;
-  const char *key;
-  unsigned int gpio;
-  int pwm_mux_mode;
-  int ain;
-  int isAllocatedByDefault;
-} pins_t;
-
-class
-        #ifdef QBEAGLEBONEBLACKGPIO_LIBRARY
-        QBEAGLEBONEBLACKGPIOSHARED_EXPORT
-        #endif
-
-        GPIOConst {
- public:
-  GPIOConst();
-  virtual ~GPIOConst();
-
-  static GPIOConst* getInstance();
-  int getGpioByKey(const char *key);
-  int getGpioByName(const char *name);
-  const char* getGpioNameByPin(unsigned int pin);
-  const char* getGpioKeyByPin(unsigned int pin);
-  const char* getEdgeValueByIndex(unsigned int index);
-  int getEdgeIndexByValue(const char* value);
-  int isPinAllocatedByDefault(unsigned int pin);
-
- private:
-  static pins_t pinTable[97];
-  static const char* strEdge[4];
-  static GPIOConst* instance;
-};
-
-} /* namespace GPIO */
-#endif  // BEAGLEBONEBLACK_GPIO_SRC_GPIO_GPIOCONST_H_
diff --git a/robot/GPIOManager.cpp b/robot/GPIOManager.cpp
deleted file mode 100644
index a8e7d0e..0000000
--- a/robot/GPIOManager.cpp
+++ /dev/null
@@ -1,300 +0,0 @@
-/*
- * Copyright (c) 2013 Mateusz Kaczanowski
- * www.mkaczanowski.com
- *
- * Permission is hereby granted, free of charge, to any person obtaining a copy of
- * this software and associated documentation files (the "Software"), to deal in
- * the Software without restriction, including without limitation the rights to
- * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
- * of the Software, and to permit persons to whom the Software is furnished to do
- * so, subject to the following conditions:
-
- * The above copyright notice and this permission notice shall be included in all
- * copies or substantial portions of the Software.
-
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
- * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
- * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
- * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
- * SOFTWARE.
- */
-
-#include "./GPIOManager.h"
-
-#include <unistd.h>
-#include <fcntl.h>
-#include <sys/epoll.h>
-#include <fstream>
-#include <algorithm>
-
-#include "./GPIOConst.h"
-
-namespace GPIO {
-
-/*
- * GPIOManager instance
- */
-GPIOManager* GPIOManager::instance = NULL;
-
-/**
- * Returns pointer to GPIOManager singleton instance
- */
-
-GPIOManager* GPIOManager::getInstance() {
-  if (instance == NULL) {
-
-    instance = new GPIOManager();
-  }
-
-  return instance;
-}
-
-/**
- * Constructor
- */
-GPIOManager::GPIOManager() {
-}
-
-/**
- * On destruct clean all exported pins
- */
-GPIOManager::~GPIOManager() {
-  this->clean();
-}
-
-/**
- * Export pin (equivalent to i.e echo "68" > /sys/class/gpio/export)
- */
-
-int GPIOManager::exportPin(unsigned int gpio) {
-  std::ofstream stream(SYSFS_GPIO_DIR "/export");
-
-  if (!stream) {
-    fprintf(stderr, "OPERATION FAILED: Unable to export GPIO no. %u key: %s",
-            gpio, GPIOConst::getInstance()->getGpioKeyByPin(gpio));
-    return -1;
-  }
-
-  stream << gpio;
-  stream.close();
-
-  this->exportedPins.push_back(gpio);
-
-  return 0;
-}
-
-/**
- * Unexport pin (equivalent to i.e echo "68" > /sys/class/gpio/unexport)
- */
-int GPIOManager::unexportPin(unsigned int gpio) {
-  std::ofstream stream(SYSFS_GPIO_DIR "/unexport");
-
-  if (!stream) {
-    fprintf(stderr, "OPERATION FAILED: Unable to unexport GPIO no. %u key: %s",
-            gpio, GPIOConst::getInstance()->getGpioKeyByPin(gpio));
-    return -1;
-  }
-
-  stream << gpio;
-  stream.close();
-
-  // Remove element from the list
-  this->exportedPins.erase(
-      std::remove(this->exportedPins.begin(), this->exportedPins.end(), gpio),
-      this->exportedPins.end());
-
-  return 0;
-}
-
-/**
- * Set direction (equivalent to i.e echo "in" > /sys/class/gpio68/direction)
- */
-int GPIOManager::setDirection(unsigned int gpio, DIRECTION direction) {
-  char path[50];
-  snprintf(path, sizeof(path), SYSFS_GPIO_DIR "/gpio%u/direction", gpio);
-
-  std::ofstream stream(path);
-  if (!stream) {
-    fprintf(stderr,
-            "OPERATION FAILED: Unable to set direction GPIO no. %u key: %s",
-            gpio, GPIOConst::getInstance()->getGpioKeyByPin(gpio));
-    return -1;
-  }
-
-  if (direction == OUTPUT) {
-    stream << "out";
-  } else {
-    stream << "in";
-  }
-
-  stream.close();
-
-  return 0;
-}
-
-/**
- * Get direction (equivalent to i.e cat /sys/class/gpio68/direction)
- */
-int GPIOManager::getDirection(unsigned int gpio) {
-  char path[50], direction;
-  snprintf(path, sizeof(path), SYSFS_GPIO_DIR "/gpio%u/direction", gpio);
-
-  std::ifstream stream(path);
-  if (!stream) {
-    fprintf(stderr,
-            "OPERATION FAILED: Unable to get direction GPIO no. %u key: %s",
-            gpio, GPIOConst::getInstance()->getGpioKeyByPin(gpio));
-    return -1;
-  }
-
-  stream >> direction;
-
-  stream.close();
-
-  return (direction == 'i') ? INPUT : OUTPUT;
-}
-
-/**
- * Set value (equivalent to i.e echo "1" > /sys/class/gpio68/value)
- */
-int GPIOManager::setValue(unsigned int gpio, PIN_VALUE value) {
-  char path[50];
-  snprintf(path, sizeof(path), SYSFS_GPIO_DIR "/gpio%u/value", gpio);
-
-  std::ofstream stream(path);
-  if (!stream) {
-    fprintf(stderr, "OPERATION FAILED: Unable to set value GPIO no. %u key: %s",
-            gpio, GPIOConst::getInstance()->getGpioKeyByPin(gpio));
-    return -1;
-  }
-
-  stream << value;
-  stream.close();
-
-  return 0;
-}
-
-/**
- * Get value (equivalent to i.e cat /sys/class/gpio68/value)
- */
-int GPIOManager::getValue(unsigned int gpio) {
-  char path[50], value;
-  snprintf(path, sizeof(path), SYSFS_GPIO_DIR "/gpio%u/value", gpio);
-
-  std::ifstream stream(path);
-  if (!stream) {
-    fprintf(stderr, "OPERATION FAILED: Unable to get value GPIO no. %u key: %s",
-            gpio, GPIOConst::getInstance()->getGpioKeyByPin(gpio));
-    return -1;
-  }
-
-  stream >> value;
-  stream.close();
-
-  return (value == '1') ? HIGH : LOW;
-}
-
-/**
- * Set edge (equivalent to i.e echo "rising" > /sys/class/gpio68/edge)
- */
-int GPIOManager::setEdge(unsigned int gpio, EDGE_VALUE value) {
-  char path[50];
-  snprintf(path, sizeof(path), SYSFS_GPIO_DIR "/gpio%d/edge", gpio);
-
-  std::ofstream stream(path);
-  if (!stream) {
-    fprintf(stderr, "OPERATION FAILED: Unable to set edge GPIO no. %d key: %s",
-            gpio, GPIOConst::getInstance()->getGpioKeyByPin(gpio));
-    return -1;
-  }
-
-  stream << GPIOConst::getInstance()->getEdgeValueByIndex(value);
-  stream.close();
-
-  return 0;
-}
-
-/**
- * Get edge (equivalent to i.e cat /sys/class/gpio68/edge)
- */
-int GPIOManager::getEdge(unsigned int gpio) {
-  char path[50], value[7];
-  snprintf(path, sizeof(path), SYSFS_GPIO_DIR "/gpio%u/edge", gpio);
-
-  std::ifstream stream(path);
-  if (!stream) {
-    fprintf(stderr, "OPERATION FAILED: Unable to get value GPIO no. %u key: %s",
-            gpio, GPIOConst::getInstance()->getGpioKeyByPin(gpio));
-    return -1;
-  }
-
-  stream >> value;
-  stream.close();
-
-  return GPIOConst::getInstance()->getEdgeIndexByValue(value);
-}
-
-/**
- * Wait for edge event
- */
-int GPIOManager::waitForEdge(unsigned int gpio, EDGE_VALUE value) {
-  char path[50], buf;
-  int efd, fd;
-  struct epoll_event events, ev;
-
-  snprintf(path, sizeof(path), SYSFS_GPIO_DIR "/gpio%u/value", gpio);
-
-  //The following lines were commented out for more efficient polling
-  //this->exportPin(gpio);
-  //this->setDirection(gpio, INPUT);
-  //this->setEdge(gpio, value);
-
-  // Get value file descriptor
-  fd = open(path, O_RDONLY | O_NONBLOCK);
-
-  // Create epoll instance
-  efd = epoll_create(1);
-
-  // Fill the event structure and register
-  ev.data.fd = fd;
-  ev.events = EPOLLIN | EPOLLET | EPOLLPRI;
-
-  epoll_ctl(efd, EPOLL_CTL_ADD, fd, &ev);
-
-  // Ignore the first read (initial value)
-  for (int i = 0; i < 2; i++) {
-    if ((epoll_wait(efd, &events, 1, -1)) == -1) {
-      return -1;
-    }
-  }
-
-  lseek(events.data.fd, 0, SEEK_SET);
-  if (read(events.data.fd, &buf, sizeof(buf)) != 1) {
-    return -1;
-  }
-
-  close(efd);
-  close(fd);
-
-  return (buf & 1);
-}
-
-/**
- * Count already exported pins
- */
-int GPIOManager::countExportedPins() {
-  return this->exportedPins.size();
-}
-
-/**
- * Unexport all of already exported pins
- */
-void GPIOManager::clean() {
-  for (int i = 0; i < static_cast<int>(this->exportedPins.size()); i++) {
-    this->unexportPin(this->exportedPins[i]);
-  }
-}
-
-} /* namespace GPIO */
diff --git a/robot/GPIOManager.h b/robot/GPIOManager.h
deleted file mode 100644
index 49d0a1a..0000000
--- a/robot/GPIOManager.h
+++ /dev/null
@@ -1,83 +0,0 @@
-/*
- * Copyright (c) 2013 Mateusz Kaczanowski
- * www.mkaczanowski.com
- *
- * Permission is hereby granted, free of charge, to any person obtaining a copy of
- * this software and associated documentation files (the "Software"), to deal in
- * the Software without restriction, including without limitation the rights to
- * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
- * of the Software, and to permit persons to whom the Software is furnished to do
- * so, subject to the following conditions:
-
- * The above copyright notice and this permission notice shall be included in all
- * copies or substantial portions of the Software.
-
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
- * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
- * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
- * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
- * SOFTWARE.
- */
-
-#ifndef BEAGLEBONEBLACK_GPIO_SRC_GPIO_GPIOMANAGER_H_
-#define BEAGLEBONEBLACK_GPIO_SRC_GPIO_GPIOMANAGER_H_
-
-
-#ifdef QBEAGLEBONEBLACKGPIO_LIBRARY
-    #include <qbeagleboneblackgpio_global.h>
-#endif
-
-
-#define SYSFS_GPIO_DIR "/sys/class/gpio"
-#include <vector>
-
-namespace GPIO {
-
-enum DIRECTION {
-  INPUT = 0,
-  OUTPUT = 1
-};
-
-enum PIN_VALUE {
-  LOW = 0,
-  HIGH = 1
-};
-
-enum EDGE_VALUE {
-  NONE = 0,
-  RISING = 1,
-  FALLING = 2,
-  BOTH = 3
-};
-
-class
-        #ifdef QBEAGLEBONEBLACKGPIO_LIBRARY
-        QBEAGLEBONEBLACKGPIOSHARED_EXPORT
-        #endif
-
-        GPIOManager {
- public:
-  GPIOManager();
-  virtual ~GPIOManager();
-
-  static GPIOManager* getInstance();
-  int exportPin(unsigned int gpio);
-  int unexportPin(unsigned int gpio);
-  int setDirection(unsigned int gpio, DIRECTION direction);
-  int getDirection(unsigned int gpio);
-  int setValue(unsigned int gpio, PIN_VALUE value);
-  int getValue(unsigned int gpio);
-  int setEdge(unsigned int gpio, EDGE_VALUE value);
-  int getEdge(unsigned int gpio);
-  int waitForEdge(unsigned int gpio, EDGE_VALUE value);
-  int countExportedPins();
-  void clean();
- private:
-  static GPIOManager* instance;
-  std::vector<unsigned int> exportedPins;
-};
-
-} /* namespace GPIO */
-#endif  // BEAGLEBONEBLACK_GPIO_SRC_GPIO_GPIOMANAGER_H_
diff --git a/robot/Joint.cpp b/robot/Joint.cpp
deleted file mode 100644
index b958bf5..0000000
--- a/robot/Joint.cpp
+++ /dev/null
@@ -1,341 +0,0 @@
-//
-// Created by William Campbell on 2019-07-24.
-//
-#include "CANopen.h"
-#include "Joint.h"
-#include <stdlib.h>
-#include <string>
-#include <math.h>
-
-//Node ID for the 4 joints
-#define LHIP (1)
-#define LKNEE (2)
-#define RHIP (3)
-#define RKNEE (4)
-//Knee motor reading and corresponding angle. Used for mapping between degree and motor values.
-#define KNEE_MOTOR_POS1 (250880)
-#define KNEE_MOTOR_DEG1 (90)
-#define KNEE_MOTOR_POS2 (0)
-#define KNEE_MOTOR_DEG2 (0)
-//Hip motor reading and corresponding angle. Used for mapping between degree and motor values.
-#define HIP_MOTOR_POS1 (250880)
-#define HIP_MOTOR_DEG1 (90)
-#define HIP_MOTOR_POS2 (0)
-#define HIP_MOTOR_DEG2 (180)
-const int STRING_LENGTH = 50;
-// For control word bitFlip functions
-#define NOFLIP (100)
-#define BITHIGH (1)
-#define BITLOW (0)
-
-Joint::Joint()
-{
-    //Default constructor - SHOULD THROW AN ERROR
-    q = 0;
-    id = 0;
-    // THESE MUST BE HARD SET AT OBJECT INITIALIZATION
-    maxq = KNEE_MOTOR_POS1*2;
-    minq = 0;
-    // set position arrayIndex to 0;
-    arrayIndex = 0;
-    bitFlipState = NOFLIP;
-}
-
-Joint::Joint(float q_init, int ID)
-{
-    cout << "Initializing joint WITH INPUTS \n";
-    q = q_init;
-    id = ID;
-}
-void Joint::setTrajectories(void)
-{
-    double posTrajectoriesDeg[NUM_TRAJ_POINTS] = {
-        18.19,
-        20.59,
-        32.71,
-        53.84,
-        76.85,
-        93.64,
-        100.35,
-        98.88,
-        93.91,
-        90.07,
-        89.20};
-    double negTrajectoriesDeg[NUM_TRAJ_POINTS] = {
-        89.20,
-        90.07,
-        93.91,
-        98.88,
-        100.35,
-        93.64,
-        76.85,
-        53.84,
-        32.71,
-        20.59,
-        18.19};
-    double hipposTrajectoriesDeg[NUM_TRAJ_POINTS] = {
-        171.59,
-        169.97,
-        147.06,
-        147.06,
-        130.51,
-        117.26,
-        109.84,
-        107.45,
-        107.89,
-        108.86,
-        109.13};
-    double hipnegTrajectoriesDeg[NUM_TRAJ_POINTS] = {
-        109.13,
-        108.86,
-        107.89,
-        107.45,
-        109.84,
-        117.26,
-        130.51,
-        147.06,
-        147.06,
-        169.97,
-        171.59};
-    if (this->id == 2 || this->id == 4)
-    {
-        motorPosArrayConverter(posTrajectoriesDeg, this->posTrajectories, NUM_TRAJ_POINTS, this->id);
-        motorPosArrayConverter(negTrajectoriesDeg, this->negTrajectories, NUM_TRAJ_POINTS, this->id);
-    }
-    else
-    {
-        motorPosArrayConverter(hipposTrajectoriesDeg, this->posTrajectories, NUM_TRAJ_POINTS, this->id);
-        motorPosArrayConverter(hipnegTrajectoriesDeg, this->negTrajectories, NUM_TRAJ_POINTS, this->id);
-    }
-}
-void Joint::getTrajectorie()
-{
-    printf("~~~~~~~~~~~~~~~~~\n");
-    printf("TRajectories for joint %d", this->id);
-
-    for (int i = 0; i < NUM_TRAJ_POINTS; i++)
-    {
-        printf(" Trajectory %d: %lu", i, this->posTrajectories[i]);
-    }
-}
-void Joint::incrementIndex()
-{
-    arrayIndex++;
-}
-void Joint::zeroIndex()
-{
-    arrayIndex = 0;
-}
-int Joint::getIndex()
-{
-    return arrayIndex;
-}
-/*Helper functions for motor deg to command conversion*/
-// TODO -> don't use this and only use trajectory function
-//Used to convert position array from degrees to motors counts as used in CANopen
-void Joint::motorPosArrayConverter(double origArr[], long newArr[], int arrSize, int nodeid)
-{
-    double A = 0;
-    double B = 0;
-
-    if (nodeid == 1 || nodeid == 3)
-    {
-        calcAB(HIP_MOTOR_POS1, HIP_MOTOR_DEG1, HIP_MOTOR_POS2, HIP_MOTOR_DEG2, &A, &B);
-    }
-
-    if (nodeid == 2 || nodeid == 4)
-    {
-        calcAB(KNEE_MOTOR_POS1, KNEE_MOTOR_DEG1, KNEE_MOTOR_POS2, KNEE_MOTOR_DEG2, &A, &B);
-    }
-    for (int i = 0; i < arrSize; i++)
-    {
-        long solution = lround(origArr[i] * A + B);
-        newArr[i] = solution;
-    }
-}
-void Joint::motorPosConverter(double origDeg, long newMotorCmnd, int nodeid)
-{
-    double A = 0;
-    double B = 0;
-
-    if (nodeid == 1 || nodeid == 3)
-    {
-        calcAB(HIP_MOTOR_POS1, HIP_MOTOR_DEG1, HIP_MOTOR_POS2, HIP_MOTOR_DEG2, &A, &B);
-    }
-    if (nodeid == 2 || nodeid == 4)
-    {
-        calcAB(KNEE_MOTOR_POS1, KNEE_MOTOR_DEG1, KNEE_MOTOR_POS2, KNEE_MOTOR_DEG2, &A, &B);
-    }
-
-    newMotorCmnd = (long)(A * origDeg + B);
-}
-
-//calculate A and B in the formula y=Ax+B. Use by motorPosArrayConverter()
-void Joint::calcAB(long y1, long x1, long y2, long x2, double *A, double *B)
-{
-    *A = 1.0 * (y2 - y1) / (x2 - x1);
-    // printf("A is %f\n", *A);
-    *B = 1.0 * (y1 * x2 - y2 * x1) / (x2 - x1);
-    // printf("B is %f\n", *B);
-}
-void Joint::applyPos(long qd)
-{
-    //Safety checks.
-    // Is joint where we think it is? or within safe range of it?
-    // are we trying to move to a pos within the joints limits?
-    ///// Testing for PDOs
-    printf("apply pos of %ld issued\n", qd);
-    if (qd >= minq && qd <= maxq)
-    {
-        Joint::setPos(qd);
-    }
-    else
-    {
-        cout << "Positions outside of joint limits"
-             << "\n";
-    }
-}
-void Joint::setPos(long qd)
-// TODO: 1. generalize to create .motor<motorID> dynamically
-{
-    // Set target motor position -> will send out to motors
-    if (this->id == 1)
-    {
-        CO_OD_RAM.targetMotorPositions.motor1 = qd;
-    }
-    else if (this->id == 2)
-    {
-        CO_OD_RAM.targetMotorPositions.motor2 = qd;
-    }
-    else if (this->id == 3)
-    {
-        CO_OD_RAM.targetMotorPositions.motor3 = qd;
-    }
-    else if (this->id == 4)
-    {
-        CO_OD_RAM.targetMotorPositions.motor4 = qd;
-    }
-}
-void Joint::setId(int ID)
-{
-    id = ID;
-}
-int Joint::getId()
-{
-    return id;
-}
-int Joint::getPos()
-{
-    return q;
-}
-
-void Joint::printInfo()
-{
-    cout << "Joint id number " << id << " @ pos " << q << "\n";
-}
-//// Robot motion and state update functions
-void Joint::updateJoint()
-{
-    /// Update current joint position from object dictionary
-    /// This should be internally mapped from object dictionary
-    // TODO: Construct obj dictionary entry message for this motor id
-    //CO_OD_RAM.actualMotorPositions.motor<id_goes_here>
-    if (this->id == 1)
-    {
-        q = CO_OD_RAM.actualMotorPositions.motor1;
-    }
-    else if (this->id == 2)
-    {
-        q = CO_OD_RAM.actualMotorPositions.motor2;
-    }
-    else if (this->id == 3)
-    {
-        q = CO_OD_RAM.actualMotorPositions.motor3;
-    }
-    else if (this->id == 4)
-    {
-        q = CO_OD_RAM.actualMotorPositions.motor4;
-    }
-}
-/*
- * bitflip High changes the specified control Word for this joints motor to HIGH
- * Returns true if successfull or false if not 
-*/
-bool Joint::bitflipHigh()
-{
-    //TODO: 1. Set up caseses for position, velocity and Torque controlWorkds
-    //      2. generalize to create .motor<motorID> dynamically
-    //      3. error check control word has been changed in the actual motor.
-    if(bitFlipState == BITHIGH){
-        if (this->id == 1)
-        {
-            CO_OD_RAM.controlWords.motor1 = 63;
-        }
-        else if (this->id == 2)
-        {
-            CO_OD_RAM.controlWords.motor2 = 63;
-        }
-        else if (this->id == 3)
-        {
-            CO_OD_RAM.controlWords.motor3 = 63;
-        }
-        else if (this->id == 4)
-        {
-            CO_OD_RAM.controlWords.motor4 = 63;
-        }
-        bitFlipState = NOFLIP;
-        return true;
-    }
-    else{
-        printf("FALTY DIRECTION TO BITFLIPHIGH\n");
-        return false;
-    }
-}
-/*
- * bitflip Low changes the specified control Word for this joints motor to HIGH
- * Returns true if successfull or false if not 
-*/
-bool Joint::bitflipLow()
-{
-    //TODO: 1. Set up caseses for position, velocity and Torque controlWorkds
-    //      2. generalize to create .motor<motorID> dynamically
-    //      3. error check control word has been changed in the actual motor.
-    if(bitFlipState == BITLOW||bitFlipState == NOFLIP){
-        if (this->id == 1)
-        {
-            CO_OD_RAM.controlWords.motor1 = 47;
-        }
-        else if (this->id == 2)
-        {
-            CO_OD_RAM.controlWords.motor2 = 47;
-        }
-        else if (this->id == 3)
-        {
-            CO_OD_RAM.controlWords.motor3 = 47;
-        }
-        else if (this->id == 4)
-        {
-            CO_OD_RAM.controlWords.motor4 = 47;
-        }
-        bitFlipState = BITHIGH;
-        return true;
-    }
-    else{
-        printf("FALTY DIRECTION TO BITFLIPLOW\n");
-        return false;
-    }
-}
-
-void Joint::testWrite()
-{
-    double pos = CO_OD_RAM.actualMotorPositions.motor2;
-    std::cout << "that worked actualMotorPos is:" << pos << "\n";
-    CO_OD_RAM.actualMotorPositions.motor2 = pos + 1;
-}
-
-int Joint::getBitFlipState(){
-    return bitFlipState;
-}
-void Joint::setBitFlipState(int bit){
-    bitFlipState = bit;
-}
\ No newline at end of file
diff --git a/robot/Joint.h b/robot/Joint.h
deleted file mode 100644
index 2304fca..0000000
--- a/robot/Joint.h
+++ /dev/null
@@ -1,63 +0,0 @@
-//
-// Created by William Campbell on 2019-07-30.
-//
-
-#ifndef CANOPENBEAGLE_JOINT_H
-#define CANOPENBEAGLE_JOINT_H
-
-//#include <mutex>  // For std::unique_lock
-//#include <shared_mutex>
-//#include <thread>
-#include <iostream>
-#include <unistd.h>
-#include <sys/un.h>
-#include <sys/socket.h>
-
-using namespace std;
-
-class Joint
-{
-    //Private members
-    int id;
-    float q;
-    long maxq, minq;
-    void setPos(long qd);
-    void motorPosArrayConverter(double origArr[], long newArr[], int arrSize, int nodeid);
-    void motorPosConverter(double origDeg, long newMotorCmnd, int nodeid);
-    void calcAB(long y1, long x1, long y2, long x2, double *A, double *B);
-    int arrayIndex;
-    int bitFlipState;
-    // TODO: Add other vars after initial test implimentation up and running
-    // qd, qdd,T, mode. limts, Transformation, Reduction Ratio(CONST)
-
-public:
-    //    CanDevice copley;// pointer to this joints candevice, the motor driver (COPLEY DRIVER)
-    enum
-    {
-        NUM_TRAJ_POINTS = 11
-    };
-    Joint();
-    Joint(float q_init, int ID);
-    void setId(int ID);
-    int getId();
-    void applyPos(long qd);
-    int getPos();
-    void printInfo();
-    void updateJoint();
-    void setTrajectories();
-    void testWrite();
-    bool bitflipHigh();
-    bool bitflipLow();
-    void incrementIndex();
-    int getIndex();
-    void zeroIndex();
-    void getTrajectorie();
-    int getBitFlipState();
-    void setBitFlipState(int bit);
-
-    // Make two arrays for coresponding motor commands for trajectorues
-    long posTrajectories[NUM_TRAJ_POINTS];
-    long negTrajectories[NUM_TRAJ_POINTS];
-};
-
-#endif //CAPSTONE_JOINT_H
diff --git a/robot/Robot.cpp b/robot/Robot.cpp
deleted file mode 100644
index a7d84f6..0000000
--- a/robot/Robot.cpp
+++ /dev/null
@@ -1,356 +0,0 @@
-//
-// Created by William Campbell on 2019-07-23.
-//
-
-#include "Robot.h"
-#include "CO_command.h"
-#include <unistd.h>
-#include <sys/un.h>
-#include <sys/socket.h>
-#include <string.h>
-#define CANMESSAGELENGTH (100)
-
-Robot::Robot()
-{
-    positionControl = 0;
-    cout << "Setting Robot joint initial conditions...\n";
-    // Set joint Intial positions.
-    // joints[0].applyPos(0);
-    // joints[1].applyPos(0);
-    // joints[2].applyPos(0);
-    // joints[3].applyPos(0);
-    // // Set joint IDs
-    // joints[0].setId(1);
-    // joints[1].setId(2);
-    // joints[2].setId(3);
-    // joints[3].setId(4);
-    // // Populate joint Trajectories
-    // joints[0].setTrajectories();
-    // joints[1].setTrajectories();
-    // joints[2].setTrajectories();
-    // joints[3].setTrajectories();
-    // // Set joint Intial positions to 0, Set joint IDs, Populate joint Trajectories
-    for (auto i = 0; i < 4; i++)
-    {
-        joints[i].applyPos(0);
-        joints[i].setId(i + 1);
-        joints[i].setTrajectories();
-    }
-};
-void Robot::printInfo()
-{
-    cout << "This is an X2 robot with: \n";
-    for (auto i = 0; i < 4; i++)
-    {
-        joints[i].printInfo();
-    }
-}
-void Robot::printTrajectories()
-{
-    for (auto i = 0; i < 4; i++)
-    {
-        joints[i].getTrajectorie();
-    }
-}
-void Robot::jointIncrement()
-{
-    int current;
-    for (auto i = 0; i < 4; i++)
-    {
-        current = joints[i].getPos();
-        current = current + 1;
-        joints[i].applyPos(current);
-    }
-}
-// Update all of this robots software joint positions from object dictionary
-void Robot::updateJoints()
-{
-    for (auto i = 0; i < 4; i++)
-    {
-        joints[i].updateJoint();
-    }
-}
-bool Robot::sdoMSG(void)
-{
-    char *returnMessage;
-    char SDO_Message[CANMESSAGELENGTH];
-    strcpy(SDO_Message, "[1] 100 read 0x1017 0 i16");
-    cancomm_socketFree(SDO_Message, returnMessage);
-    printf("HEart beat read!\n");
-    return true;
-}
-bool Robot::homeCalibration(void)
-{
-    char *returnMessage;
-    char SDO_MessageList[][CANMESSAGELENGTH] = {
-        "[1] 1 start",
-        "[1] 2 start",
-        "[1] 3 start",
-        "[1] 4 start",
-        "[1] 2 write 0x6060 0 i8 1",
-        "[1] 1 write 0x6060 0 i8 1",
-        "[1] 3 write 0x6060 0 i8 1",
-        "[1] 4 write 0x6060 0 i8 1",
-        "[1] 2 write 0x6081 0 i32 200000",
-        "[1] 1 write 0x6081 0 i32 200000",
-        "[1] 3 write 0x6081 0 i32 200000",
-        "[1] 4 write 0x6081 0 i32 200000",
-        "[1] 2 write 0x6083 0 i32 30000",
-        "[1] 1 write 0x6083 0 i32 30000",
-        "[1] 3 write 0x6083 0 i32 30000",
-        "[1] 4 write 0x6083 0 i32 30000",
-        "[1] 2 write 0x6084 0 i32 30000",
-        "[1] 1 write 0x6084 0 i32 30000",
-        "[1] 3 write 0x6084 0 i32 30000",
-        "[1] 4 write 0x6084 0 i32 30000",
-        "[1] 1 read 0x6063 0 i32",
-        "[1] 2 read 0x6063 0 i32",
-        "[1] 3 read 0x6063 0 i32",
-        "[1] 4 read 0x6063 0 i32",
-        "[1] 2 write 0x607A 0 i32 -280000",
-        "[1] 1 write 0x607A 0 i32 115000",
-        "[1] 4 write 0x607A 0 i32 -280000",
-        "[1] 3 write 0x607A 0 i32 115000",
-        "[1] 2 write 0x6040 0 i16 47",
-        "[1] 2 write 0x6040 0 i16 63",
-        "[1] 2 write 0x6040 0 i16 47",
-        "[1] 1 write 0x6040 0 i16 47",
-        "[1] 1 write 0x6040 0 i16 63",
-        "[1] 1 write 0x6040 0 i16 47",
-        "[1] 4 write 0x6040 0 i16 47",
-        "[1] 4 write 0x6040 0 i16 63",
-        "[1] 4 write 0x6040 0 i16 47",
-        "[1] 3 write 0x6040 0 i16 47",
-        "[1] 3 write 0x6040 0 i16 63",
-        "[1] 3 write 0x6040 0 i16 47"};
-
-    int num_of_Messages = sizeof(SDO_MessageList) / sizeof(SDO_MessageList[0]);
-    for (int i = 0; i < num_of_Messages; ++i)
-    {
-        cancomm_socketFree(SDO_MessageList[i], returnMessage);
-    }
-    sleep(5);
-    // TODO: Change sleep to check that we reached home
-    printf("Home motion complete\n");
-    char *returnMessageB;
-    char SDO_MessageListB[][CANMESSAGELENGTH] = {
-        "[1] 1 read 0x6063 0 i32",
-        "[1] 2 read 0x6063 0 i32",
-        "[1] 3 read 0x6063 0 i32",
-        "[1] 4 read 0x6063 0 i32",
-        "[1] 2 write 0x6060 0 i8 6",
-        "[1] 1 write 0x6060 0 i8 6",
-        "[1] 3 write 0x6060 0 i8 6",
-        "[1] 4 write 0x6060 0 i8 6 ",
-        "[1] 2 write 0x6098 0 i8 0",
-        "[1] 1 write 0x6098 0 i8 0",
-        "[1] 3 write 0x6098 0 i8 0",
-        "[1] 4 write 0x6098 0 i8 0",
-        "[1] 2 write 0x607C 0 i32 0",
-        "[1] 1 write 0x607C 0 i32 0",
-        "[1] 3 write 0x607C 0 i32 0",
-        "[1] 4 write 0x607C 0 i32 0",
-        "[1] 1 write 0x607D 1 i32 - 110000",
-        "[1] 1 write 0x607D 2 i32 310000",
-        "[1] 2 write 0x607D 1 i32 2000",
-        "[1] 2 write 0x607D 2 i32 280000",
-        "[1] 3 write 0x607D 1 i32 -110000",
-        "[1] 3 write 0x607D 2 i32 310000",
-        "[1] 4 write 0x607D 1 i32 2000",
-        "[1] 4 write 0x607D 2 i32 280000",
-        "[1] 2 write 0x6040 0 i16 15",
-        "[1] 2 write 0x6040 0 i16 31",
-        "[1] 2 write 0x6040 0 i16 15",
-        "[1] 4 write 0x6040 0 i16 15",
-        "[1] 4 write 0x6040 0 i16 31",
-        "[1] 4 write 0x6040 0 i16 15",
-        "[1] 3 write 0x6040 0 i16 15",
-        "[1] 3 write 0x6040 0 i16 31",
-        "[1] 3 write 0x6040 0 i16 15",
-        "[1] 1 write 0x6040 0 i16 15",
-        "[1] 1 write 0x6040 0 i16 31",
-        "[1] 1 write 0x6040 0 i16 15"};
-    for (int i = 0; i < num_of_Messages; ++i)
-    {
-        cancomm_socketFree(SDO_MessageListB[i], returnMessageB);
-    }
-    printf("Zeroing drives complete\n");
-    return true;
-}
-bool Robot::initPositionControl(void)
-{
-    char *returnMessage;
-    char SDO_MessageList[][CANMESSAGELENGTH] = {
-        "[1] 1 start",
-        "[1] 2 start",
-        "[1] 3 start",
-        "[1] 4 start",
-        "[1] 2 write 0x6060 0 i8 1",
-        "[1] 1 write 0x6060 0 i8 1",
-        "[1] 3 write 0x6060 0 i8 1",
-        "[1] 4 write 0x6060 0 i8 1",
-        "[1] 2 write 0x6081 0 i32 800000",
-        "[1] 1 write 0x6081 0 i32 800000",
-        "[1] 3 write 0x6081 0 i32 800000",
-        "[1] 4 write 0x6081 0 i32 800000",
-        "[1] 2 write 0x6083 0 i32 60000",
-        "[1] 1 write 0x6083 0 i32 60000",
-        "[1] 3 write 0x6083 0 i32 60000",
-        "[1] 4 write 0x6083 0 i32 60000",
-        "[1] 2 write 0x6084 0 i32 60000",
-        "[1] 1 write 0x6084 0 i32 60000",
-        "[1] 3 write 0x6084 0 i32 60000",
-        "[1] 4 write 0x6084 0 i32 60000"};
-    int num_of_Messages = sizeof(SDO_MessageList) / sizeof(SDO_MessageList[0]);
-    for (int i = 0; i < num_of_Messages; ++i)
-    {
-        cancomm_socketFree(SDO_MessageList[i], returnMessage);
-    }
-    printf("Motors configured for position control\n");
-    return true;
-}
-
-bool Robot::remapPDO(void)
-{
-    char *returnMessage;
-    char PDO_MessageList[][CANMESSAGELENGTH] = {
-        "[1] 1 write 0x1801 1 u32 0x80000281",
-        "[1] 2 write 0x1801 1 u32 0x80000282",
-        "[1] 3 write 0x1801 1 u32 0x80000283",
-        "[1] 4 write 0x1801 1 u32 0x80000284",
-        "[1] 1 write 0x1A01 0 u8 0",
-        "[1] 1 write 0x1801 2 u8 1",
-        "[1] 1 write 0x1A01 1 u32 0x60640020",
-        "[1] 1 write 0x1A01 2 u32 0x606C0020",
-        "[1] 1 write 0x1A01 0 u8 2",
-        "[1] 2 write 0x1A01 0 u8 0",
-        "[1] 2 write 0x1801 2 u8 1",
-        "[1] 2 write 0x1A01 1 u32 0x60640020",
-        "[1] 2 write 0x1A01 2 u32 0x606C0020",
-        "[1] 2 write 0x1A01 0 u8 2",
-        "[1] 3 write 0x1A01 0 u8 0",
-        "[1] 3 write 0x1801 2 u8 1",
-        "[1] 3 write 0x1A01 1 u32 0x60640020",
-        "[1] 3 write 0x1A01 2 u32 0x606C0020",
-        "[1] 3 write 0x1A01 0 u8 2",
-        "[1] 4 write 0x1A01 0 u8 0",
-        "[1] 4 write 0x1801 2 u8 1",
-        "[1] 4 write 0x1A01 1 u32 0x60640020",
-        "[1] 4 write 0x1A01 2 u32 0x606C0020",
-        "[1] 4 write 0x1A01 0 u8 2",
-        "[1] 1 write 0x1801 1 u32 0x281",
-        "[1] 2 write 0x1801 1 u32 0x282",
-        "[1] 3 write 0x1801 1 u32 0x283",
-        "[1] 4 write 0x1801 1 u32 0x284",
-        "[1] 1 write 0x1800 1 u32 0x80000181",
-        "[1] 2 write 0x1800 1 u32 0x80000182",
-        "[1] 3 write 0x1800 1 u32 0x80000183",
-        "[1] 4 write 0x1800 1 u32 0x80000184",
-        "[1] 1 write 0x1A00 0 u8 0",
-        "[1] 1 write 0x1800 2 u8 0xFF",
-        "[1] 1 write 0x1A00 1 u32 0x60410010",
-        "[1] 1 write 0x1A00 0 u8 1",
-        "[1] 2 write 0x1A00 0 u8 0",
-        "[1] 2 write 0x1800 2 u8 0xFF",
-        "[1] 2 write 0x1A00 1 u32 0x60410010",
-        "[1] 2 write 0x1A00 0 u8 1",
-        "[1] 3 write 0x1A00 0 u8 0",
-        "[1] 3 write 0x1800 2 u8 0xFF",
-        "[1] 3 write 0x1A00 1 u32 0x60410010",
-        "[1] 3 write 0x1A00 0 u8 1",
-        "[1] 4 write 0x1A00 0 u8 0",
-        "[1] 4 write 0x1800 2 u8 0xFF",
-        "[1] 4 write 0x1A00 1 u32 0x60410010",
-        "[1] 4 write 0x1A00 0 u8 1",
-        "[1] 1 write 0x1800 1 u32 0x181",
-        "[1] 2 write 0x1800 1 u32 0x182",
-        "[1] 3 write 0x1800 1 u32 0x183",
-        "[1] 4 write 0x1800 1 u32 0x184",
-        "[1] 1 write 0x1800 1 u32 0x80000381",
-        "[1] 2 write 0x1800 1 u32 0x80000382",
-        "[1] 3 write 0x1800 1 u32 0x80000383",
-        "[1] 4 write 0x1800 1 u32 0x80000384",
-        "[1] 1 write 0x1A00 0 u8 0",
-        "[1] 1 write 0x1800 2 u8 0x01",
-        "[1] 1 write 0x1A00 1 u32 0x60770010",
-        "[1] 1 write 0x1A00 0 u8 1",
-        "[1] 2 write 0x1A00 0 u8 0",
-        "[1] 2 write 0x1800 2 u8 0x01",
-        "[1] 2 write 0x1A00 1 u32 0x60770010",
-        "[1] 2 write 0x1A00 0 u8 1",
-        "[1] 3 write 0x1A00 0 u8 0",
-        "[1] 3 write 0x1800 2 u8 0x01",
-        "[1] 3 write 0x1A00 1 u32 0x60770010",
-        "[1] 3 write 0x1A00 0 u8 1",
-        "[1] 4 write 0x1A00 0 u8 0",
-        "[1] 4 write 0x1800 2 u8 0x01",
-        "[1] 4 write 0x1A00 1 u32 0x60770010",
-        "[1] 4 write 0x1A00 0 u8 1",
-        "[1] 1 write 0x1800 1 u32 0x381",
-        "[1] 2 write 0x1800 1 u32 0x382",
-        "[1] 3 write 0x1800 1 u32 0x383",
-        "[1] 4 write 0x1800 1 u32 0x384",
-        "[1] 1 write 0x1401 1 u32 0x80000301",
-        "[1] 2 write 0x1401 1 u32 0x80000302",
-        "[1] 3 write 0x1401 1 u32 0x80000303",
-        "[1] 4 write 0x1401 1 u32 0x80000304",
-        "[1] 1 write 0x1601 0 u8 0",
-        "[1] 1 write 0x1401 2 u8 0xFF",
-        "[1] 1 write 0x1601 1 u32 0x607A0020",
-        "[1] 1 write 0x1601 0 u8 1",
-        "[1] 2 write 0x1601 0 u8 0",
-        "[1] 2 write 0x1401 2 u8 0xFF",
-        "[1] 2 write 0x1601 1 u32 0x607A0020",
-        "[1] 2 write 0x1601 0 u8 1",
-        "[1] 3 write 0x1601 0 u8 0",
-        "[1] 3 write 0x1401 2 u8 0xFF",
-        "[1] 3 write 0x1601 1 u32 0x607A0020",
-        "[1] 3 write 0x1601 0 u8 1",
-        "[1] 4 write 0x1601 0 u8 0",
-        "[1] 4 write 0x1401 2 u8 0xFF",
-        "[1] 4 write 0x1601 1 u32 0x607A0020",
-        "[1] 4 write 0x1601 0 u8 1",
-        "[1] 1 write 0x1401 1 u32 0x301",
-        "[1] 2 write 0x1401 1 u32 0x302",
-        "[1] 3 write 0x1401 1 u32 0x303",
-        "[1] 4 write 0x1401 1 u32 0x304",
-        "[1] 1 write 0x1402 1 u32 0x80000401",
-        "[1] 2 write 0x1402 1 u32 0x80000402",
-        "[1] 3 write 0x1402 1 u32 0x80000403",
-        "[1] 4 write 0x1402 1 u32 0x80000404",
-        "[1] 1 write 0x1602 0 u8 0",
-        "[1] 1 write 0x1402 2 u8 0xFF",
-        "[1] 1 write 0x1602 1 u32 0x60FF0020",
-        "[1] 1 write 0x1602 0 u8 1",
-        "[1] 2 write 0x1602 0 u8 0",
-        "[1] 2 write 0x1402 2 u8 0xFF",
-        "[1] 2 write 0x1602 1 u32 0x60FF0020",
-        "[1] 2 write 0x1602 0 u8 1",
-        "[1] 3 write 0x1602 0 u8 0",
-        "[1] 3 write 0x1402 2 u8 0xFF",
-        "[1] 3 write 0x1602 1 u32 0x60FF0020",
-        "[1] 3 write 0x1602 0 u8 1",
-        "[1] 4 write 0x1602 0 u8 0",
-        "[1] 4 write 0x1402 2 u8 0xFF",
-        "[1] 4 write 0x1602 1 u32 0x60FF0020",
-        "[1] 4 write 0x1602 0 u8 1",
-        "[1] 1 write 0x1402 1 u32 0x401",
-        "[1] 2 write 0x1402 1 u32 0x402",
-        "[1] 3 write 0x1402 1 u32 0x403",
-        "[1] 4 write 0x1402 1 u32 0x404",
-        "[1] 1 start",
-        "[1] 2 start",
-        "[1] 3 start",
-        "[1] 4 start",
-        "[1] 1 write 0x6040 0 i16 0",
-        "[1] 2 write 0x6040 0 i16 0",
-        "[1] 3 write 0x6040 0 i16 0",
-        "[1] 4 write 0x6040 0 i16 0"};
-    int num_of_Messages = sizeof(PDO_MessageList) / sizeof(PDO_MessageList[0]);
-    //    printf("Num of messages: %d\n", num_of_Messages);
-    for (int i = 0; i < num_of_Messages; ++i)
-    {
-        cancomm_socketFree(PDO_MessageList[i], returnMessage);
-    }
-    return true;
-}
\ No newline at end of file
diff --git a/robot/Robot.h b/robot/Robot.h
deleted file mode 100644
index 8cbed17..0000000
--- a/robot/Robot.h
+++ /dev/null
@@ -1,45 +0,0 @@
-//
-// Created by William Campbell on 2019-07-30.
-//
-
-#ifndef CANOPENBEAGLE_ROBOT_H
-#define CANOPENBEAGLE_ROBOT_H
-#include "Joint.h"
-
-class Robot
-{
-private:
-    enum
-    {
-        NUM_JOINTS = 4
-    };
-
-public:
-    Robot();
-    Joint joints[NUM_JOINTS];
-    void printInfo();
-    void jointIncrement();
-    void updateJoints();
-    bool initPositionControl(void);
-    bool homeCalibration(void);
-    bool sdoMSG(void);
-    bool remapPDO(void);
-    void printTrajectories();
-
-    //canFeasat constants
-    unsigned int MAX_RECONNECTS = 10;
-    unsigned int DECIMAL = 10;
-    // Exo user buttons
-    unsigned int BUTTON_ONE = 1;
-    unsigned int BUTTON_TWO = 2;
-    unsigned int BUTTON_THREE = 3;
-    unsigned int BUTTON_FOUR = 4;
-    //Node ID for the 4 joints
-    unsigned int LHIP = 1;
-    unsigned int LKNEE = 2;
-    unsigned int RHIP = 3;
-    unsigned int RKNEE = 4;
-    int positionControl;
-};
-
-#endif //CAPSTONE_ROBOT_H
diff --git a/stateMachine/Event.cpp b/stateMachine/Event.cpp
deleted file mode 100644
index b00767e..0000000
--- a/stateMachine/Event.cpp
+++ /dev/null
@@ -1,10 +0,0 @@
-//
-// Created by William Campbell on 2019-09-24.
-//
-
-#include "Event.h"
-
-
-const char* Event::getName( void ) {
-    return name;
-};
\ No newline at end of file
diff --git a/stateMachine/Event.h b/stateMachine/Event.h
deleted file mode 100644
index 932c5d2..0000000
--- a/stateMachine/Event.h
+++ /dev/null
@@ -1,31 +0,0 @@
-//
-// Created by William Campbell on 2019-09-24.
-//
-
-#ifndef EXO_EVENT_H
-#define EXO_EVENT_H
-#include "StateMachine.h"
-#include <cstddef>
-/* Forward declarations*/
-class StateMachine;
-
-
-class Event {
-
-public:
-    StateMachine * owner;  // Pointer to the owner state machine for this event
-    /* constructor */
-    Event ( StateMachine * p, const char n[] = NULL ){
-        owner = p;
-        name = n;
-    };
-    /*Virtual check function Must be implemented for each event.*/
-    virtual bool check ( void ) = 0;
-    const char * getName( void );
-private:
-
-    const char *name;      // Pointer to the name of this event
-};
-
-
-#endif //EXO_EVENT_H
diff --git a/stateMachine/State.cpp b/stateMachine/State.cpp
deleted file mode 100644
index 1e33388..0000000
--- a/stateMachine/State.cpp
+++ /dev/null
@@ -1,27 +0,0 @@
-
-//
-// Created by William Campbell on 2019-09-24.
-//
-
-#include "State.h"
-
-/* Cyclicly check the status of this states arc list, if any return true, return that arch object*/
-Transition * State::getActiveArc( void ) {
-    int i=0;
-    while ( i<numarcs ) {
-        if ( arclist[i]->ev->check() ) return arclist[i];
-        i++;
-    }
-    return NULL;
-}
-/* Add an arc to the arc list -> done at initialization (specific for each statemachine)*/
-bool State::addArc ( Transition * t ) {
-    if ( numarcs < MAXARCS ) {
-        arclist[numarcs++] = t;
-        return true;
-    } else return false;
-};
-
-const char * State::getName( void ) {
-    return name;
-};
\ No newline at end of file
diff --git a/stateMachine/State.h b/stateMachine/State.h
deleted file mode 100644
index 3c71939..0000000
--- a/stateMachine/State.h
+++ /dev/null
@@ -1,47 +0,0 @@
-//
-// Created by William Campbell on 2019-09-24.
-//
-
-#ifndef EXO_STATE_H
-#define EXO_STATE_H
-
-#include "Transition.h"
-#include "StateMachine.h"
-#include <cstddef>
-#include <iostream>
-#define MAXARCS 20
-
-/* Forward declarations*/
-class Transition;
-class StateMachine;
-class State
-{
-
-    friend class StateMachine;
-    // A State machine class can access the private and protected members of a state class  */
-public:
-    State(StateMachine *p, const char n[] = NULL)
-    {
-        owner = p;
-        numarcs = 0;
-        name = n; // name of state
-        std::cout << "State created\n";
-    };
-    // Arc creating and accessing functions
-    bool addArc(Transition *t);
-    Transition *getActiveArc(void);
-    // Virtual functions, must be implemented by implented states (inherited classes)
-    virtual void entry(void) = 0;
-    virtual void during(void) = 0;
-    virtual void exit(void) = 0;
-
-    const char *getName(void);
-    StateMachine *owner; // Pointer to the owner state machine for this State
-
-private:
-    int numarcs;
-    Transition *arclist[MAXARCS];
-    const char *name; // Pointer to the name of this State
-};
-
-#endif //EXO_STATE_H
diff --git a/stateMachine/StateMachine.cpp b/stateMachine/StateMachine.cpp
deleted file mode 100644
index 0bff047..0000000
--- a/stateMachine/StateMachine.cpp
+++ /dev/null
@@ -1,58 +0,0 @@
-//
-// Created by William Campbell on 2019-09-24.
-//
-#include <stdio.h>
-#include <iostream>
-#include "StateMachine.h"
-//State machine constructors
-StateMachine::StateMachine(void)
-{
-    initialState = NULL;
-};
-// Set initial state to input of constructor
-StateMachine::StateMachine(State *i)
-{
-    initialState = i;
-};
-// Set the pointer of the initial state
-void StateMachine::initialize(State *i)
-{
-    initialState = i;
-    std::cout << "Initial state set\n";
-};
-State *StateMachine::getCurState(void)
-{
-    return currentState;
-}
-
-// methods
-void StateMachine::init(void)
-{
-    currentState = initialState;
-}
-void StateMachine::uninit(void)
-{
-}
-
-void StateMachine::activate(void)
-{
-    currentState = initialState;
-    currentState->entry();
-}
-void StateMachine::deactivate(void)
-{
-}
-void StateMachine::update(void)
-{
-    Transition *t = currentState->getActiveArc();
-
-    if (t != NULL)
-    {
-
-        currentState->exit();
-        currentState = t->target;
-        currentState->entry();
-    }
-
-    currentState->during();
-}
diff --git a/stateMachine/StateMachine.h b/stateMachine/StateMachine.h
deleted file mode 100644
index 8654fab..0000000
--- a/stateMachine/StateMachine.h
+++ /dev/null
@@ -1,68 +0,0 @@
-//
-// Created by William Campbell on 2019-09-24.
-//
-
-#ifndef EXO_STATEMACHINE_H
-#define EXO_STATEMACHINE_H
-#include "State.h"
-#include <cstddef>
-/* Forward declarations*/
-class State;
-
-class StateMachine
-{
-public:
-    /* State machine constructors*/
-    // No input arguments.
-    StateMachine(void);
-    // Set initial state to input of constructor
-    StateMachine(State *i);
-    // Set the pointer of the initial state
-    void initialize(State *i);
-    State *getCurState(void);
-    // methods
-    void init(void);
-    void uninit(void);
-    void activate(void);
-    void deactivate(void);
-    void update(void);
-
-private:
-    // pointers to the initial state and the current state
-    State *initialState;
-    State *currentState;
-};
-
-/*Macros to quickly define states. statemachines, events and transitions*/
-// useage: StateObject ( MyState ) * myState;
-#define StateObject(_name_)                                                  \
-    class _name_;                                                            \
-    friend class _name_;                                                     \
-    class _name_ : public State                                              \
-    {                                                                        \
-                                                                             \
-    public:                                                                  \
-        _name_(StateMachine *m, const char *name = NULL) : State(m, name){}; \
-        void entry(void);                                                    \
-        void during(void);                                                   \
-        void exit(void);                                                     \
-    };                                                                       \
-    _name_
-// useage: EventObject ( MyEvent ) * myEvent;
-#define EventObject(_name_)             \
-    class _name_;                       \
-    friend class _name_;                \
-    class _name_ : public Event         \
-    {                                   \
-                                        \
-    public:                             \
-        _name_(StateMachine *m,         \
-               const char *name = NULL) \
-            : Event(m, name){};         \
-        bool check(void);               \
-    };                                  \
-    _name_
-#define NewTransition(_from_, _event_, _to_) \
-    _from_->addArc(new Transition(_to_, _event_))
-
-#endif //EXO_STATEMACHINE_H
diff --git a/stateMachine/Transition.cpp b/stateMachine/Transition.cpp
deleted file mode 100644
index 17cd740..0000000
--- a/stateMachine/Transition.cpp
+++ /dev/null
@@ -1,10 +0,0 @@
-
-//
-// Created by William Campbell on 2019-09-24.
-//
-
-#include "Transition.h"
-
-State * Transition::getTarget ( void ) {
-    return target;
-};
\ No newline at end of file
diff --git a/stateMachine/Transition.h b/stateMachine/Transition.h
deleted file mode 100644
index 36db00e..0000000
--- a/stateMachine/Transition.h
+++ /dev/null
@@ -1,31 +0,0 @@
-//
-// Created by William Campbell on 2019-09-24.
-//
-
-#ifndef EXO_TRANSITION_H
-#define EXO_TRANSITION_H
-
-#include "StateMachine.h"
-#include "Event.h"
-#include "State.h"
-
-/* Forward declarations*/
-class State;
-class Event;
-
-class Transition {
-    friend class State;
-    friend class StateMachine;
-public:
-    /* Constructor: set state this arc targets (points towards) and the event which triggers it */
-    Transition ( State * targ, Event * e ) {
-        target = targ;
-        ev = e;
-    };
-    State * getTarget ( void );
-private:
-    Event * ev;
-    State * target;
-
-};
-#endif //EXO_TRANSITION_H
diff --git a/stateMachine/bendTest.cpp b/stateMachine/bendTest.cpp
deleted file mode 100644
index 8753307..0000000
--- a/stateMachine/bendTest.cpp
+++ /dev/null
@@ -1,428 +0,0 @@
-
-
-//
-// Created by William Campbell on 2019-09-30.
-//
-
-#include "bendTest.h"
-#include "CO_command.h"
-#define OWNER ((bendTest *)owner)
-#define POSCLEARANCE (10000)
-#define NOFLIP (100)
-#define BITHIGH (1)
-#define BITLOW (0)
-// For testing
-#define KNEE_MOTOR_POS1 (250880)
-#define KNEE_MOTOR_POS2 (0)
-
-// State Machine bendTest methods ----------------------------------------------------------
-bendTest::bendTest(void)
-{
-    // Create PRE-DESIGNED State Machine events, states and transitions
-    // StateMachine events
-    isPressed = new IsPressed(this);
-    isBentP = new IsBentP(this);
-    isBentN = new IsBentN(this);
-    // StateMache states
-    idle = new Idle(this);
-    bent = new Bent(this);
-    bendingN = new BendingN(this);
-    bendingP = new BendingP(this);
-
-    // Create Trasitions between states and events which trigger them
-    NewTransition(idle, isPressed, bendingP);
-    NewTransition(bendingP, isBentP, bent);
-    NewTransition(bent, isPressed, bendingN);
-    NewTransition(bendingN, isBentN, idle);
-
-    // Initialize the state machine with first state
-    StateMachine::initialize(idle);
-    robot = NULL;
-    bitFlipState = NOFLIP;
-
-    // Convert hardcoded trajectories to actual motor commands
-    // Test for LKNE
-    // motorPosArrayConverter(posTrajectoriesDeg, posTrajectories, LKNEE);
-    // motorPosArrayConverter(negTrajectoriesDeg, negTrajectories, LKNEE);
-}
-
-// void bendTest::init(void)
-// {
-//     mark = 1;
-//     std::cout << "Welcome to The single joint bend STATE MACHINE"
-//               << "\n";
-//     StateMachine::init();
-// }
-//// FOR TESTING
-void bendTest::init(void)
-{
-    mark = 1;
-    calibrated = 0;
-    std::cout << "Welcome to The single joint bend STATE MACHINE"
-              << "\n";
-    StateMachine::init();
-    // Do'nt start robot unless drives have been configured for position control.
-    if (robot->homeCalibration())
-    {
-        std::cout << "position control initialized"
-                  << "\n";
-    }
-    else
-    {
-        std::cout << "Error initializing position control, SDO message timeout"
-                  << "\n";
-    }
-}
-void bendTest::activate(void)
-{
-    StateMachine::activate();
-}
-void bendTest::deactivate(void)
-{
-    StateMachine::deactivate();
-}
-// State Methods ----------------------------------------------------------
-// Moving states
-// Positive bending control machine
-void bendTest::BendingP::entry(void)
-{
-    //READ TIME OF MAIN
-    printf("Bending Positive State  Entered at Time %f\n", OWNER->mark);
-    if (OWNER->robot->positionControl == 0)
-    {
-        if (OWNER->robot->initPositionControl())
-        {
-            printf("drives finished position control configuration\n");
-            OWNER->robot->positionControl = 1;
-        }
-    }
-    // Set arrayIndex to zero
-    OWNER->robot->joints[1].zeroIndex();
-    printf("array index set to zero\n");
-}
-void bendTest::BendingP::during(void)
-{
-    long lastTarget = 0;
-    // if the green button is pressed move. Or do nothing/
-    if (!OWNER->greenButton)
-    {
-        printf("CURRENT JOINT position: %d \n,", OWNER->robot->joints[1].getPos());
-        //// DO FOR EACH JOINT
-        ///for (auto i = 0; i < 4; i++) {
-        int desiredIndex = OWNER->robot->joints[1].getIndex();
-        // Make sure not to move array index past last member of array
-        if (desiredIndex != (OWNER->robot->joints[1].NUM_TRAJ_POINTS))
-        {
-            // Get position to send to joint based on current arrayIndex, send off and increment index
-            // desired Position in motor command units
-            long desiredPos = OWNER->robot->joints[1].posTrajectories[desiredIndex];
-            lastTarget = OWNER->robot->joints[1].posTrajectories[desiredIndex - 1];
-            /*SINGLE JOINT FUNCTIONALITY TEST*/
-            //first member of array
-            if (desiredIndex == 0)
-            {
-                printf("Bending to motor command %f\n", desiredPos);
-                OWNER->robot->joints[1].applyPos(desiredPos);
-                // set state machine bitFlip to LOW state.
-                OWNER->robot->joints[1].incrementIndex();
-                OWNER->bitFlipState = BITLOW;
-            }
-            // check if last last position reached -> go to next position
-            /*THE BELLOW CONDITION MUST BOTH BE IN THE SAME UNITS, either deg or motorCOMMAND units*/
-            else if ((desiredIndex > 0) && OWNER->robot->joints[1].getPos() > (lastTarget - POSCLEARANCE) && OWNER->robot->joints[1].getPos() < (lastTarget + POSCLEARANCE))
-            {
-                OWNER->robot->joints[1].applyPos(desiredPos);
-                // set state machine bitFlip to LOW state.
-                OWNER->bitFlipState = BITLOW;
-                printf("Bending to pos %ld\n", desiredPos);
-                OWNER->robot->joints[1].incrementIndex();
-            }
-            /*ALL JOINT MOTION*/
-            // check if last last position reached -> go to next position
-            //        for (auto i = 0; i < 4; i++) {
-            //            //// TODO: CHANGE arrayIndex and Trajectories to be owned by each joint for easier, indexing and addressing
-            //            if (OWNER->robot->joints[i].getPos() == OWNER->posTrajectories[OWNER->arrayIndex - 1]) {
-            //                OWNER->robot->joints[i].applyPos(desiredPos);
-            //                // set state machine bitFlip to LOW state.
-            //                OWNER->bitFlipState = BITLOW;
-            //                printf("Bending to pos %f\n", desiredPos);
-            //                OWNER->arrayIndex++;
-            //                // Do first bit flip
-            //                // change stateMachine bit flip value to first one
-            //            }
-            //        }
-        }
-        else
-        {
-            // change 1 to i after single joint works
-            if (OWNER->robot->joints[1].getPos() == OWNER->robot->joints[1].posTrajectories[desiredIndex - 1])
-            {
-                printf("Final position of joint %d reached\n,", OWNER->robot->joints[1].getId());
-            }
-            else
-            {
-                printf("Joint %d Still going to final position\n", OWNER->robot->joints[1].getId());
-            }
-        }
-        // BITFLIP FUNCTION to trigger low and high bit flip needed for motor motion
-        OWNER->bitFlip();
-    }
-    else
-    {
-    }
-}
-
-void bendTest::BendingP::exit(void)
-{
-
-    printf("Bending Positive State Exited at Time %f\n", OWNER->mark);
-    OWNER->robot->joints[1].zeroIndex();
-}
-// Negative bending control machine
-void bendTest::BendingN::entry(void)
-{
-    //READ TIME OF MAIN
-    printf("Bending Negative State  Entered at Time %f\n", OWNER->mark);
-    // Set arrayIndex to zero
-    OWNER->robot->joints[1].zeroIndex();
-}
-void bendTest::BendingN::during(void)
-{
-    long lastTarget = 0;
-    // if the green button is pressed move. Or do nothing/
-    if (!OWNER->greenButton)
-    {
-        printf("CURRENT JOINT position: %d \n,", OWNER->robot->joints[1].getPos());
-        //// DO FOR EACH JOINT
-        ///for (auto i = 0; i < 4; i++) {
-        int desiredIndex = OWNER->robot->joints[1].getIndex();
-        // Make sure not to move array index past last member of array
-        if (desiredIndex != (OWNER->robot->joints[1].NUM_TRAJ_POINTS))
-        {
-            // Get position to send to joint based on current arrayIndex, send off and increment index
-            // desired Position in motor command units
-            long desiredPos = OWNER->robot->joints[1].negTrajectories[desiredIndex];
-            lastTarget = OWNER->robot->joints[1].negTrajectories[desiredIndex - 1];
-            /*SINGLE JOINT FUNCTIONALITY TEST*/
-            //first member of array
-            if (desiredIndex == 0)
-            {
-                printf("Bending to motor command %ld\n", desiredPos);
-                OWNER->robot->joints[1].applyPos(desiredPos);
-                // set state machine bitFlip to LOW state.
-                OWNER->robot->joints[1].incrementIndex();
-                OWNER->bitFlipState = BITLOW;
-            }
-            // check if last last position reached -> go to next position
-            /*THE BELLOW CONDITION MUST BOTH BE IN THE SAME UNITS, either deg or motorCOMMAND units*/
-            else if ((desiredIndex > 0) && OWNER->robot->joints[1].getPos() > (lastTarget - POSCLEARANCE) && OWNER->robot->joints[1].getPos() < (lastTarget + POSCLEARANCE))
-            {
-                OWNER->robot->joints[1].applyPos(desiredPos);
-                // set state machine bitFlip to LOW state.
-                OWNER->bitFlipState = BITLOW;
-                printf("Bending to motor command %ld\n", desiredPos);
-                OWNER->robot->joints[1].incrementIndex();
-            }
-            /*ALL JOINT MOTION*/
-            // check if last last position reached -> go to next position
-            //        for (auto i = 0; i < 4; i++) {
-            //            //// TODO: CHANGE arrayIndex and Trajectories to be owned by each joint for easier, indexing and addressing
-            //            if (OWNER->robot->joints[i].getPos() == OWNER->posTrajectories[OWNER->arrayIndex - 1]) {
-            //                OWNER->robot->joints[i].applyPos(desiredPos);
-            //                // set state machine bitFlip to LOW state.
-            //                OWNER->bitFlipState = BITLOW;
-            //                printf("Bending to pos %f\n", desiredPos);
-            //                OWNER->arrayIndex++;
-            //                // Do first bit flip
-            //                // change stateMachine bit flip value to first one
-            //            }
-            //        }
-        }
-        else
-        {
-            lastTarget = OWNER->robot->joints[1].negTrajectories[desiredIndex - 1];
-            // change 1 to i after single joint works
-            if (OWNER->robot->joints[1].getPos() > (lastTarget - POSCLEARANCE) && OWNER->robot->joints[1].getPos() < (lastTarget + POSCLEARANCE))
-            {
-                printf("Final position of joint %d reached\n,", OWNER->robot->joints[1].getId());
-            }
-            else
-            {
-                printf("Joint %d Still going to final position\n", OWNER->robot->joints[1].getId());
-            }
-        }
-        // BITFLIP FUNCTION to trigger low and high bit flip needed for motor motion
-        OWNER->bitFlip();
-    }
-    else
-    {
-    }
-}
-void bendTest::BendingN::exit(void)
-{
-
-    printf("Bending Negative State Exited at Time %f\n", OWNER->mark);
-    OWNER->robot->joints[1].zeroIndex();
-}
-// Bent(90deg)
-void bendTest::Bent::entry(void)
-{
-    //READ TIME OF MAIN
-    printf("Bent State Entered at Time %f\n", OWNER->mark);
-}
-void bendTest::Bent::during(void)
-{
-}
-void bendTest::Bent::exit(void)
-{
-
-    printf("Bent State Exited at Time %f\n", OWNER->mark);
-}
-void bendTest::Idle::entry(void)
-{
-    if (OWNER->calibrated == 0)
-    {
-        if (OWNER->robot->remapPDO())
-        {
-            printf("Motors PDO messages configured\n");
-            OWNER->calibrated = 1;
-        }
-    }
-
-    printf("Calibration State Entered at Time %f\n", OWNER->mark);
-}
-void bendTest::Idle::during(void)
-{
-
-    // Press yellow button to leave state
-}
-void bendTest::Idle::exit(void)
-{
-    printf("Calibration State Exited at Time %f\n", OWNER->mark);
-}
-// Events ------------------------------------------------------------
-bool bendTest::IsBentP::check(void)
-{
-    if (OWNER->robot->joints[1].getPos() > (KNEE_MOTOR_POS1 - POSCLEARANCE) && OWNER->robot->joints[1].getPos() < (KNEE_MOTOR_POS1 + POSCLEARANCE))
-    {
-        return true;
-    }
-    return false;
-}
-bool bendTest::IsBentN::check(void)
-{
-    if (OWNER->robot->joints[1].getPos() > (KNEE_MOTOR_POS2 - POSCLEARANCE) && OWNER->robot->joints[1].getPos() < (KNEE_MOTOR_POS2 + POSCLEARANCE))
-    {
-        return true;
-    }
-    return false;
-}
-bool bendTest::IsPressed::check(void)
-{
-    if (OWNER->button == 0)
-    {
-        return true;
-    }
-    return false;
-}
-
-// Robot interface methods ----------------------------------------------------------
-void bendTest::initRobot(Robot *rb)
-{
-
-    if (robot != NULL)
-    {
-        printf("Robot object already selected");
-    }
-    robot = rb;
-    // Perform proper initialization
-    robot->printInfo();
-};
-
-// Update button state, loop counter (mark) and joints from
-void bendTest::hwStateUpdate(void)
-{
-    /*BUTON CODE*/
-    // Once working Turn button into its own class and object: call button.getState() return 0 or 1, Statemachines have a button or an event could even
-
-    //Read all 4 BUTTONs  and print to screen
-    static char *BUTTONRED = "P8_7";
-    static char *BUTTONBLUE = "P8_8";
-    static char *BUTTONGREEN = "P8_9";
-    static char *BUTTONYELLOW = "P8_10";
-    int redbtn;
-    int bluebtn;
-    int greenbtn;
-    int yellowbtn;
-    GPIO::GPIOManager *gp = GPIO::GPIOManager::getInstance();
-    int red = GPIO::GPIOConst::getInstance()->getGpioByKey(BUTTONRED);
-    int blue = GPIO::GPIOConst::getInstance()->getGpioByKey(BUTTONBLUE);
-    int green = GPIO::GPIOConst::getInstance()->getGpioByKey(BUTTONGREEN);
-    int yellow = GPIO::GPIOConst::getInstance()->getGpioByKey(BUTTONYELLOW);
-    gp->setDirection(red, GPIO::INPUT);
-    gp->setDirection(blue, GPIO::INPUT);
-    gp->setDirection(green, GPIO::INPUT);
-    gp->setDirection(yellow, GPIO::INPUT);
-    redbtn = gp->getValue(red);
-    bluebtn = gp->getValue(blue);
-    greenbtn = gp->getValue(green);
-    yellowbtn = gp->getValue(yellow);
-    // Send buttons to statemachine variables
-    this->button = yellowbtn;
-    this->greenButton = greenbtn;
-    gp->~GPIOManager();
-    // printf("%d %d %d %d\n", redbtn, bluebtn, yellowbtn, greenbtn);
-
-    // Update loop time counter
-    mark = mark + 1;
-    // Update Joint angle from register
-    robot->joints[1].updateJoint();
-    // Update all the robots joint values.
-    robot->updateJoints();
-    // robot->printInfo();
-    robot->printTrajectories();
-}
-
-/*
- * bitFlip returns true if the second bit flip has occured, signalling a movement, else returns flase
- * 
- * 
- * 
-*/
-bool bendTest::bitFlip(void)
-{
-    int bit = bitFlipState;
-    /*switch statement replacement*/
-    switch (bit)
-    {
-    case (BITLOW):
-        //do first bit flip
-        if (!robot->joints[1].bitflipLow())
-        {
-            printf("Error in changing object dictionary entry");
-            return false;
-        }
-
-        // success, change bit flip state to high
-        bitFlipState = BITHIGH;
-        return false;
-        break;
-
-    case (BITHIGH):
-        //do second bit flip
-        if (!robot->joints[1].bitflipHigh())
-        {
-            printf("Error in changing object dictionary entry");
-            return false;
-        }
-        // bitflipHigh successful, change bitFlip state to unengaged and retrun true
-        bitFlipState = NOFLIP;
-        printf("Bit has been flipped for motor %d should move\n", robot->joints[1].getId());
-        return true;
-        break;
-    default:
-        //do nothing
-        printf("No motion triggered\n");
-        break;
-    }
-}
diff --git a/stateMachine/bendTest.h b/stateMachine/bendTest.h
deleted file mode 100644
index 6cd9868..0000000
--- a/stateMachine/bendTest.h
+++ /dev/null
@@ -1,81 +0,0 @@
-//
-// Created by William Campbell on 2019-09-30.
-//
-
-#ifndef EXO_BENDTEST_H
-#define EXO_BENDTEST_H
-
-#include "StateMachine.h"
-#include "Robot.h"
-#include "GPIOManager.h"
-#include "GPIOConst.h"
-
-class bendTest : public StateMachine
-{
-public:
-    bendTest(void);
-    void init(void);
-    void activate(void);
-    void deactivate(void);
-    void hwStateUpdate(void);
-    void initRobot(Robot *rb);
-    bool bitFlip();
-    bool initPositionControl();
-
-private:
-    // events
-    EventObject(IsBentP) * isBentP;
-    EventObject(IsBentN) * isBentN;
-    EventObject(IsPressed) * isPressed;
-
-    //
-    //    // states
-    StateObject(BendingP) * bendingP;
-    StateObject(BendingN) * bendingN;
-    StateObject(Bent) * bent;
-    StateObject(Idle) * idle;
-
-    // data
-    double mark;
-    int button;
-    int calibrated;
-    int greenButton;
-    int arrayIndex;
-    int bitFlipState;
-    // enum
-    // {
-    //     NUM_TRAJ_POINTS = 10
-    // };
-
-    // double posTrajectoriesDeg[] = {
-    //     0,
-    //     10,
-    //     20,
-    //     30,
-    //     40,
-    //     50,
-    //     60,
-    //     70,
-    //     80,
-    //     90};
-
-    // double negTrajectoriesDeg[] = {
-    //     90,
-    //     80,
-    //     70,
-    //     60,
-    //     50,
-    //     40,
-    //     30,
-    //     20,
-    //     10,
-    //     0};
-    // // Make two arrays for coresponding motor commands for trajectorues
-    // static int arrSize = sizeof(posTrajectoriesDeg) / sizeof(posTrajectoriesDeg[0]);
-    // long posTrajectories[arrSize];
-    // long negTrajectories[arrSize];
-    // Robot interface to be used by states to interact with hardware
-    Robot *robot;
-};
-
-#endif //EXO_BENDTEST_H
diff --git a/stateMachine/sitStand.cpp b/stateMachine/sitStand.cpp
deleted file mode 100644
index d6cfa98..0000000
--- a/stateMachine/sitStand.cpp
+++ /dev/null
@@ -1,435 +0,0 @@
-
-/**
- *
- * Created for ALEX exoskeleton on 2019-10-02.
- *
- * State Machine: Sit Stand task
- *
- *              isPressed        isCal              isPressed
- *  uncalibrated +--> calibrating  +--> idle(standing)  +--> sitingDown
- *       ^---------------+                 ^                   +
- *             calFail          isStanding |                   | isSitting
- *                                         |                   |
- *                                         standingUp<--+ sitting
- *                                                     isPressed
- * ALL states can also leave to error state as well, which holds the current pos
- * unitl another button is pressed and then goes to uncalibrated (LIMP)
- *
- */
-#include "sitStand.h"
-#include "CO_command.h"
-#define OWNER ((sitStand *)owner)
-#define POSCLEARANCE (10000)
-#define NOFLIP (100)
-#define BITHIGH (1)
-#define BITLOW (0)
-// For testing
-#define KNEE_MOTOR_POS1 (250880)
-#define KNEE_MOTOR_POS2 (0)
-
-// State Machine sitStand methods ----------------------------------------------------------
-sitStand::sitStand(void)
-{
-    // Create PRE-DESIGNED State Machine events, states and transitions
-    // StateMachine events
-    isYPressed = new IsYPressed(this);
-    isSitting = new IsSitting(this);
-    isStanding = new IsStanding(this);
-    // StateMache states
-    standing = new Standing(this);
-    sitting = new Sitting(this);
-    standingUp = new StandingUp(this);
-    sittingDwn = new SittingDwn(this);
-
-    // Create Trasitions between states and events which trigger them
-    NewTransition(standing, isYPressed, sittingDwn);
-    NewTransition(sittingDwn, isSitting, sitting);
-    NewTransition(sitting, isYPressed, standingUp);
-    NewTransition(standingUp, isStanding, standing);
-
-    // Initialize the state machine with first state
-    StateMachine::initialize(standing);
-    robot = NULL;
-    bitFlipState = NOFLIP;
-}
-
-void sitStand::init(void)
-{
-    mark = 1;
-    calibrated = 0;
-    std::cout << "Welcome to The single joint bend STATE MACHINE"
-              << "\n";
-    StateMachine::init();
-    // Dont start robot unless drives have been configured for position control.
-    if (robot->homeCalibration())
-    {
-        std::cout << "position control initialized"
-                  << "\n";
-    }
-    else
-    {
-        std::cout << "Error initializing position control, SDO message timeout"
-                  << "\n";
-    }
-}
-void sitStand::activate(void)
-{
-    StateMachine::activate();
-}
-void sitStand::deactivate(void)
-{
-    StateMachine::deactivate();
-}
-// State Methods ----------------------------------------------------------
-// Moving states
-// Positive bending control machine
-void sitStand::SittingDwn::entry(void)
-{
-    //READ TIME OF MAIN
-    printf("Bending Positive State  Entered at Time %f\n", OWNER->mark);
-    if (OWNER->robot->positionControl == 0)
-    {
-        if (OWNER->robot->initPositionControl())
-        {
-            printf("drives finished position control configuration\n");
-            OWNER->robot->positionControl = 1;
-        }
-    }
-    OWNER->bitFlipState = NOFLIP;
-    // Set arrayIndex to zero
-    for (auto i = 0; i < 4; i++)
-    {
-        OWNER->robot->joints[i].zeroIndex();
-        OWNER->robot->joints[i].setBitFlipState(NOFLIP);
-    }
-    OWNER->robot->printTrajectories();
-    printf("~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");
-    printf("PRESS GREEN TO BEGIN SITTING DOWN\n");
-    printf("~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");
-}
-void sitStand::SittingDwn::during(void)
-{
-    long lastTarget = 0;
-    // if the green button is pressed move. Or do nothing/
-    if (!OWNER->gButton){
-        for (auto i = 0; i < 4; i++){
-            if(OWNER->robot->joints[i].getBitFlipState() == NOFLIP){
-                int desiredIndex = OWNER->robot->joints[i].getIndex();
-                // Make sure not to move array index past last member of array
-                if (desiredIndex != (OWNER->robot->joints[i].NUM_TRAJ_POINTS)){
-                    // Get position to send to joint based on current arrayIndex, send off and increment index
-                    // desired Position in motor command units
-                    long desiredPos = OWNER->robot->joints[i].posTrajectories[desiredIndex];
-                    lastTarget = OWNER->robot->joints[i].posTrajectories[desiredIndex - 1];
-                    /*SINGLE JOINT FUNCTIONALITY TEST*/
-                    //first member of array
-                    if (desiredIndex == 0){
-                        printf("Joint %d Bending to pos %ld\n",  OWNER->robot->joints[i].getId(), desiredPos);
-                        OWNER->robot->joints[i].applyPos(desiredPos);
-                        // set state machine bitFlip to LOW state.
-                        OWNER->robot->joints[i].incrementIndex();
-                        OWNER->robot->joints[i].bitflipLow();
-                        OWNER->robot->joints[i].setBitFlipState(BITHIGH);
-                    }
-                    // check if last last position reached -> go to next position
-                    /*THE BELLOW CONDITION MUST BOTH BE IN THE SAME UNITS, either deg or motorCOMMAND units*/
-                    else if ((desiredIndex > 0) && OWNER->robot->joints[i].getPos() > (lastTarget - POSCLEARANCE) && OWNER->robot->joints[i].getPos() < (lastTarget + POSCLEARANCE)){
-                        OWNER->robot->joints[i].applyPos(desiredPos);
-                        // bring control word to low and setState to High for next round of program.
-                        OWNER->robot->joints[i].bitflipLow();
-                        OWNER->robot->joints[i].setBitFlipState(BITHIGH);
-                        printf("Joint %d Bending to pos %ld\n",  OWNER->robot->joints[i].getId(), desiredPos);
-                        OWNER->robot->joints[i].incrementIndex();
-                    }
-                }
-                else{
-                    // print out for testing
-                    lastTarget = OWNER->robot->joints[i].posTrajectories[desiredIndex - 1];
-                    if (OWNER->robot->joints[i].getPos() > (lastTarget - POSCLEARANCE) && OWNER->robot->joints[i].getPos() < (lastTarget + POSCLEARANCE)){
-                        // printf("Final position of joint %d reached\n", OWNER->robot->joints[i].getId());
-                    }
-                    else{
-                        printf("Joint %d Still going to final position\n", OWNER->robot->joints[i].getId());
-                        // robot->printInfo();
-                    }
-                }
-            }
-            else{
-                OWNER->robot->joints[i].bitflipHigh();
-            }
-        }
-    }
-}
-void sitStand::SittingDwn::exit(void)
-{
-
-    printf("Bending Positive State Exited at Time %f\n", OWNER->mark);
-    for (auto i = 0; i < 4; i++)
-    {
-        OWNER->robot->joints[i].zeroIndex();
-    }
-}
-// Negative bending control machine
-void sitStand::StandingUp::entry(void)
-{
-    //READ TIME OF MAIN
-    printf("Bending Negative State  Entered at Time %f\n", OWNER->mark);
-    // Set arrayIndex to zero
-    for (auto i = 0; i < 4; i++)
-    {
-        OWNER->robot->joints[i].zeroIndex();
-        OWNER->robot->joints[i].setBitFlipState(NOFLIP);
-    }
-}
-void sitStand::StandingUp::during(void)
-{
-    long lastTarget = 0;
-    // if the green button is pressed move. Or do nothing/
-    if (!OWNER->gButton){
-        for (auto i = 0; i < 4; i++){
-            if(OWNER->robot->joints[i].getBitFlipState() == NOFLIP){
-                int desiredIndex = OWNER->robot->joints[i].getIndex();
-                // Make sure not to move array index past last member of array
-                if (desiredIndex != (OWNER->robot->joints[i].NUM_TRAJ_POINTS)){
-                    // Get position to send to joint based on current arrayIndex, send off and increment index
-                    // desired Position in motor command units
-                    long desiredPos = OWNER->robot->joints[i].negTrajectories[desiredIndex];
-                    lastTarget = OWNER->robot->joints[i].negTrajectories[desiredIndex - 1];
-                    /*SINGLE JOINT FUNCTIONALITY TEST*/
-                    //first member of array
-                    if (desiredIndex == 0){
-                       printf("Joint %d Bending to pos %ld\n",  OWNER->robot->joints[i].getId(), desiredPos);
-                        OWNER->robot->joints[i].applyPos(desiredPos);
-                        // set state machine bitFlip to LOW state.
-                        OWNER->robot->joints[i].incrementIndex();
-                        OWNER->robot->joints[i].bitflipLow();
-                        OWNER->robot->joints[i].setBitFlipState(BITHIGH);
-                    }
-                    // check if last last position reached -> go to next position
-                    /*THE BELLOW CONDITION MUST BOTH BE IN THE SAME UNITS, either deg or motorCOMMAND units*/
-                    else if ((desiredIndex > 0) && OWNER->robot->joints[i].getPos() > (lastTarget - POSCLEARANCE) && OWNER->robot->joints[i].getPos() < (lastTarget + POSCLEARANCE)){
-                        OWNER->robot->joints[i].applyPos(desiredPos);
-                        // bring control word to low and setState to High for next round of program.
-                        OWNER->robot->joints[i].bitflipLow();
-                        OWNER->robot->joints[i].setBitFlipState(BITHIGH);
-                        printf("Joint %d Bending to pos %ld\n",  OWNER->robot->joints[i].getId(), desiredPos);
-                        OWNER->robot->joints[i].incrementIndex();
-                    }
-                }
-                else{
-                    lastTarget = OWNER->robot->joints[i].negTrajectories[desiredIndex - 1];
-                    if (OWNER->robot->joints[i].getPos() > (lastTarget - POSCLEARANCE) && OWNER->robot->joints[i].getPos() < (lastTarget + POSCLEARANCE)){
-                        //printf("Final position of joint %d reached\n,", OWNER->robot->joints[i].getId());
-                    }
-                    else{
-                        //printf("Joint %d Still going to final position\n", OWNER->robot->joints[i].getId());
-                        // robot->printInfo();
-                    }
-                }
-            }
-            else{
-                OWNER->robot->joints[i].bitflipHigh();
-            }
-        }
-    }
-}
-void sitStand::StandingUp::exit(void)
-{
-
-    printf("Standing up motion State Exited at Time %f\n", OWNER->mark);
-
-    OWNER->robot->joints[1].zeroIndex();
-}
-void sitStand::Sitting::entry(void)
-{
-    //READ TIME OF MAIN
-    printf("Sitting State Entered at Time %f\n", OWNER->mark);
-    printf("~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");
-    printf("PRESS YELLOW TO START STANDING UP\n");
-    printf("~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");
-}
-void sitStand::Sitting::during(void)
-{
-}
-void sitStand::Sitting::exit(void)
-{
-
-    printf("Sitting State Exited at Time %f\n", OWNER->mark);
-}
-void sitStand::Standing::entry(void)
-{
-    printf("Standing State Entered at Time %f\n", OWNER->mark);
-    if (OWNER->calibrated == 0)
-    {
-        if (OWNER->robot->remapPDO())
-        {
-            printf("Motors PDO messages configured\n");
-            OWNER->calibrated = 1;
-        }
-    }
-    else{
-        printf("Motors already calibrated for motion\n");
-    }
-
-    printf("~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");
-    printf("PRESS YELLOW TO START Sitting DOWN\n");
-    printf("~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");
-}
-void sitStand::Standing::during(void)
-{
-
-    // Press yellow button to leave state
-}
-void sitStand::Standing::exit(void)
-{
-    printf("Standing State Exited at Time %f\n", OWNER->mark);
-}
-// Events ------------------------------------------------------------
-bool sitStand::IsSitting::check(void)
-{
-    int reached = 0;
-    for (auto i = 0; i < 4; i++)
-    {
-        int finalPos = OWNER->robot->joints[i].posTrajectories[OWNER->robot->joints[i].NUM_TRAJ_POINTS - 1];
-        if (OWNER->robot->joints[i].getPos() > (finalPos - POSCLEARANCE) && OWNER->robot->joints[i].getPos() < (finalPos + POSCLEARANCE))
-        {
-            reached++;
-            printf("Joint %d final position reached\n", OWNER->robot->joints[i].getId());
-        }
-    }
-    if (reached == 4)
-    {
-        return true;
-    }
-    else
-    {
-        return false;
-    }
-}
-bool sitStand::IsStanding::check(void)
-{
-    int reached = 0;
-    for (auto i = 0; i < 4; i++)
-    {
-        int finalPos = OWNER->robot->joints[i].negTrajectories[OWNER->robot->joints[i].NUM_TRAJ_POINTS - 1];
-        if (OWNER->robot->joints[i].getPos() > (finalPos - POSCLEARANCE) && OWNER->robot->joints[i].getPos() < (finalPos + POSCLEARANCE))
-        {
-            reached++;
-            printf("Joint %d final position reached\n", OWNER->robot->joints[i].getId());
-        }
-    }
-    if (reached == 4)
-    {
-        return true;
-    }
-    else
-    {
-        return false;
-    }
-}
-bool sitStand::IsYPressed::check(void)
-{
-    if (OWNER->yButton == 0)
-    {
-        return true;
-    }
-    return false;
-}
-
-// Robot interface methods ----------------------------------------------------------
-void sitStand::initRobot(Robot *rb)
-{
-
-    if (robot != NULL)
-    {
-        printf("Robot object already selected");
-    }
-    robot = rb;
-    // Perform proper initialization
-    robot->printInfo();
-};
-
-// Update button state, loop counter (mark) and joints from
-void sitStand::hwStateUpdate(void)
-{
-    /*BUTON CODE*/
-    // TODO: Once working Turn button into its own class and object: call button.getState() return 0 or 1, Statemachines have a button or an event could even
-
-    //Read all 4 BUTTONs  and print to screen
-    static char *BUTTONRED = "P8_7";
-    static char *BUTTONBLUE = "P8_8";
-    static char *BUTTONGREEN = "P8_9";
-    static char *BUTTONYELLOW = "P8_10";
-    int redbtn;
-    int bluebtn;
-    int greenbtn;
-    int yellowbtn;
-    GPIO::GPIOManager *gp = GPIO::GPIOManager::getInstance();
-    int red = GPIO::GPIOConst::getInstance()->getGpioByKey(BUTTONRED);
-    int blue = GPIO::GPIOConst::getInstance()->getGpioByKey(BUTTONBLUE);
-    int green = GPIO::GPIOConst::getInstance()->getGpioByKey(BUTTONGREEN);
-    int yellow = GPIO::GPIOConst::getInstance()->getGpioByKey(BUTTONYELLOW);
-    gp->setDirection(red, GPIO::INPUT);
-    gp->setDirection(blue, GPIO::INPUT);
-    gp->setDirection(green, GPIO::INPUT);
-    gp->setDirection(yellow, GPIO::INPUT);
-    redbtn = gp->getValue(red);
-    bluebtn = gp->getValue(blue);
-    greenbtn = gp->getValue(green);
-    yellowbtn = gp->getValue(yellow);
-    // Send buttons to statemachine variables
-    this->yButton = yellowbtn;
-    this->gButton = greenbtn;
-    this->bButton = bluebtn;
-    this->rButton = redbtn;
-    gp->~GPIOManager();
-    // Update loop time counter
-    mark = mark + 1;
-    robot->updateJoints();
-    // robot->printInfo();s
-    // robot->printTrajectories();
-}
-
-/*
- * bitFlip returns true if the second bit flip has occured, signalling a movement, else returns flase
- * 
- * 
- * 
-*/
-bool sitStand::bitFlip(int i)
-{
-    int bit = bitFlipState;
-    /*switch statement replacement*/
-    switch (bit)
-    {
-    case (BITLOW):
-        //do first bit flip
-        if (!robot->joints[i].bitflipLow())
-        {
-            printf("Error in changing object dictionary entry");
-            return false;
-        }
-
-        // success, change bit flip state to high
-        bitFlipState = BITHIGH;
-        return false;
-        break;
-
-    case (BITHIGH):
-        //do second bit flip
-        if (!robot->joints[i].bitflipHigh())
-        {
-            printf("Error in changing object dictionary entry");
-            return false;
-        }
-        // bitflipHigh successful, change bitFlip state to unengaged and retrun true
-        bitFlipState = NOFLIP;
-        printf("Bit has been flipped for motor %d should move\n", robot->joints[i].getId());
-        return true;
-        break;
-    default:
-        //do nothing
-        // printf("No motion triggered\n");
-        break;
-    }
-}
diff --git a/stateMachine/sitStand.h b/stateMachine/sitStand.h
deleted file mode 100644
index 559cbe9..0000000
--- a/stateMachine/sitStand.h
+++ /dev/null
@@ -1,51 +0,0 @@
-//
-// Created by William Campbell on 2019-09-30.
-//
-
-#ifndef EXO_SITSTAND_H
-#define EXO_SITSTAND_H
-
-#include "StateMachine.h"
-#include "Robot.h"
-#include "GPIOManager.h"
-#include "GPIOConst.h"
-
-class sitStand : public StateMachine
-{
-public:
-    sitStand(void);
-    void init(void);
-    void activate(void);
-    void deactivate(void);
-    void hwStateUpdate(void);
-    void initRobot(Robot *rb);
-    bool bitFlip(int i);
-    bool initPositionControl();
-
-private:
-    // events
-    EventObject(IsSitting) * isSitting;
-    EventObject(IsStanding) * isStanding;
-    EventObject(IsYPressed) * isYPressed;
-
-    //
-    //    // states
-    StateObject(SittingDwn) * sittingDwn;
-    StateObject(StandingUp) * standingUp;
-    StateObject(Sitting) * sitting;
-    StateObject(Standing) * standing;
-
-    // data
-    double mark;
-    int calibrated;
-    int gButton;
-    int yButton;
-    int bButton;
-    int rButton;
-    int arrayIndex;
-    int bitFlipState;
-    // Robot interface to be used by states to interact with hardware
-    Robot *robot;
-};
-
-#endif //EXO_SITSTAND_H
